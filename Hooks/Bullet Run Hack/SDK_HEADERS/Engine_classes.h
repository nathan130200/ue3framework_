/*
#############################################################################################
# Bullet Run (Unknown) SDK
# ========================================================================================= #
# File: Engine_classes.h
# ========================================================================================= #
*/

#ifdef _MSC_VER
	#pragma pack ( push, 0x4 )
#endif

/*
# ========================================================================================= #
# Constants
# ========================================================================================= #
*/

#define CONST_MINFLOORZ                                          0.7
#define CONST_ACTORMAXSTEPHEIGHT                                 35.0
#define CONST_RBSTATE_LINVELSCALE                                10.0
#define CONST_RBSTATE_ANGVELSCALE                                1000.0
#define CONST_RB_None                                            0x00
#define CONST_RB_NeedsUpdate                                     0x01
#define CONST_RB_Sleeping                                        0x02
#define CONST_REP_RBLOCATION_ERROR_TOLERANCE_SQ                  16.0f
#define CONST_TRACEFLAG_CameraTrace                              256
#define CONST_TRACEFLAG_SoundOcclusion                           128
#define CONST_TRACEFLAG_Pawns                                    64
#define CONST_TRACEFLAG_IncludeInteractibles                     32
#define CONST_TRACEFLAG_ObeyBlockRadialRayCastRules              16
#define CONST_TRACEFLAG_Blocking                                 8
#define CONST_TRACEFLAG_SkipMovers                               4
#define CONST_TRACEFLAG_PhysicsVolumes                           2
#define CONST_TRACEFLAG_Bullet                                   1
#define CONST_SDPG_NumBits                                       3
#define CONST_LATENT_MOVETOWARD                                  503
#define CONST_MAX_ACTIVE_CAMERA_ANIMS                            8
#define CONST_MAXCLIENTUPDATEINTERVAL                            0.25
#define CONST_CLIENTADJUSTUPDATECOST                             180.0
#define CONST_MAXVEHICLEPOSITIONERRORSQUARED                     900.0
#define CONST_MAXNEARZEROVELOCITYSQUARED                         9.0
#define CONST_MAXPOSITIONERRORSQUARED                            3.0
#define CONST_BLOCKEDPATHCOST                                    10000000
#define CONST_INFINITE_PATH_COST                                 10000000
#define CONST_DEFAULT_SIZE_X                                     1024
#define CONST_DEFAULT_SIZE_Y                                     768
#define CONST_MAX_SUPPORTED_GAMEPADS                             4
#define CONST_MaxHistory                                         16
#define CONST_CursorBlinkTime                                    0.5f
#define CONST_COVERLINK_DangerDist                               1536.f
#define CONST_COVERLINK_EdgeExposureDot                          0.85f
#define CONST_COVERLINK_EdgeCheckDot                             0.25f
#define CONST_COVERLINK_ExposureDot                              0.4f
#define CONST_NULLCHARACTER                                      127
#define CONST_MAX_INSTANCES_PER_CLASS                            5
#define CONST_MAX_BOOKMARK_NUMBER                                10
#define CONST_FSM_DEFAULTRECYCLETIME                             0.2
#define CONST_SCENEFILTER_None                                   0x00000000
#define CONST_SCENEFILTER_IncludeTransient                       0x00000001
#define CONST_SCENEFILTER_InputProcessorOnly                     0x00000002
#define CONST_SCENEFILTER_PausersOnly                            0x00000004
#define CONST_SCENEFILTER_PrimitiveUsersOnly                     0x00000008
#define CONST_SCENEFILTER_UsesPostProcessing                     0x00000010
#define CONST_SCENEFILTER_ReceivesFocus                          0x00000020
#define CONST_SCENEFILTER_Any                                    0xFFFFFFFF
#define CONST_MAX_AIGROUP_NUMBER                                 10
#define CONST_LINECHECK_GRANULARITY                              768.f
#define CONST_NUM_PATHFINDING_PARAMS                             9
#define CONST_NumBreadCrumbs                                     10
#define CONST_PROCBUILDING_VERSION                               1
#define CONST_ROOF_MINZ                                          0.7

/*
# ========================================================================================= #
# Enums
# ========================================================================================= #
*/


/*
# ========================================================================================= #
# Classes
# ========================================================================================= #
*/

// Class Engine.Actor
// 0x019C (0x01D8 - 0x003C)
class AActor : public UObject
{
public:
	unsigned long                                      bSpecialBlockingVolumeCollision : 1;              		// 0x003C (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bNotDedicatedServerRelevant : 1;                  		// 0x003C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bAGSpreadDamageToClients : 1;                     		// 0x003C (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bAgCollideBSP : 1;                                		// 0x003C (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bAgForceCollideVolumes : 1;                       		// 0x003C (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      inViewFrustum : 1;                                		// 0x003C (0x0004) [0x0000000000003000] [0x00000020] ( CPF_Native | CPF_Transient )
	unsigned long                                      bStatic : 1;                                      		// 0x003C (0x0004) [0x0000000000000002] [0x00000040] ( CPF_Const )
	unsigned long                                      bHidden : 1;                                      		// 0x003C (0x0004) [0x0000000000000023] [0x00000080] ( CPF_Edit | CPF_Const | CPF_Net )
	unsigned long                                      bNoDelete : 1;                                    		// 0x003C (0x0004) [0x0000000000000002] [0x00000100] ( CPF_Const )
	unsigned long                                      bDeleteMe : 1;                                    		// 0x003C (0x0004) [0x0000000000000002] [0x00000200] ( CPF_Const )
	unsigned long                                      bTicked : 1;                                      		// 0x003C (0x0004) [0x0000000000002002] [0x00000400] ( CPF_Const | CPF_Transient )
	unsigned long                                      bOnlyOwnerSee : 1;                                		// 0x003C (0x0004) [0x0000000000000002] [0x00000800] ( CPF_Const )
	unsigned long                                      bTickIsDisabled : 1;                              		// 0x003C (0x0004) [0x0000000000000002] [0x00001000] ( CPF_Const )
	unsigned long                                      bForceAttachEvents : 1;                           		// 0x003C (0x0004) [0x0000000000002000] [0x00002000] ( CPF_Transient )
	unsigned long                                      bWorldGeometry : 1;                               		// 0x003C (0x0004) [0x0000000000000000] [0x00004000] 
	unsigned long                                      bIgnoreRigidBodyPawns : 1;                        		// 0x003C (0x0004) [0x0000000000000000] [0x00008000] 
	unsigned long                                      bOrientOnSlope : 1;                               		// 0x003C (0x0004) [0x0000000000000000] [0x00010000] 
	unsigned long                                      bIgnoreEncroachers : 1;                           		// 0x003C (0x0004) [0x0000000000000002] [0x00020000] ( CPF_Const )
	unsigned long                                      bPushedByEncroachers : 1;                         		// 0x003C (0x0004) [0x0000000000000000] [0x00040000] 
	unsigned long                                      bDestroyedByInterpActor : 1;                      		// 0x003C (0x0004) [0x0000000000000000] [0x00080000] 
	unsigned long                                      bRouteBeginPlayEvenIfStatic : 1;                  		// 0x003C (0x0004) [0x0000000000000002] [0x00100000] ( CPF_Const )
	unsigned long                                      bIsMoving : 1;                                    		// 0x003C (0x0004) [0x0000000000000002] [0x00200000] ( CPF_Const )
	unsigned long                                      bAlwaysEncroachCheck : 1;                         		// 0x003C (0x0004) [0x0000000000000000] [0x00400000] 
	unsigned long                                      bHasAlternateTargetLocation : 1;                  		// 0x003C (0x0004) [0x0000000000000000] [0x00800000] 
	unsigned long                                      bCanStepUpOn : 1;                                 		// 0x003C (0x0004) [0x0000000000000001] [0x01000000] ( CPF_Edit )
	unsigned long                                      bNetTemporary : 1;                                		// 0x003C (0x0004) [0x0000000000000002] [0x02000000] ( CPF_Const )
	unsigned long                                      bOnlyRelevantToOwner : 1;                         		// 0x003C (0x0004) [0x0000000000000002] [0x04000000] ( CPF_Const )
	unsigned long                                      bNetDirty : 1;                                    		// 0x003C (0x0004) [0x0000000000002000] [0x08000000] ( CPF_Transient )
	unsigned long                                      bAlwaysRelevant : 1;                              		// 0x003C (0x0004) [0x0000000000000000] [0x10000000] 
	unsigned long                                      bReplicateInstigator : 1;                         		// 0x003C (0x0004) [0x0000000000000000] [0x20000000] 
	unsigned long                                      bReplicateMovement : 1;                           		// 0x003C (0x0004) [0x0000000000000000] [0x40000000] 
	unsigned long                                      bSkipActorPropertyReplication : 1;                		// 0x003C (0x0004) [0x0000000000000000] [0x80000000] 
	unsigned long                                      bUpdateSimulatedPosition : 1;                     		// 0x0040 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bTearOff : 1;                                     		// 0x0040 (0x0004) [0x0000000000000020] [0x00000002] ( CPF_Net )
	unsigned long                                      bOnlyDirtyReplication : 1;                        		// 0x0040 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bAllowFluidSurfaceInteraction : 1;                		// 0x0040 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bDemoRecording : 1;                               		// 0x0040 (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	unsigned long                                      bDemoOwner : 1;                                   		// 0x0040 (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bForceDemoRelevant : 1;                           		// 0x0040 (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bNetInitialRotation : 1;                          		// 0x0040 (0x0004) [0x0000000000000002] [0x00000080] ( CPF_Const )
	unsigned long                                      bReplicateRigidBodyLocation : 1;                  		// 0x0040 (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      bKillDuringLevelTransition : 1;                   		// 0x0040 (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bExchangedRoles : 1;                              		// 0x0040 (0x0004) [0x0000000000000002] [0x00000400] ( CPF_Const )
	unsigned long                                      bConsiderAllStaticMeshComponentsForStreaming : 1; 		// 0x0040 (0x0004) [0x0000000000000001] [0x00000800] ( CPF_Edit )
	unsigned long                                      bDebug : 1;                                       		// 0x0040 (0x0004) [0x0000000000000001] [0x00001000] ( CPF_Edit )
	unsigned long                                      bPostRenderIfNotVisible : 1;                      		// 0x0040 (0x0004) [0x0000000000000000] [0x00002000] 
	unsigned long                                      bForceNetUpdate : 1;                              		// 0x0040 (0x0004) [0x0000000000002000] [0x00004000] ( CPF_Transient )
	unsigned long                                      bPendingNetUpdate : 1;                            		// 0x0040 (0x0004) [0x0000000000002002] [0x00008000] ( CPF_Const | CPF_Transient )
	unsigned long                                      ClientsideTakeDamage : 1;                         		// 0x0040 (0x0004) [0x0000000000000001] [0x00010000] ( CPF_Edit )
	unsigned long                                      bHardAttach : 1;                                  		// 0x0040 (0x0004) [0x0000000000000023] [0x00020000] ( CPF_Edit | CPF_Const | CPF_Net )
	unsigned long                                      bIgnoreBaseRotation : 1;                          		// 0x0040 (0x0004) [0x0000000000000001] [0x00040000] ( CPF_Edit )
	unsigned long                                      bShadowParented : 1;                              		// 0x0040 (0x0004) [0x0000000000000001] [0x00080000] ( CPF_Edit )
	unsigned long                                      bSkipAttachedMoves : 1;                           		// 0x0040 (0x0004) [0x0000000000000001] [0x00100000] ( CPF_Edit )
	unsigned long                                      bCanBeAdheredTo : 1;                              		// 0x0040 (0x0004) [0x0000000000000000] [0x00200000] 
	unsigned long                                      bCanBeFrictionedTo : 1;                           		// 0x0040 (0x0004) [0x0000000000000000] [0x00400000] 
	unsigned long                                      bHurtEntry : 1;                                   		// 0x0040 (0x0004) [0x0000000000000000] [0x00800000] 
	unsigned long                                      bGameRelevant : 1;                                		// 0x0040 (0x0004) [0x0000000000000000] [0x01000000] 
	unsigned long                                      bMovable : 1;                                     		// 0x0040 (0x0004) [0x0000000000000002] [0x02000000] ( CPF_Const )
	unsigned long                                      bDestroyInPainVolume : 1;                         		// 0x0040 (0x0004) [0x0000000000000000] [0x04000000] 
	unsigned long                                      bCanBeDamaged : 1;                                		// 0x0040 (0x0004) [0x0000000000000000] [0x08000000] 
	unsigned long                                      bShouldBaseAtStartup : 1;                         		// 0x0040 (0x0004) [0x0000000000000000] [0x10000000] 
	unsigned long                                      bPendingDelete : 1;                               		// 0x0040 (0x0004) [0x0000000000000000] [0x20000000] 
	unsigned long                                      bCanTeleport : 1;                                 		// 0x0040 (0x0004) [0x0000000000000000] [0x40000000] 
	unsigned long                                      bAlwaysTick : 1;                                  		// 0x0040 (0x0004) [0x0000000000000002] [0x80000000] ( CPF_Const )
	unsigned long                                      bBlocksNavigation : 1;                            		// 0x0044 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      BlockRigidBody : 1;                               		// 0x0044 (0x0004) [0x0000000000002003] [0x00000002] ( CPF_Edit | CPF_Const | CPF_Transient )
	unsigned long                                      bOnlyRBCollision : 1;                             		// 0x0044 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bAgBlockRadialRayCast : 1;                        		// 0x0044 (0x0004) [0x0000000000000003] [0x00000008] ( CPF_Edit | CPF_Const )
	unsigned long                                      bCollideWhenPlacing : 1;                          		// 0x0044 (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bCollideActors : 1;                               		// 0x0044 (0x0004) [0x0000000000000022] [0x00000020] ( CPF_Const | CPF_Net )
	unsigned long                                      bCollideWorld : 1;                                		// 0x0044 (0x0004) [0x0000000000000020] [0x00000040] ( CPF_Net )
	unsigned long                                      bCollideComplex : 1;                              		// 0x0044 (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bBlockActors : 1;                                 		// 0x0044 (0x0004) [0x0000000000000020] [0x00000100] ( CPF_Net )
	unsigned long                                      bProjTarget : 1;                                  		// 0x0044 (0x0004) [0x0000000000000020] [0x00000200] ( CPF_Net )
	unsigned long                                      bBlocksTeleport : 1;                              		// 0x0044 (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      bBlockSoundOcclusionRayCast : 1;                  		// 0x0044 (0x0004) [0x0000000000000001] [0x00000800] ( CPF_Edit )
	unsigned long                                      bMoveIgnoresDestruction : 1;                      		// 0x0044 (0x0004) [0x0000000000000000] [0x00001000] 
	unsigned long                                      bProjectileMoveSingleBlocking : 1;                		// 0x0044 (0x0004) [0x0000000000000000] [0x00002000] 
	unsigned long                                      bNoEncroachCheck : 1;                             		// 0x0044 (0x0004) [0x0000000000000001] [0x00004000] ( CPF_Edit )
	unsigned long                                      bCollideAsEncroacher : 1;                         		// 0x0044 (0x0004) [0x0000000000000000] [0x00008000] 
	unsigned long                                      bPhysRigidBodyOutOfWorldCheck : 1;                		// 0x0044 (0x0004) [0x0000000000000001] [0x00010000] ( CPF_Edit )
	unsigned long                                      bComponentOutsideWorld : 1;                       		// 0x0044 (0x0004) [0x0000000000002002] [0x00020000] ( CPF_Const | CPF_Transient )
	unsigned long                                      bForceOctreeSNFilter : 1;                         		// 0x0044 (0x0004) [0x0000000000000000] [0x00040000] 
	unsigned long                                      bRigidBodyWasAwake : 1;                           		// 0x0044 (0x0004) [0x0000000000002002] [0x00080000] ( CPF_Const | CPF_Transient )
	unsigned long                                      bCallRigidBodyWakeEvents : 1;                     		// 0x0044 (0x0004) [0x0000000000000000] [0x00100000] 
	unsigned long                                      bBounce : 1;                                      		// 0x0044 (0x0004) [0x0000000000000000] [0x00200000] 
	unsigned long                                      bJustTeleported : 1;                              		// 0x0044 (0x0004) [0x0000000000000002] [0x00400000] ( CPF_Const )
	unsigned long                                      bNetInitial : 1;                                  		// 0x0044 (0x0004) [0x0000000000000002] [0x00800000] ( CPF_Const )
	unsigned long                                      bNetOwner : 1;                                    		// 0x0044 (0x0004) [0x0000000000000022] [0x01000000] ( CPF_Const | CPF_Net )
	unsigned long                                      bHiddenEd : 1;                                    		// 0x0044 (0x0004) [0x0000000000000002] [0x02000000] ( CPF_Const )
	unsigned long                                      bEditable : 1;                                    		// 0x0044 (0x0004) [0x0000000000000002] [0x04000000] ( CPF_Const )
	unsigned long                                      bHiddenEdGroup : 1;                               		// 0x0044 (0x0004) [0x0000000020000002] [0x08000000] ( CPF_Const | CPF_Deprecated )
	unsigned long                                      bHiddenEdLayer : 1;                               		// 0x0044 (0x0004) [0x0000000000000002] [0x10000000] ( CPF_Const )
	unsigned long                                      bHiddenEdCustom : 1;                              		// 0x0044 (0x0004) [0x0000000000000002] [0x20000000] ( CPF_Const )
	unsigned long                                      bHiddenEdTemporary : 1;                           		// 0x0044 (0x0004) [0x0000000000002000] [0x40000000] ( CPF_Transient )
	unsigned long                                      bHiddenEdLevel : 1;                               		// 0x0044 (0x0004) [0x0000000000002000] [0x80000000] ( CPF_Transient )
	unsigned long                                      bEdShouldSnap : 1;                                		// 0x0048 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bTempEditor : 1;                                  		// 0x0048 (0x0004) [0x0000000000002002] [0x00000002] ( CPF_Const | CPF_Transient )
	unsigned long                                      bPathColliding : 1;                               		// 0x0048 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bPathTemp : 1;                                    		// 0x0048 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      bScriptInitialized : 1;                           		// 0x0048 (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bLockLocation : 1;                                		// 0x0048 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bForceAllowKismetModification : 1;                		// 0x0048 (0x0004) [0x0000000000000002] [0x00000040] ( CPF_Const )
	unsigned long                                      bDebugEffectIsRelevant : 1;                       		// 0x0048 (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	TArray< class UActorComponent* >                   Components;                                       		// 0x004C (0x000C) [0x000000000448000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	TArray< class UActorComponent* >                   AllComponents;                                    		// 0x0058 (0x000C) [0x000000000448200A]              ( CPF_Const | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	struct FVector                                     Location;                                         		// 0x0064 (0x000C) [0x0000000000000023]              ( CPF_Edit | CPF_Const | CPF_Net )
	struct FRotator                                    Rotation;                                         		// 0x0070 (0x000C) [0x0000000000000023]              ( CPF_Edit | CPF_Const | CPF_Net )
	float                                              DrawScale;                                        		// 0x007C (0x0004) [0x0000000000000023]              ( CPF_Edit | CPF_Const | CPF_Net )
	struct FVector                                     DrawScale3D;                                      		// 0x0080 (0x000C) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FVector                                     PrePivot;                                         		// 0x008C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      EditorIconColor;                                  		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     screenPosition;                                   		// 0x009C (0x000C) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
	struct FRenderCommandFence                         DetachFence;                                      		// 0x00A8 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              CustomTimeDilation;                               		// 0x00AC (0x0004) [0x0000000000000000]              
	unsigned char                                      Physics;                                          		// 0x00B0 (0x0001) [0x0000000000000023]              ( CPF_Edit | CPF_Const | CPF_Net )
	unsigned char                                      RemoteRole;                                       		// 0x00B1 (0x0001) [0x0000000000000020]              ( CPF_Net )
	unsigned char                                      Role;                                             		// 0x00B2 (0x0001) [0x0000000000000020]              ( CPF_Net )
	unsigned char                                      CollisionType;                                    		// 0x00B3 (0x0001) [0x0000000000002003]              ( CPF_Edit | CPF_Const | CPF_Transient )
	unsigned char                                      ReplicatedCollisionType;                          		// 0x00B4 (0x0001) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	unsigned char                                      TickGroup;                                        		// 0x00B5 (0x0001) [0x0000000000000002]              ( CPF_Const )
	class AActor*                                      Owner;                                            		// 0x00B8 (0x0004) [0x0000000000000022]              ( CPF_Const | CPF_Net )
	class AActor*                                      Base;                                             		// 0x00BC (0x0004) [0x0000000000000023]              ( CPF_Edit | CPF_Const | CPF_Net )
	TArray< struct FTimerData >                        Timers;                                           		// 0x00C0 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	int                                                NetTag;                                           		// 0x00CC (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              NetUpdateTime;                                    		// 0x00D0 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              NetUpdateFrequency;                               		// 0x00D4 (0x0004) [0x0000000000000000]              
	float                                              NetPriority;                                      		// 0x00D8 (0x0004) [0x0000000000000000]              
	float                                              LastNetUpdateTime;                                		// 0x00DC (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              TimeSinceLastTick;                                		// 0x00E0 (0x0004) [0x0000000000000000]              
	class APawn*                                       Instigator;                                       		// 0x00E4 (0x0004) [0x0000000000000020]              ( CPF_Net )
	class AWorldInfo*                                  WorldInfo;                                        		// 0x00E8 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              LifeSpan;                                         		// 0x00EC (0x0004) [0x0000000000000000]              
	float                                              CreationTime;                                     		// 0x00F0 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              LastRenderTime;                                   		// 0x00F4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FName                                       Tag;                                              		// 0x00F8 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       InitialState;                                     		// 0x0100 (0x0008) [0x0000000000000000]              
	struct FName                                       Layer;                                            		// 0x0108 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       Group;                                            		// 0x0110 (0x0008) [0x0000000020000000]              ( CPF_Deprecated )
	struct FQWord                                      HiddenEditorViews;                                		// 0x0118 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	TArray< class AActor* >                            Touching;                                         		// 0x0120 (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	TArray< class AActor* >                            Children;                                         		// 0x012C (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	float                                              LatentFloat;                                      		// 0x0138 (0x0004) [0x0000000000000002]              ( CPF_Const )
	class UAnimNodeSequence*                           LatentSeqNode;                                    		// 0x013C (0x0004) [0x0000000000000002]              ( CPF_Const )
	class APhysicsVolume*                              PhysicsVolume;                                    		// 0x0140 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FVector                                     Velocity;                                         		// 0x0144 (0x000C) [0x0000000000000020]              ( CPF_Net )
	struct FVector                                     Acceleration;                                     		// 0x0150 (0x000C) [0x0000000000000000]              
	struct FVector                                     AngularVelocity;                                  		// 0x015C (0x000C) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	class USkeletalMeshComponent*                      BaseSkelComponent;                                		// 0x0168 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FName                                       BaseBoneName;                                     		// 0x016C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	TArray< class AActor* >                            Attached;                                         		// 0x0174 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	struct FVector                                     RelativeLocation;                                 		// 0x0180 (0x000C) [0x0000000000000022]              ( CPF_Const | CPF_Net )
	struct FRotator                                    RelativeRotation;                                 		// 0x018C (0x000C) [0x0000000000000022]              ( CPF_Const | CPF_Net )
	class UPrimitiveComponent*                         CollisionComponent;                               		// 0x0198 (0x0004) [0x00000000040A0009]              ( CPF_Edit | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	int                                                OverlapTag;                                       		// 0x019C (0x0004) [0x0000000000001000]              ( CPF_Native )
	struct FRotator                                    RotationRate;                                     		// 0x01A0 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	class AActor*                                      PendingTouch;                                     		// 0x01AC (0x0004) [0x0000000000000000]              
	class UClass*                                      MessageClass;                                     		// 0x01B0 (0x0004) [0x0000000000000000]              
	TArray< class UClass* >                            SupportedEvents;                                  		// 0x01B4 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< class USequenceEvent* >                    GeneratedEvents;                                  		// 0x01C0 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< class USeqAct_Latent* >                    LatentActions;                                    		// 0x01CC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.Info
// 0x0000 (0x01D8 - 0x01D8)
class AInfo : public AActor
{
public:
public:
};

// Class Engine.ZoneInfo
// 0x0010 (0x01E8 - 0x01D8)
class AZoneInfo : public AInfo
{
public:
	float                                              KillZ;                                            		// 0x01D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SoftKill;                                         		// 0x01DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UClass*                                      KillZDamageType;                                  		// 0x01E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bSoftKillZ : 1;                                   		// 0x01E4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.WorldInfo
// 0x05E4 (0x07CC - 0x01E8)
class AWorldInfo : public AZoneInfo
{
public:
	struct FPostProcessSettings                        DefaultPostProcessSettings;                       		// 0x01E8 (0x00EC) [0x0000000000404001]              ( CPF_Edit | CPF_Config | CPF_NeedCtorLink )
	class UPostProcessChain*                           WorldPostProcessChain;                            		// 0x02D4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bPersistPostProcessToNextLevel : 1;               		// 0x02D8 (0x0004) [0x0000000000004001] [0x00000001] ( CPF_Edit | CPF_Config )
	unsigned long                                      bFogEnabled : 1;                                  		// 0x02D8 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bBumpOffsetEnabled : 1;                           		// 0x02D8 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bUseGammaCorrection : 1;                          		// 0x02D8 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bMapNeedsLightingFullyRebuilt : 1;                		// 0x02D8 (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bMapHasMultipleDominantLightsAffectingOnePrimitive : 1;		// 0x02D8 (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bMapHasPathingErrors : 1;                         		// 0x02D8 (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bRequestedBlockOnAsyncLoading : 1;                		// 0x02D8 (0x0004) [0x0000000000000000] [0x00000080] 
	unsigned long                                      bBegunPlay : 1;                                   		// 0x02D8 (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      bPlayersOnly : 1;                                 		// 0x02D8 (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bPlayersOnlyPending : 1;                          		// 0x02D8 (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      bSuspendAI : 1;                                   		// 0x02D8 (0x0004) [0x0000000000000000] [0x00000800] 
	unsigned long                                      bDropDetail : 1;                                  		// 0x02D8 (0x0004) [0x0000000000002000] [0x00001000] ( CPF_Transient )
	unsigned long                                      bAggressiveLOD : 1;                               		// 0x02D8 (0x0004) [0x0000000000002000] [0x00002000] ( CPF_Transient )
	unsigned long                                      bStartup : 1;                                     		// 0x02D8 (0x0004) [0x0000000000000000] [0x00004000] 
	unsigned long                                      bPathsRebuilt : 1;                                		// 0x02D8 (0x0004) [0x0000000000000000] [0x00008000] 
	unsigned long                                      bHasPathNodes : 1;                                		// 0x02D8 (0x0004) [0x0000000000000000] [0x00010000] 
	unsigned long                                      bIsMenuLevel : 1;                                 		// 0x02D8 (0x0004) [0x0000000000002002] [0x00020000] ( CPF_Const | CPF_Transient )
	unsigned long                                      bDebugPauseExecution : 1;                         		// 0x02D8 (0x0004) [0x0000000000002002] [0x00040000] ( CPF_Const | CPF_Transient )
	unsigned long                                      bDebugStepExecution : 1;                          		// 0x02D8 (0x0004) [0x0000000000002002] [0x00080000] ( CPF_Const | CPF_Transient )
	unsigned long                                      bUseConsoleInput : 1;                             		// 0x02D8 (0x0004) [0x0000000000002000] [0x00100000] ( CPF_Transient )
	unsigned long                                      bSkipClearPhysCacheAfterLoadingLevel : 1;         		// 0x02D8 (0x0004) [0x0000000000004000] [0x00200000] ( CPF_Config )
	unsigned long                                      bMinimizeBSPSections : 1;                         		// 0x02D8 (0x0004) [0x0000000000000001] [0x00400000] ( CPF_Edit )
	unsigned long                                      bNoDefaultInventoryForPlayer : 1;                 		// 0x02D8 (0x0004) [0x0000000000000001] [0x00800000] ( CPF_Edit )
	unsigned long                                      bNoPathWarnings : 1;                              		// 0x02D8 (0x0004) [0x0000000000000001] [0x01000000] ( CPF_Edit )
	unsigned long                                      bNoMobileMapWarnings : 1;                         		// 0x02D8 (0x0004) [0x0000000000004001] [0x02000000] ( CPF_Edit | CPF_Config )
	unsigned long                                      bHighPriorityLoading : 1;                         		// 0x02D8 (0x0004) [0x0000000000000020] [0x04000000] ( CPF_Net )
	unsigned long                                      bHighPriorityLoadingLocal : 1;                    		// 0x02D8 (0x0004) [0x0000000000000000] [0x08000000] 
	unsigned long                                      bUseProcBuildingRulesetOverride : 1;              		// 0x02D8 (0x0004) [0x0000000000000001] [0x10000000] ( CPF_Edit )
	unsigned long                                      bSupportDoubleBufferedPhysics : 1;                		// 0x02D8 (0x0004) [0x0000000000000001] [0x20000000] ( CPF_Edit )
	unsigned long                                      bPhysicsIgnoreDeltaTime : 1;                      		// 0x02D8 (0x0004) [0x0000000000000001] [0x40000000] ( CPF_Edit )
	unsigned long                                      bEnableChanceOfPhysicsChunkOverride : 1;          		// 0x02D8 (0x0004) [0x0000000000004001] [0x80000000] ( CPF_Edit | CPF_Config )
	unsigned long                                      bLimitExplosionChunkSize : 1;                     		// 0x02DC (0x0004) [0x0000000000004001] [0x00000001] ( CPF_Edit | CPF_Config )
	unsigned long                                      bLimitDamageChunkSize : 1;                        		// 0x02DC (0x0004) [0x0000000000004001] [0x00000002] ( CPF_Edit | CPF_Config )
	unsigned long                                      bPrecomputeVisibility : 1;                        		// 0x02DC (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bPlaceCellsOnSurfaces : 1;                        		// 0x02DC (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bAllowTemporalAA : 1;                             		// 0x02DC (0x0004) [0x0000000000044001] [0x00000010] ( CPF_Edit | CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bUseGlobalIllumination : 1;                       		// 0x02DC (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bForceNoPrecomputedLighting : 1;                  		// 0x02DC (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bHaveActiveCrowd : 1;                             		// 0x02DC (0x0004) [0x0000000000000000] [0x00000080] 
	unsigned long                                      bAllowHostMigration : 1;                          		// 0x02DC (0x0004) [0x0000000000004000] [0x00000100] ( CPF_Config )
	float                                              SquintModeKernelSize;                             		// 0x02E0 (0x0004) [0x0000000000004001]              ( CPF_Edit | CPF_Config )
	float                                              fStreamTimeLimitPerTick;                          		// 0x02E4 (0x0004) [0x0000000000004001]              ( CPF_Edit | CPF_Config )
	float                                              fPauseBetweenAsyncLevelLoading;                   		// 0x02E8 (0x0004) [0x0000000000004001]              ( CPF_Edit | CPF_Config )
	class APostProcessVolume*                          HighestPriorityPostProcessVolume;                 		// 0x02EC (0x0004) [0x0000000001002002]              ( CPF_Const | CPF_Transient )
	struct FReverbSettings                             DefaultReverbSettings;                            		// 0x02F0 (0x0010) [0x0000000000004001]              ( CPF_Edit | CPF_Config )
	struct FInteriorSettings                           DefaultAmbientZoneSettings;                       		// 0x0300 (0x0024) [0x0000000000004001]              ( CPF_Edit | CPF_Config )
	float                                              FogStart;                                         		// 0x0324 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FogEnd;                                           		// 0x0328 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      FogColor;                                         		// 0x032C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BumpEnd;                                          		// 0x0330 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class AReverbVolume*                               HighestPriorityReverbVolume;                      		// 0x0334 (0x0004) [0x0000000001002002]              ( CPF_Const | CPF_Transient )
	TArray< class AMassiveLODOverrideVolume* >         MassiveLODOverrideVolumes;                        		// 0x0338 (0x000C) [0x0000000001402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	TArray< class APortalVolume* >                     PortalVolumes;                                    		// 0x0344 (0x000C) [0x0000000001402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	TArray< class AEnvironmentVolume* >                EnvironmentVolumes;                               		// 0x0350 (0x000C) [0x0000000001402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	TArray< class ULevelStreaming* >                   StreamingLevels;                                  		// 0x035C (0x000C) [0x0000000004420003]              ( CPF_Edit | CPF_Const | CPF_EditConst | CPF_NeedCtorLink | CPF_EditInline )
	struct FDouble                                     LastTimeUnbuiltLightingWasEncountered;            		// 0x0368 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	class UBookMark*                                   BookMarks[ 0xA ];                                 		// 0x0370 (0x0028) [0x0000000000000001]              ( CPF_Edit )
	class UKismetBookMark*                             KismetBookMarks[ 0xA ];                           		// 0x0398 (0x0028) [0x0000000000000001]              ( CPF_Edit )
	TArray< class UClipPadEntry* >                     ClipPadEntries;                                   		// 0x03C0 (0x000C) [0x0000000004400001]              ( CPF_Edit | CPF_NeedCtorLink | CPF_EditInline )
	float                                              TimeDilation;                                     		// 0x03CC (0x0004) [0x0000000000000020]              ( CPF_Net )
	float                                              DemoPlayTimeDilation;                             		// 0x03D0 (0x0004) [0x0000000000000000]              
	float                                              TimeSeconds;                                      		// 0x03D4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              RealTimeSeconds;                                  		// 0x03D8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              AudioTimeSeconds;                                 		// 0x03DC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              DeltaSeconds;                                     		// 0x03E0 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              PauseDelay;                                       		// 0x03E4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              RealTimeToUnPause;                                		// 0x03E8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class APlayerReplicationInfo*                      Pauser;                                           		// 0x03EC (0x0004) [0x0000000000000020]              ( CPF_Net )
	struct FString                                     VisibleGroups;                                    		// 0x03F0 (0x000C) [0x0000000020400000]              ( CPF_NeedCtorLink | CPF_Deprecated )
	struct FString                                     VisibleLayers;                                    		// 0x03FC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class UTexture2D*                                  DefaultTexture;                                   		// 0x0408 (0x0004) [0x0000000000000000]              
	class UTexture2D*                                  WireframeTexture;                                 		// 0x040C (0x0004) [0x0000000000000000]              
	class UTexture2D*                                  WhiteSquareTexture;                               		// 0x0410 (0x0004) [0x0000000000000000]              
	class UTexture2D*                                  LargeVertex;                                      		// 0x0414 (0x0004) [0x0000000000000000]              
	class UTexture2D*                                  BSPVertex;                                        		// 0x0418 (0x0004) [0x0000000000000000]              
	TArray< struct FString >                           DeferredExecs;                                    		// 0x041C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class AGameReplicationInfo*                        GRI;                                              		// 0x0428 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      NetMode;                                          		// 0x042C (0x0001) [0x0000000000000000]              
	unsigned char                                      NextTravelType;                                   		// 0x042D (0x0001) [0x0000000000000000]              
	unsigned char                                      VisibilityAggressiveness;                         		// 0x042E (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      LevelLightingQuality;                             		// 0x042F (0x0001) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
	struct FString                                     ComputerName;                                     		// 0x0430 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     EngineVersion;                                    		// 0x043C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     MinNetVersion;                                    		// 0x0448 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class AGameInfo*                                   Game;                                             		// 0x0454 (0x0004) [0x0000000000000000]              
	float                                              StallZ;                                           		// 0x0458 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WorldGravityZ;                                    		// 0x045C (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	float                                              DefaultGravityZ;                                  		// 0x0460 (0x0004) [0x0000000000044002]              ( CPF_Const | CPF_Config | CPF_GlobalConfig )
	float                                              GlobalGravityZ;                                   		// 0x0464 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RBPhysicsGravityScaling;                          		// 0x0468 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	class ANavigationPoint*                            NavigationPointList;                              		// 0x046C (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	class AController*                                 ControllerList;                                   		// 0x0470 (0x0004) [0x0000000000000002]              ( CPF_Const )
	class APawn*                                       PawnList;                                         		// 0x0474 (0x0004) [0x0000000000000002]              ( CPF_Const )
	class ACoverLink*                                  CoverList;                                        		// 0x0478 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	class APylon*                                      PylonList;                                        		// 0x047C (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              MoveRepSize;                                      		// 0x0480 (0x0004) [0x0000000000000000]              
	TArray< struct FNetViewer >                        ReplicationViewers;                               		// 0x0484 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	struct FString                                     NextURL;                                          		// 0x0490 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              NextSwitchCountdown;                              		// 0x049C (0x0004) [0x0000000000000000]              
	int                                                PackedLightAndShadowMapTextureSize;               		// 0x04A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CullDistanceBias;                                 		// 0x04A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     DefaultColorScale;                                		// 0x04A8 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	class UClass*                                      DefaultGameType;                                  		// 0x04B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class UClass* >                            GameTypesSupportedOnThisMap;                      		// 0x04B8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class UClass*                                      GameTypeForPIE;                                   		// 0x04C4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class UObject* >                           ClientDestroyedActorContent;                      		// 0x04C8 (0x000C) [0x0000000000420002]              ( CPF_Const | CPF_EditConst | CPF_NeedCtorLink )
	TArray< struct FName >                             PreparingLevelNames;                              		// 0x04D4 (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	struct FName                                       CommittedPersistentLevelName;                     		// 0x04E0 (0x0008) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	class UObjectReferencer*                           PersistentMapForcedObjects;                       		// 0x04E8 (0x0004) [0x0000000000000000]              
	class UAudioComponent*                             MusicComp;                                        		// 0x04EC (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	struct FMusicTrackStruct                           CurrentMusicTrack;                                		// 0x04F0 (0x0024) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FMusicTrackStruct                           ReplicatedMusicTrack;                             		// 0x0514 (0x0024) [0x0000000000402020]              ( CPF_Net | CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     Title;                                            		// 0x0538 (0x000C) [0x0000000000408003]              ( CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     Author;                                           		// 0x0544 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class UMapInfo*                                    MyMapInfo;                                        		// 0x0550 (0x0004) [0x0000000004400009]              ( CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
	struct FString                                     EmitterPoolClassPath;                             		// 0x0554 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class AEmitterPool*                                MyEmitterPool;                                    		// 0x0560 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     DecalManagerClassPath;                            		// 0x0564 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class ADecalManager*                               MyDecalManager;                                   		// 0x0570 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     FractureManagerClassPath;                         		// 0x0574 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class AFractureManager*                            MyFractureManager;                                		// 0x0580 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     ParticleEventManagerClassPath;                    		// 0x0584 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class AParticleEventManager*                       MyParticleEventManager;                           		// 0x0590 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UProcBuildingRuleset*                        ProcBuildingRulesetOverride;                      		// 0x0594 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxPhysicsDeltaTime;                              		// 0x0598 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                MaxPhysicsSubsteps;                               		// 0x059C (0x0004) [0x0000000000004000]              ( CPF_Config )
	struct FPhysXSceneProperties                       PhysicsProperties;                                		// 0x05A0 (0x003C) [0x0000000004000001]              ( CPF_Edit | CPF_EditInline )
	TArray< struct FCompartmentRunList >               CompartmentRunFrames;                             		// 0x05DC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              DefaultSkinWidth;                                 		// 0x05E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ApexLODResourceBudget;                            		// 0x05EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FApexModuleDestructibleSettings             DestructibleSettings;                             		// 0x05F0 (0x0010) [0x0000000000000001]              ( CPF_Edit )
	class UPhysicsLODVerticalEmitter*                  EmitterVertical;                                  		// 0x0600 (0x0004) [0x0000000000000000]              
	struct FPhysXVerticalProperties                    VerticalProperties;                               		// 0x0604 (0x0018) [0x0000000004000001]              ( CPF_Edit | CPF_EditInline )
	float                                              ChanceOfPhysicsChunkOverride;                     		// 0x061C (0x0004) [0x0000000000004001]              ( CPF_Edit | CPF_Config )
	float                                              MaxExplosionChunkSize;                            		// 0x0620 (0x0004) [0x0000000000004001]              ( CPF_Edit | CPF_Config )
	float                                              MaxDamageChunkSize;                               		// 0x0624 (0x0004) [0x0000000000004001]              ( CPF_Edit | CPF_Config )
	float                                              FractureExplosionVelScale;                        		// 0x0628 (0x0004) [0x0000000000004001]              ( CPF_Edit | CPF_Config )
	int                                                MaxNumFacturedChunksToSpawnInAFrame;              		// 0x062C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                NumFacturedChunksSpawnedThisFrame;                		// 0x0630 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              FracturedMeshWeaponDamage;                        		// 0x0634 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                VisibilityCellSize;                               		// 0x0638 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CharacterLitIndirectBrightness;                   		// 0x063C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CharacterLitIndirectContrastFactor;               		// 0x0640 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CharacterShadowedIndirectBrightness;              		// 0x0644 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CharacterShadowedIndirectContrastFactor;          		// 0x0648 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CharacterLightingContrastFactor;                  		// 0x064C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UTexture2D*                                  ImageReflectionEnvironmentTexture;                		// 0x0650 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearColor                                ImageReflectionEnvironmentColor;                  		// 0x0654 (0x0010) [0x0000000000000001]              ( CPF_Edit )
	float                                              ImageReflectionEnvironmentRotation;               		// 0x0664 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FMap_Mirror                                 ScreenMessages;                                   		// 0x0668 (0x003C) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
	TArray< struct FScreenMessageString >              PriorityScreenMessages;                           		// 0x06A4 (0x000C) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
	int                                                MaxTrianglesPerLeaf;                              		// 0x06B0 (0x0004) [0x0000000000000000]              
	class ULightmassLevelSettings*                     LMLevelSettings;                                  		// 0x06B4 (0x0004) [0x0000000024400008]              ( CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline | CPF_Deprecated )
	unsigned char                                      UnknownData00[ 0x3C ];                            		// 0x06B8 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.WorldInfo.LandscapeInfoMap
	struct FLightmassWorldInfoSettings                 LightmassSettings;                                		// 0x06F4 (0x003C) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      UnknownData01[ 0x3C ];                            		// 0x0730 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.WorldInfo.NavMeshPathConstraintCache
	unsigned char                                      UnknownData02[ 0x3C ];                            		// 0x076C (0x003C) UNKNOWN PROPERTY: MapProperty Engine.WorldInfo.NavMeshPathGoalEvaluatorCache
	class ACrowdPopulationManagerBase*                 PopulationManager;                                		// 0x07A8 (0x0004) [0x0000000000000000]              
	struct FHostMigrationState                         PeerHostMigration;                                		// 0x07AC (0x001C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	float                                              HostMigrationTimeout;                             		// 0x07C8 (0x0004) [0x0000000000004000]              ( CPF_Config )
public:
};

// Class Engine.DownloadableContentEnumerator
// 0x0030 (0x006C - 0x003C)
class UDownloadableContentEnumerator : public UObject
{
public:
	TArray< struct FOnlineContent >                    DLCBundles;                                       		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     DLCRootDir;                                       		// 0x0048 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< struct FScriptDelegate >                   FindDLCDelegates;                                 		// 0x0054 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnFindDLCComplete__Delegate;                    		// 0x0060 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.DownloadableContentManager
// 0x0088 (0x00C4 - 0x003C)
class UDownloadableContentManager : public UObject
{
public:
	TArray< struct FPointer >                          DLCConfigCacheChanges;                            		// 0x003C (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FString >                           InstalledDLC;                                     		// 0x0048 (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	struct FMap_Mirror                                 NonPackageFilePathMap;                            		// 0x0054 (0x003C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< class UClass* >                            ClassesToReload;                                  		// 0x0090 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< class UObject* >                           ObjectsToReload;                                  		// 0x009C (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FString >                           QueuedFullyLoadPackageInis;                       		// 0x00A8 (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	class UGameEngine*                                 GameEngine;                                       		// 0x00B4 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FScriptDelegate                             __OnRefreshComplete__Delegate;                    		// 0x00B8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.Engine
// 0x0608 (0x0648 - 0x0040)
class UEngine : public USubsystem
{
public:
	class UFont*                                       TinyFont;                                         		// 0x0040 (0x0004) [0x0000000000000000]              
	struct FString                                     TinyFontName;                                     		// 0x0044 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UFont*                                       SmallFont;                                        		// 0x0050 (0x0004) [0x0000000000000000]              
	struct FString                                     SmallFontName;                                    		// 0x0054 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UFont*                                       MediumFont;                                       		// 0x0060 (0x0004) [0x0000000000000000]              
	struct FString                                     MediumFontName;                                   		// 0x0064 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UFont*                                       LargeFont;                                        		// 0x0070 (0x0004) [0x0000000000000000]              
	struct FString                                     LargeFontName;                                    		// 0x0074 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UFont*                                       SubtitleFont;                                     		// 0x0080 (0x0004) [0x0000000000000000]              
	struct FString                                     SubtitleFontName;                                 		// 0x0084 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	TArray< class UFont* >                             AdditionalFonts;                                  		// 0x0090 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FString >                           AdditionalFontNames;                              		// 0x009C (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UClass*                                      ConsoleClass;                                     		// 0x00A8 (0x0004) [0x0000000000000000]              
	struct FString                                     ConsoleClassName;                                 		// 0x00AC (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UClass*                                      GameViewportClientClass;                          		// 0x00B8 (0x0004) [0x0000000000000000]              
	struct FString                                     GameViewportClientClassName;                      		// 0x00BC (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UClass*                                      DataStoreClientClass;                             		// 0x00C8 (0x0004) [0x0000000000000000]              
	struct FString                                     DataStoreClientClassName;                         		// 0x00CC (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UClass*                                      LocalPlayerClass;                                 		// 0x00D8 (0x0004) [0x0000000000000000]              
	struct FString                                     LocalPlayerClassName;                             		// 0x00DC (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	class UMaterial*                                   DefaultMaterial;                                  		// 0x00E8 (0x0004) [0x0000000000000000]              
	struct FString                                     DefaultMaterialName;                              		// 0x00EC (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   DefaultDecalMaterial;                             		// 0x00F8 (0x0004) [0x0000000000000000]              
	struct FString                                     DefaultDecalMaterialName;                         		// 0x00FC (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UTexture*                                    DefaultTexture;                                   		// 0x0108 (0x0004) [0x0000000000000000]              
	struct FString                                     DefaultTextureName;                               		// 0x010C (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   WireframeMaterial;                                		// 0x0118 (0x0004) [0x0000000000000000]              
	struct FString                                     WireframeMaterialName;                            		// 0x011C (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   EmissiveTexturedMaterial;                         		// 0x0128 (0x0004) [0x0000000000000000]              
	struct FString                                     EmissiveTexturedMaterialName;                     		// 0x012C (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   GeomMaterial;                                     		// 0x0138 (0x0004) [0x0000000000000000]              
	struct FString                                     GeomMaterialName;                                 		// 0x013C (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   DefaultFogVolumeMaterial;                         		// 0x0148 (0x0004) [0x0000000000000000]              
	struct FString                                     DefaultFogVolumeMaterialName;                     		// 0x014C (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   TickMaterial;                                     		// 0x0158 (0x0004) [0x0000000000000000]              
	struct FString                                     TickMaterialName;                                 		// 0x015C (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   CrossMaterial;                                    		// 0x0168 (0x0004) [0x0000000000000000]              
	struct FString                                     CrossMaterialName;                                		// 0x016C (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   LevelColorationLitMaterial;                       		// 0x0178 (0x0004) [0x0000000000000000]              
	struct FString                                     LevelColorationLitMaterialName;                   		// 0x017C (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   LevelColorationUnlitMaterial;                     		// 0x0188 (0x0004) [0x0000000000000000]              
	struct FString                                     LevelColorationUnlitMaterialName;                 		// 0x018C (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   LightingTexelDensityMaterial;                     		// 0x0198 (0x0004) [0x0000000000000000]              
	struct FString                                     LightingTexelDensityName;                         		// 0x019C (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   ShadedLevelColorationLitMaterial;                 		// 0x01A8 (0x0004) [0x0000000000000000]              
	struct FString                                     ShadedLevelColorationLitMaterialName;             		// 0x01AC (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   ShadedLevelColorationUnlitMaterial;               		// 0x01B8 (0x0004) [0x0000000000000000]              
	struct FString                                     ShadedLevelColorationUnlitMaterialName;           		// 0x01BC (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   RemoveSurfaceMaterial;                            		// 0x01C8 (0x0004) [0x0000000000000000]              
	struct FString                                     RemoveSurfaceMaterialName;                        		// 0x01CC (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   VertexColorMaterial;                              		// 0x01D8 (0x0004) [0x0000000000000000]              
	struct FString                                     VertexColorMaterialName;                          		// 0x01DC (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   VertexColorViewModeMaterial_ColorOnly;            		// 0x01E8 (0x0004) [0x0000000000000000]              
	struct FString                                     VertexColorViewModeMaterialName_ColorOnly;        		// 0x01EC (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   VertexColorViewModeMaterial_AlphaAsColor;         		// 0x01F8 (0x0004) [0x0000000000000000]              
	struct FString                                     VertexColorViewModeMaterialName_AlphaAsColor;     		// 0x01FC (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   VertexColorViewModeMaterial_RedOnly;              		// 0x0208 (0x0004) [0x0000000000000000]              
	struct FString                                     VertexColorViewModeMaterialName_RedOnly;          		// 0x020C (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   VertexColorViewModeMaterial_GreenOnly;            		// 0x0218 (0x0004) [0x0000000000000000]              
	struct FString                                     VertexColorViewModeMaterialName_GreenOnly;        		// 0x021C (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   VertexColorViewModeMaterial_BlueOnly;             		// 0x0228 (0x0004) [0x0000000000000000]              
	struct FString                                     VertexColorViewModeMaterialName_BlueOnly;         		// 0x022C (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   HeatmapMaterial;                                  		// 0x0238 (0x0004) [0x0000000000000000]              
	struct FString                                     HeatmapMaterialName;                              		// 0x023C (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   BoneWeightMaterial;                               		// 0x0248 (0x0004) [0x0000000000000000]              
	struct FString                                     BoneWeightMaterialName;                           		// 0x024C (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   TangentColorMaterial;                             		// 0x0258 (0x0004) [0x0000000000000000]              
	struct FString                                     TangentColorMaterialName;                         		// 0x025C (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   MobileEmulationMasterMaterial;                    		// 0x0268 (0x0004) [0x0000000000000000]              
	struct FString                                     MobileEmulationMasterMaterialName;                		// 0x026C (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   ProcBuildingSimpleMaterial;                       		// 0x0278 (0x0004) [0x0000000000000000]              
	struct FString                                     ProcBuildingSimpleMaterialName;                   		// 0x027C (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UStaticMesh*                                 BuildingQuadStaticMesh;                           		// 0x0288 (0x0004) [0x0000000000000000]              
	struct FString                                     BuildingQuadStaticMeshName;                       		// 0x028C (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	float                                              ProcBuildingLODColorTexelsPerWorldUnit;           		// 0x0298 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              ProcBuildingLODLightingTexelsPerWorldUnit;        		// 0x029C (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	int                                                MaxProcBuildingLODColorTextureSize;               		// 0x02A0 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	int                                                MaxProcBuildingLODLightingTextureSize;            		// 0x02A4 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      UseProcBuildingLODTextureCropping : 1;            		// 0x02A8 (0x0004) [0x0000000000044000] [0x00000001] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      ForcePowerOfTwoProcBuildingLODTextures : 1;       		// 0x02A8 (0x0004) [0x0000000000044000] [0x00000002] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bCombineSimilarMappings : 1;                      		// 0x02A8 (0x0004) [0x0000000000044000] [0x00000004] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bRenderLightMapDensityGrayscale : 1;              		// 0x02A8 (0x0004) [0x0000000000044000] [0x00000008] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bPurgePendingKillObjectsOnServerAlso : 1;         		// 0x02A8 (0x0004) [0x0000000000004001] [0x00000010] ( CPF_Edit | CPF_Config )
	unsigned long                                      bUseSound : 1;                                    		// 0x02A8 (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      bUseBackgroundLevelStreaming : 1;                 		// 0x02A8 (0x0004) [0x0000000000004001] [0x00000040] ( CPF_Edit | CPF_Config )
	unsigned long                                      bSubtitlesEnabled : 1;                            		// 0x02A8 (0x0004) [0x0000000000004001] [0x00000080] ( CPF_Edit | CPF_Config )
	unsigned long                                      bSubtitlesForcedOff : 1;                          		// 0x02A8 (0x0004) [0x0000000000004001] [0x00000100] ( CPF_Edit | CPF_Config )
	unsigned long                                      bSmoothFrameRate : 1;                             		// 0x02A8 (0x0004) [0x0000000000004000] [0x00000200] ( CPF_Config )
	unsigned long                                      bCheckForMultiplePawnsSpawnedInAFrame : 1;        		// 0x02A8 (0x0004) [0x0000000000004000] [0x00000400] ( CPF_Config )
	unsigned long                                      bShouldGenerateSimpleLightmaps : 1;               		// 0x02A8 (0x0004) [0x0000000000044000] [0x00000800] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bForceStaticTerrain : 1;                          		// 0x02A8 (0x0004) [0x0000000000004001] [0x00001000] ( CPF_Edit | CPF_Config )
	unsigned long                                      bForceCPUSkinning : 1;                            		// 0x02A8 (0x0004) [0x0000000000004000] [0x00002000] ( CPF_Config )
	unsigned long                                      bUsePostProcessEffects : 1;                       		// 0x02A8 (0x0004) [0x0000000000004000] [0x00004000] ( CPF_Config )
	unsigned long                                      bOnScreenKismetWarnings : 1;                      		// 0x02A8 (0x0004) [0x0000000000004000] [0x00008000] ( CPF_Config )
	unsigned long                                      bEnableKismetLogging : 1;                         		// 0x02A8 (0x0004) [0x0000000000004000] [0x00010000] ( CPF_Config )
	unsigned long                                      bAllowMatureLanguage : 1;                         		// 0x02A8 (0x0004) [0x0000000000004000] [0x00020000] ( CPF_Config )
	unsigned long                                      bRenderTerrainCollisionAsOverlay : 1;             		// 0x02A8 (0x0004) [0x0000000000004000] [0x00040000] ( CPF_Config )
	unsigned long                                      bDisablePhysXHardwareSupport : 1;                 		// 0x02A8 (0x0004) [0x0000000000044000] [0x00080000] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bPauseOnLossOfFocus : 1;                          		// 0x02A8 (0x0004) [0x0000000000004000] [0x00100000] ( CPF_Config )
	unsigned long                                      bCheckParticleRenderSize : 1;                     		// 0x02A8 (0x0004) [0x0000000000044000] [0x00200000] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bEnableColorClear : 1;                            		// 0x02A8 (0x0004) [0x0000000000044002] [0x00400000] ( CPF_Const | CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bAreConstraintsDirty : 1;                         		// 0x02A8 (0x0004) [0x0000000000002000] [0x00800000] ( CPF_Transient )
	unsigned long                                      bHasPendingGlobalReattach : 1;                    		// 0x02A8 (0x0004) [0x0000000000002000] [0x01000000] ( CPF_Transient )
	unsigned long                                      bEnableOnScreenDebugMessages : 1;                 		// 0x02A8 (0x0004) [0x0000000000044000] [0x02000000] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bEnableOnScreenDebugMessagesDisplay : 1;          		// 0x02A8 (0x0004) [0x0000000000002000] [0x04000000] ( CPF_Transient )
	unsigned long                                      bSuppressMapWarnings : 1;                         		// 0x02A8 (0x0004) [0x0000000000044000] [0x08000000] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bCookSeparateSharedMPGameContent : 1;             		// 0x02A8 (0x0004) [0x0000000000044000] [0x10000000] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bDisableAILogging : 1;                            		// 0x02A8 (0x0004) [0x0000000000044000] [0x20000000] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bUseNormalMapsForSimpleLightMaps : 1;             		// 0x02A8 (0x0004) [0x0000000000044000] [0x40000000] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bStartWithMatineeCapture : 1;                     		// 0x02A8 (0x0004) [0x0000000000002000] [0x80000000] ( CPF_Transient )
	unsigned long                                      bCompressMatineeCapture : 1;                      		// 0x02AC (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bLockReadOnlyLevels : 1;                          		// 0x02AC (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bBloodEffects : 1;                                		// 0x02AC (0x0004) [0x0000000000044000] [0x00000004] ( CPF_Config | CPF_GlobalConfig )
	float                                              MaxRMSDForCombiningMappings;                      		// 0x02B0 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	int                                                ImageReflectionTextureSize;                       		// 0x02B4 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	struct FLinearColor                                LightingOnlyBrightness;                           		// 0x02B8 (0x0010) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	TArray< struct FColor >                            LightComplexityColors;                            		// 0x02C8 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	TArray< struct FLinearColor >                      ShaderComplexityColors;                           		// 0x02D4 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	float                                              MaxPixelShaderAdditiveComplexityCount;            		// 0x02E0 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              MinTextureDensity;                                		// 0x02E4 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              IdealTextureDensity;                              		// 0x02E8 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              MaxTextureDensity;                                		// 0x02EC (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              MinLightMapDensity;                               		// 0x02F0 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              IdealLightMapDensity;                             		// 0x02F4 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              MaxLightMapDensity;                               		// 0x02F8 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              RenderLightMapDensityGrayscaleScale;              		// 0x02FC (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              RenderLightMapDensityColorScale;                  		// 0x0300 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	struct FLinearColor                                LightMapDensityVertexMappedColor;                 		// 0x0304 (0x0010) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	struct FLinearColor                                LightMapDensitySelectedColor;                     		// 0x0314 (0x0010) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	TArray< struct FStatColorMapping >                 StatColorMappings;                                		// 0x0324 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   EditorBrushMaterial;                              		// 0x0330 (0x0004) [0x0000000000000000]              
	struct FString                                     EditorBrushMaterialName;                          		// 0x0334 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UPhysicalMaterial*                           DefaultPhysMaterial;                              		// 0x0340 (0x0004) [0x0000000000000000]              
	struct FString                                     DefaultPhysMaterialName;                          		// 0x0344 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UPhysicalMaterial*                           LandscapeHolePhysMaterial;                        		// 0x0350 (0x0004) [0x0000000000000000]              
	struct FString                                     LandscapeHolePhysMaterialName;                    		// 0x0354 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UApexDestructibleDamageParameters*           ApexDamageParams;                                 		// 0x0360 (0x0004) [0x0000000000000000]              
	struct FString                                     ApexDamageParamsName;                             		// 0x0364 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   TerrainErrorMaterial;                             		// 0x0370 (0x0004) [0x0000000000000000]              
	struct FString                                     TerrainErrorMaterialName;                         		// 0x0374 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	int                                                TerrainMaterialMaxTextureCount;                   		// 0x0380 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	int                                                TerrainTessellationCheckCount;                    		// 0x0384 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              TerrainTessellationCheckDistance;                 		// 0x0388 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	class UClass*                                      OnlineSubsystemClass;                             		// 0x038C (0x0004) [0x0000000000000000]              
	struct FString                                     DefaultOnlineSubsystemName;                       		// 0x0390 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UPostProcessChain*                           DefaultPostProcess;                               		// 0x039C (0x0004) [0x0000000000000000]              
	struct FString                                     DefaultPostProcessName;                           		// 0x03A0 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	class UPostProcessChain*                           ThumbnailSkeletalMeshPostProcess;                 		// 0x03AC (0x0004) [0x0000000000000000]              
	struct FString                                     ThumbnailSkeletalMeshPostProcessName;             		// 0x03B0 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	class UPostProcessChain*                           ThumbnailParticleSystemPostProcess;               		// 0x03BC (0x0004) [0x0000000000000000]              
	struct FString                                     ThumbnailParticleSystemPostProcessName;           		// 0x03C0 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	class UPostProcessChain*                           ThumbnailMaterialPostProcess;                     		// 0x03CC (0x0004) [0x0000000000000000]              
	struct FString                                     ThumbnailMaterialPostProcessName;                 		// 0x03D0 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	class UPostProcessChain*                           DefaultUIScenePostProcess;                        		// 0x03DC (0x0004) [0x0000000000000000]              
	struct FString                                     DefaultUIScenePostProcessName;                    		// 0x03E0 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	class UMaterial*                                   DefaultUICaretMaterial;                           		// 0x03EC (0x0004) [0x0000000000000000]              
	struct FString                                     DefaultUICaretMaterialName;                       		// 0x03F0 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   SceneCaptureReflectActorMaterial;                 		// 0x03FC (0x0004) [0x0000000000000000]              
	struct FString                                     SceneCaptureReflectActorMaterialName;             		// 0x0400 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UMaterial*                                   SceneCaptureCubeActorMaterial;                    		// 0x040C (0x0004) [0x0000000000000000]              
	struct FString                                     SceneCaptureCubeActorMaterialName;                		// 0x0410 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UTexture2D*                                  ScreenDoorNoiseTexture;                           		// 0x041C (0x0004) [0x0000000000000000]              
	struct FString                                     ScreenDoorNoiseTextureName;                       		// 0x0420 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UTexture2D*                                  ImageGrainNoiseTexture;                           		// 0x042C (0x0004) [0x0000000000000000]              
	struct FString                                     ImageGrainNoiseTextureName;                       		// 0x0430 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UTexture2D*                                  RandomAngleTexture;                               		// 0x043C (0x0004) [0x0000000000000000]              
	struct FString                                     RandomAngleTextureName;                           		// 0x0440 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UTexture2D*                                  RandomNormalTexture;                              		// 0x044C (0x0004) [0x0000000000000000]              
	struct FString                                     RandomNormalTextureName;                          		// 0x0450 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UTexture2D*                                  RandomMirrorDiscTexture;                          		// 0x045C (0x0004) [0x0000000000000000]              
	struct FString                                     RandomMirrorDiscTextureName;                      		// 0x0460 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UTexture*                                    WeightMapPlaceholderTexture;                      		// 0x046C (0x0004) [0x0000000000000000]              
	struct FString                                     WeightMapPlaceholderTextureName;                  		// 0x0470 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UTexture2D*                                  LightMapDensityTexture;                           		// 0x047C (0x0004) [0x0000000000000000]              
	struct FString                                     LightMapDensityTextureName;                       		// 0x0480 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class UTexture2D*                                  LightMapDensityNormal;                            		// 0x048C (0x0004) [0x0000000000000000]              
	struct FString                                     LightMapDensityNormalName;                        		// 0x0490 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class USoundNodeWave*                              DefaultSound;                                     		// 0x049C (0x0004) [0x0000000000000000]              
	struct FString                                     DefaultSoundName;                                 		// 0x04A0 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	float                                              TimeBetweenPurgingPendingKillObjects;             		// 0x04AC (0x0004) [0x0000000000004001]              ( CPF_Edit | CPF_Config )
	float                                              TimeBetweenPurgingPendingKillObjectsServer;       		// 0x04B0 (0x0004) [0x0000000000004001]              ( CPF_Edit | CPF_Config )
	class UClient*                                     Client;                                           		// 0x04B4 (0x0004) [0x0000000000000002]              ( CPF_Const )
	TArray< class ULocalPlayer* >                      GamePlayers;                                      		// 0x04B8 (0x000C) [0x0000000000500000]              ( CPF_NeedCtorLink )
	class UGameViewportClient*                         GameViewport;                                     		// 0x04C4 (0x0004) [0x0000000000000002]              ( CPF_Const )
	TArray< struct FString >                           DeferredCommands;                                 		// 0x04C8 (0x000C) [0x0000000000500000]              ( CPF_NeedCtorLink )
	int                                                TickCycles;                                       		// 0x04D4 (0x0004) [0x0000000000000000]              
	int                                                GameCycles;                                       		// 0x04D8 (0x0004) [0x0000000000000000]              
	int                                                ClientCycles;                                     		// 0x04DC (0x0004) [0x0000000000000000]              
	float                                              MaxSmoothedFrameRate;                             		// 0x04E0 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              MinSmoothedFrameRate;                             		// 0x04E4 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                NumPawnsAllowedToBeSpawnedInAFrame;               		// 0x04E8 (0x0004) [0x0000000000004000]              ( CPF_Config )
	struct FPointer                                    RemoteControlExec;                                		// 0x04EC (0x0004) [0x0000000000001000]              ( CPF_Native )
	struct FPointer                                    MobileMaterialEmulator;                           		// 0x04F0 (0x0004) [0x0000000000001000]              ( CPF_Native )
	struct FColor                                      C_WorldBox;                                       		// 0x04F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      C_BrushWire;                                      		// 0x04F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      C_AddWire;                                        		// 0x04FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      C_SubtractWire;                                   		// 0x0500 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      C_SemiSolidWire;                                  		// 0x0504 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      C_NonSolidWire;                                   		// 0x0508 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      C_WireBackground;                                 		// 0x050C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      C_ScaleBoxHi;                                     		// 0x0510 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      C_VolumeCollision;                                		// 0x0514 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      C_BSPCollision;                                   		// 0x0518 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      C_OrthoBackground;                                		// 0x051C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      C_Volume;                                         		// 0x0520 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      C_BrushShape;                                     		// 0x0524 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              StreamingDistanceFactor;                          		// 0x0528 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     ScoutClassName;                                   		// 0x052C (0x000C) [0x0000000000404002]              ( CPF_Const | CPF_Config | CPF_NeedCtorLink )
	unsigned char                                      TransitionType;                                   		// 0x0538 (0x0001) [0x0000000000000000]              
	struct FString                                     TransitionDescription;                            		// 0x053C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     TransitionGameType;                               		// 0x0548 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              MeshLODRange;                                     		// 0x0554 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              CameraRotationThreshold;                          		// 0x0558 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              CameraTranslationThreshold;                       		// 0x055C (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              PrimitiveProbablyVisibleTime;                     		// 0x0560 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              PercentUnoccludedRequeries;                       		// 0x0564 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              MaxOcclusionPixelsFraction;                       		// 0x0568 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                MaxFluidNumVerts;                                 		// 0x056C (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              FluidSimulationTimeLimit;                         		// 0x0570 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                MaxParticleResize;                                		// 0x0574 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                MaxParticleResizeWarn;                            		// 0x0578 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                MaxParticleVertexMemory;                          		// 0x057C (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                MaxParticleSpriteCount;                           		// 0x0580 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                MaxParticleSubUVCount;                            		// 0x0584 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                commandAccountLevel;                              		// 0x0588 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                desktopWidth;                                     		// 0x058C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                desktopHeight;                                    		// 0x0590 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                BeginUPTryCount;                                  		// 0x0594 (0x0004) [0x0000000000004000]              ( CPF_Config )
	TArray< struct FDropNoteInfo >                     PendingDroppedNotes;                              		// 0x0598 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     DynamicCoverMeshComponentName;                    		// 0x05A4 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	float                                              NetClientTicksPerSecond;                          		// 0x05B0 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              MaxTrackedOcclusionIncrement;                     		// 0x05B4 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              TrackedOcclusionStepSize;                         		// 0x05B8 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	struct FLinearColor                                DefaultSelectedMaterialColor;                     		// 0x05BC (0x0010) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	struct FLinearColor                                DefaultHoveredMaterialColor;                      		// 0x05CC (0x0010) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	struct FLinearColor                                SelectedMaterialColor;                            		// 0x05DC (0x0010) [0x0000000000002000]              ( CPF_Transient )
	struct FLinearColor                                UnselectedMaterialColor;                          		// 0x05EC (0x0010) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FName >                             IgnoreSimulatedFuncWarnings;                      		// 0x05FC (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	int                                                ScreenSaverInhibitorSemaphore;                    		// 0x0608 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FPointer                                    ScreenSaverInhibitor;                             		// 0x060C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UTranslationContext*                         GlobalTranslationContext;                         		// 0x0610 (0x0004) [0x0000000000000000]              
	struct FDouble                                     LoadingMovieStartTime;                            		// 0x0614 (0x0008) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FString                                     MatineeCaptureName;                               		// 0x061C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     MatineePackageCaptureName;                        		// 0x0628 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     VisibleLevelsForMatineeCapture;                   		// 0x0634 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                MatineeCaptureFPS;                                		// 0x0640 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                MatineeCaptureType;                               		// 0x0644 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.GameEngine
// 0x01A4 (0x07EC - 0x0648)
class UGameEngine : public UEngine
{
public:
	int                                                CurrentMatch;                                     		// 0x0648 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                CurrentRound;                                     		// 0x064C (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FGuid                                       ServerID;                                         		// 0x0650 (0x0010) [0x0000000000000002]              ( CPF_Const )
	unsigned long                                      HeatmapDataCollectingEnabled : 1;                 		// 0x0660 (0x0004) [0x0000000000000002] [0x00000001] ( CPF_Const )
	unsigned long                                      bWorldWasLoadedThisTick : 1;                      		// 0x0660 (0x0004) [0x0000000000002002] [0x00000002] ( CPF_Const | CPF_Transient )
	unsigned long                                      bCheckForMovieCapture : 1;                        		// 0x0660 (0x0004) [0x0000000000002002] [0x00000004] ( CPF_Const | CPF_Transient )
	unsigned long                                      bTriggerPostLoadMap : 1;                          		// 0x0660 (0x0004) [0x0000000000002002] [0x00000008] ( CPF_Const | CPF_Transient )
	unsigned long                                      bStartedLoadMapMovie : 1;                         		// 0x0660 (0x0004) [0x0000000000002002] [0x00000010] ( CPF_Const | CPF_Transient )
	unsigned long                                      bShouldCommitPendingMapChange : 1;                		// 0x0660 (0x0004) [0x0000000000000002] [0x00000020] ( CPF_Const )
	unsigned long                                      bClearAnimSetLinkupCachesOnLoadMap : 1;           		// 0x0660 (0x0004) [0x0000000000004000] [0x00000040] ( CPF_Config )
	unsigned long                                      bEnableSecondaryDisplay : 1;                      		// 0x0660 (0x0004) [0x0000000000004000] [0x00000080] ( CPF_Config )
	unsigned long                                      bEnableSecondaryViewport : 1;                     		// 0x0660 (0x0004) [0x0000000000004000] [0x00000100] ( CPF_Config )
	class UPendingLevel*                               GPendingLevel;                                    		// 0x0664 (0x0004) [0x0000000000000000]              
	struct FString                                     LastErrorTitle;                                   		// 0x0668 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     LastError;                                        		// 0x0674 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                NatLevel;                                         		// 0x0680 (0x0004) [0x0000000000000000]              
	TArray< struct FBannedID >                         BannedIDs;                                        		// 0x0684 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FString                                     PendingLevelPlayerControllerClassName;            		// 0x0690 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	struct FURL                                        LastURL;                                          		// 0x069C (0x0044) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FURL                                        LastRemoteURL;                                    		// 0x06E0 (0x0044) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FString >                           ServerActors;                                     		// 0x0724 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	struct FString                                     TravelURL;                                        		// 0x0730 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned char                                      TravelType;                                       		// 0x073C (0x0001) [0x0000000000000000]              
	class UOnlineSubsystem*                            OnlineSubsystem;                                  		// 0x0740 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	class UDownloadableContentEnumerator*              DLCEnumerator;                                    		// 0x0744 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FString                                     DownloadableContentEnumeratorClassName;           		// 0x0748 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	class UDownloadableContentManager*                 DLCManager;                                       		// 0x0754 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FString                                     DownloadableContentManagerClassName;              		// 0x0758 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	TArray< struct FName >                             LevelsToLoadForPendingMapChange;                  		// 0x0764 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< class ULevel* >                            LoadedLevelsForPendingMapChange;                  		// 0x0770 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	struct FString                                     PendingMapChangeFailureDescription;               		// 0x077C (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	float                                              MaxDeltaTime;                                     		// 0x0788 (0x0004) [0x0000000000004000]              ( CPF_Config )
	struct FString                                     SecondaryViewportClientClassName;                 		// 0x078C (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	TArray< class UScriptViewportClient* >             SecondaryViewportClients;                         		// 0x0798 (0x000C) [0x0000000000500000]              ( CPF_NeedCtorLink )
	TArray< struct FPointer >                          SecondaryViewportFrames;                          		// 0x07A4 (0x000C) [0x0000000000500000]              ( CPF_NeedCtorLink )
	TArray< struct FLevelStreamingStatus >             PendingLevelStreamingStatusUpdates;               		// 0x07B0 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< class UObjectReferencer* >                 ObjectReferencers;                                		// 0x07BC (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< struct FFullyLoadedPackagesInfo >          PackagesToFullyLoad;                              		// 0x07C8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FNamedNetDriver >                   NamedNetDrivers;                                  		// 0x07D4 (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FAnimTag >                          AnimTags;                                         		// 0x07E0 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
public:

private:
	static UClass* pClassPointer;

public:
	static UClass* StaticClass()
	{
		if ( ! pClassPointer )
			pClassPointer = (UClass*) UObject::GObjObjects()->Data[ 51 ];

		return pClassPointer;
	};

};

// Class Engine.EngineBaseTypes
// 0x0000 (0x003C - 0x003C)
class UEngineBaseTypes : public UObject
{
public:
public:
};

// Class Engine.Brush
// 0x0024 (0x01FC - 0x01D8)
class ABrush : public AActor
{
public:
	unsigned char                                      CsgOper;                                          		// 0x01D8 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      BrushColor;                                       		// 0x01DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                PolyFlags;                                        		// 0x01E0 (0x0004) [0x0000000000000000]              
	unsigned long                                      bColored : 1;                                     		// 0x01E4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bSolidWhenSelected : 1;                           		// 0x01E4 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bPlaceableFromClassBrowser : 1;                   		// 0x01E4 (0x0004) [0x0000000000000000] [0x00000004] 
	class UModel*                                      Brush;                                            		// 0x01E8 (0x0004) [0x000000000000000A]              ( CPF_Const | CPF_ExportObject )
	class UBrushComponent*                             BrushComponent;                                   		// 0x01EC (0x0004) [0x00000000040A000A]              ( CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	TArray< struct FGeomSelection >                    SavedSelections;                                  		// 0x01F0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.BrushShape
// 0x0000 (0x01FC - 0x01FC)
class ABrushShape : public ABrush
{
public:
public:
};

// Class Engine.Volume
// 0x0018 (0x0214 - 0x01FC)
class AVolume : public ABrush
{
public:
	class AActor*                                      AssociatedActor;                                  		// 0x01FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                LocationPriority;                                 		// 0x0200 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     LocationName;                                     		// 0x0204 (0x000C) [0x0000000000408003]              ( CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	unsigned long                                      bForcePawnWalk : 1;                               		// 0x0210 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bProcessAllActors : 1;                            		// 0x0210 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bPawnsOnly : 1;                                   		// 0x0210 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
public:
};

// Class Engine.BlockingVolume
// 0x0004 (0x0218 - 0x0214)
class ABlockingVolume : public AVolume
{
public:
	unsigned long                                      bIgnoreSpecialPawns : 1;                          		// 0x0214 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bBlockTurrets : 1;                                		// 0x0214 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bBlockCamera : 1;                                 		// 0x0214 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
public:
};

// Class Engine.DynamicBlockingVolume
// 0x0004 (0x021C - 0x0218)
class ADynamicBlockingVolume : public ABlockingVolume
{
public:
	unsigned long                                      bEnabled : 1;                                     		// 0x0218 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.CullDistanceVolume
// 0x0010 (0x0224 - 0x0214)
class ACullDistanceVolume : public AVolume
{
public:
	TArray< struct FCullDistanceSizePair >             CullDistances;                                    		// 0x0214 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      bEnabled : 1;                                     		// 0x0220 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.LevelGridVolume
// 0x0088 (0x029C - 0x0214)
class ALevelGridVolume : public AVolume
{
public:
	struct FString                                     LevelGridVolumeName;                              		// 0x0214 (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
	unsigned char                                      CellShape;                                        		// 0x0220 (0x0001) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	int                                                Subdivisions[ 0x3 ];                              		// 0x0224 (0x000C) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              LoadingDistance;                                  		// 0x0230 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              KeepLoadedRange;                                  		// 0x0234 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FKConvexElem                                CellConvexElem;                                   		// 0x0238 (0x0064) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class Engine.LevelStreamingVolume
// 0x0018 (0x022C - 0x0214)
class ALevelStreamingVolume : public AVolume
{
public:
	TArray< class ULevelStreaming* >                   StreamingLevels;                                  		// 0x0214 (0x000C) [0x0000000001420003]              ( CPF_Edit | CPF_Const | CPF_EditConst | CPF_NeedCtorLink )
	unsigned long                                      bEditorPreVisOnly : 1;                            		// 0x0220 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bDisabled : 1;                                    		// 0x0220 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bTestDistanceToVolume : 1;                        		// 0x0220 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned char                                      StreamingUsage;                                   		// 0x0224 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      Usage;                                            		// 0x0225 (0x0001) [0x0000000020000000]              ( CPF_Deprecated )
	float                                              TestVolumeDistance;                               		// 0x0228 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.LightmassCharacterIndirectDetailVolume
// 0x0000 (0x0214 - 0x0214)
class ALightmassCharacterIndirectDetailVolume : public AVolume
{
public:
public:
};

// Class Engine.LightmassImportanceVolume
// 0x0000 (0x0214 - 0x0214)
class ALightmassImportanceVolume : public AVolume
{
public:
public:
};

// Class Engine.MassiveLODOverrideVolume
// 0x0000 (0x0214 - 0x0214)
class AMassiveLODOverrideVolume : public AVolume
{
public:
public:
};

// Class Engine.PathBlockingVolume
// 0x0000 (0x0214 - 0x0214)
class APathBlockingVolume : public AVolume
{
public:
public:
};

// Class Engine.PhysicsVolume
// 0x0040 (0x0254 - 0x0214)
class APhysicsVolume : public AVolume
{
public:
	struct FVector                                     ZoneVelocity;                                     		// 0x0214 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bVelocityAffectsWalking : 1;                      		// 0x0220 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bPainCausing : 1;                                 		// 0x0220 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bAIShouldIgnorePain : 1;                          		// 0x0220 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bEntryPain : 1;                                   		// 0x0220 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      BACKUP_bPainCausing : 1;                          		// 0x0220 (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bDestructive : 1;                                 		// 0x0220 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bNoInventory : 1;                                 		// 0x0220 (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bMoveProjectiles : 1;                             		// 0x0220 (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bBounceVelocity : 1;                              		// 0x0220 (0x0004) [0x0000000000000001] [0x00000100] ( CPF_Edit )
	unsigned long                                      bNeutralZone : 1;                                 		// 0x0220 (0x0004) [0x0000000000000001] [0x00000200] ( CPF_Edit )
	unsigned long                                      bCrowdAgentsPlayDeathAnim : 1;                    		// 0x0220 (0x0004) [0x0000000000000001] [0x00000400] ( CPF_Edit )
	unsigned long                                      bPhysicsOnContact : 1;                            		// 0x0220 (0x0004) [0x0000000000000001] [0x00000800] ( CPF_Edit )
	unsigned long                                      bWaterVolume : 1;                                 		// 0x0220 (0x0004) [0x0000000000000000] [0x00001000] 
	float                                              GroundFriction;                                   		// 0x0224 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TerminalVelocity;                                 		// 0x0228 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DamagePerSec;                                     		// 0x022C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UClass*                                      DamageType;                                       		// 0x0230 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                Priority;                                         		// 0x0234 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FluidFriction;                                    		// 0x0238 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              PainInterval;                                     		// 0x023C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RigidBodyDamping;                                 		// 0x0240 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxDampingForce;                                  		// 0x0244 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class AInfo*                                       PainTimer;                                        		// 0x0248 (0x0004) [0x0000000000000000]              
	class AController*                                 DamageInstigator;                                 		// 0x024C (0x0004) [0x0000000000000000]              
	class APhysicsVolume*                              NextPhysicsVolume;                                		// 0x0250 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.DefaultPhysicsVolume
// 0x0000 (0x0254 - 0x0254)
class ADefaultPhysicsVolume : public APhysicsVolume
{
public:
public:
};

// Class Engine.GravityVolume
// 0x0004 (0x0258 - 0x0254)
class AGravityVolume : public APhysicsVolume
{
public:
	float                                              GravityZ;                                         		// 0x0254 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.LadderVolume
// 0x0060 (0x02B4 - 0x0254)
class ALadderVolume : public APhysicsVolume
{
public:
	struct FRotator                                    WallDir;                                          		// 0x0254 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     LookDir;                                          		// 0x0260 (0x000C) [0x0000000000000000]              
	struct FVector                                     ClimbDir;                                         		// 0x026C (0x000C) [0x0000000000000000]              
	class ALadder*                                     LadderList;                                       		// 0x0278 (0x0004) [0x0000000000000002]              ( CPF_Const )
	unsigned long                                      bNoPhysicalLadder : 1;                            		// 0x027C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bAutoPath : 1;                                    		// 0x027C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bAllowLadderStrafing : 1;                         		// 0x027C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	float                                              ExtraOffsetLookUp;                                		// 0x0280 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LedgePositionFromTop;                             		// 0x0284 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LedgeFeetPositionFromTop;                         		// 0x0288 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ladderExitLength;                                 		// 0x028C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              playerPositionOffsetFromCenter;                   		// 0x0290 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     ladderTop;                                        		// 0x0294 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     ladderFoot;                                       		// 0x02A0 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	class APawn*                                       PendingClimber;                                   		// 0x02AC (0x0004) [0x0000000000000000]              
	class UArrowComponent*                             WallDirArrow;                                     		// 0x02B0 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.PortalVolume
// 0x000C (0x0220 - 0x0214)
class APortalVolume : public AVolume
{
public:
	TArray< class APortalTeleporter* >                 Portals;                                          		// 0x0214 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.PostProcessVolume
// 0x00F8 (0x030C - 0x0214)
class APostProcessVolume : public AVolume
{
public:
	float                                              Priority;                                         		// 0x0214 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bOverrideWorldPostProcessChain : 1;               		// 0x0218 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bEnabled : 1;                                     		// 0x0218 (0x0004) [0x0000000000000021] [0x00000002] ( CPF_Edit | CPF_Net )
	struct FPostProcessSettings                        Settings;                                         		// 0x021C (0x00EC) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class APostProcessVolume*                          NextLowerPriorityVolume;                          		// 0x0308 (0x0004) [0x0000000001002002]              ( CPF_Const | CPF_Transient )
public:
};

// Class Engine.PrecomputedVisibilityOverrideVolume
// 0x0018 (0x022C - 0x0214)
class APrecomputedVisibilityOverrideVolume : public AVolume
{
public:
	TArray< class AActor* >                            OverrideVisibleActors;                            		// 0x0214 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class AActor* >                            OverrideInvisibleActors;                          		// 0x0220 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.PrecomputedVisibilityVolume
// 0x0000 (0x0214 - 0x0214)
class APrecomputedVisibilityVolume : public AVolume
{
public:
public:
};

// Class Engine.ReverbVolume
// 0x004C (0x0260 - 0x0214)
class AReverbVolume : public AVolume
{
public:
	float                                              Priority;                                         		// 0x0214 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bEnabled : 1;                                     		// 0x0218 (0x0004) [0x0000000000000021] [0x00000001] ( CPF_Edit | CPF_Net )
	struct FString                                     DesignerComment;                                  		// 0x021C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FReverbSettings                             Settings;                                         		// 0x0228 (0x0010) [0x0000000000000001]              ( CPF_Edit )
	struct FInteriorSettings                           AmbientZoneSettings;                              		// 0x0238 (0x0024) [0x0000000000000001]              ( CPF_Edit )
	class AReverbVolume*                               NextLowerPriorityVolume;                          		// 0x025C (0x0004) [0x0000000001002002]              ( CPF_Const | CPF_Transient )
public:
};

// Class Engine.TriggerVolume
// 0x0000 (0x0214 - 0x0214)
class ATriggerVolume : public AVolume
{
public:
public:
};

// Class Engine.DroppedPickup
// 0x0010 (0x01E8 - 0x01D8)
class ADroppedPickup : public AActor
{
public:
	class AInventory*                                  Inventory;                                        		// 0x01D8 (0x0004) [0x0000000000000000]              
	class UClass*                                      InventoryClass;                                   		// 0x01DC (0x0004) [0x0000000000000020]              ( CPF_Net )
	class ANavigationPoint*                            PickupCache;                                      		// 0x01E0 (0x0004) [0x0000000000000000]              
	unsigned long                                      bFadeOut : 1;                                     		// 0x01E4 (0x0004) [0x0000000000000020] [0x00000001] ( CPF_Net )
public:
};

// Class Engine.DynamicSMActor
// 0x003C (0x0214 - 0x01D8)
class ADynamicSMActor : public AActor
{
public:
	class UStaticMeshComponent*                        StaticMeshComponent;                              		// 0x01D8 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	class UDynamicLightEnvironmentComponent*           LightEnvironment;                                 		// 0x01DC (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	class UStaticMesh*                                 ReplicatedMesh;                                   		// 0x01E0 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	class UMaterialInterface*                          ReplicatedMaterial0;                              		// 0x01E4 (0x0004) [0x0000000000000020]              ( CPF_Net )
	class UMaterialInterface*                          ReplicatedMaterial1;                              		// 0x01E8 (0x0004) [0x0000000000000020]              ( CPF_Net )
	unsigned long                                      bForceStaticDecals : 1;                           		// 0x01EC (0x0004) [0x0000000000000020] [0x00000001] ( CPF_Net )
	unsigned long                                      bPawnCanBaseOn : 1;                               		// 0x01EC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bSafeBaseIfAsleep : 1;                            		// 0x01EC (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	struct FVector                                     ReplicatedMeshTranslation;                        		// 0x01F0 (0x000C) [0x0000000000000020]              ( CPF_Net )
	struct FRotator                                    ReplicatedMeshRotation;                           		// 0x01FC (0x000C) [0x0000000000000020]              ( CPF_Net )
	struct FVector                                     ReplicatedMeshScale3D;                            		// 0x0208 (0x000C) [0x0000000000000020]              ( CPF_Net )
public:
};

// Class Engine.InterpActor
// 0x002C (0x0240 - 0x0214)
class AInterpActor : public ADynamicSMActor
{
public:
	unsigned long                                      bShouldSaveForCheckpoint : 1;                     		// 0x0214 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bMonitorMover : 1;                                		// 0x0214 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bMonitorZVelocity : 1;                            		// 0x0214 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bDestroyProjectilesOnEncroach : 1;                		// 0x0214 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bContinueOnEncroachPhysicsObject : 1;             		// 0x0214 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bStopOnEncroach : 1;                              		// 0x0214 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bDestroysEncroachedActors : 1;                    		// 0x0214 (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bShouldShadowParentAllAttachedActors : 1;         		// 0x0214 (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bIsLift : 1;                                      		// 0x0214 (0x0004) [0x0000000000000000] [0x00000100] 
	class ANavigationPoint*                            MyMarker;                                         		// 0x0218 (0x0004) [0x0000000000000000]              
	float                                              MaxZVelocity;                                     		// 0x021C (0x0004) [0x0000000000000000]              
	float                                              StayOpenTime;                                     		// 0x0220 (0x0004) [0x0000000000000000]              
	class USoundCue*                                   OpenSound;                                        		// 0x0224 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   OpeningAmbientSound;                              		// 0x0228 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   OpenedSound;                                      		// 0x022C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   CloseSound;                                       		// 0x0230 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   ClosingAmbientSound;                              		// 0x0234 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   ClosedSound;                                      		// 0x0238 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UAudioComponent*                             AmbientSoundComponent;                            		// 0x023C (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.Emitter
// 0x000C (0x01E4 - 0x01D8)
class AEmitter : public AActor
{
public:
	class UParticleSystemComponent*                    ParticleSystemComponent;                          		// 0x01D8 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	class UDynamicLightEnvironmentComponent*           LightEnvironment;                                 		// 0x01DC (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	unsigned long                                      bDestroyOnSystemFinish : 1;                       		// 0x01E0 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bPostUpdateTickGroup : 1;                         		// 0x01E0 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bCurrentlyActive : 1;                             		// 0x01E0 (0x0004) [0x0000000000000020] [0x00000004] ( CPF_Net )
public:
};

// Class Engine.EmitterPool
// 0x0058 (0x0230 - 0x01D8)
class AEmitterPool : public AActor
{
public:
	class UParticleSystemComponent*                    PSCTemplate;                                      		// 0x01D8 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	TArray< class UParticleSystemComponent* >          PoolComponents;                                   		// 0x01DC (0x000C) [0x000000000448200A]              ( CPF_Const | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	TArray< class UParticleSystemComponent* >          ActiveComponents;                                 		// 0x01E8 (0x000C) [0x0000000004482008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	int                                                MaxActiveEffects;                                 		// 0x01F4 (0x0004) [0x0000000000000000]              
	unsigned long                                      bLogPoolOverflow : 1;                             		// 0x01F8 (0x0004) [0x0000000000044000] [0x00000001] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bLogPoolOverflowList : 1;                         		// 0x01F8 (0x0004) [0x0000000000044000] [0x00000002] ( CPF_Config | CPF_GlobalConfig )
	TArray< struct FEmitterBaseInfo >                  RelativePSCs;                                     		// 0x01FC (0x000C) [0x0000000000482000]              ( CPF_Transient | CPF_Component | CPF_NeedCtorLink )
	float                                              SMC_MIC_ReductionTime;                            		// 0x0208 (0x0004) [0x0000000000000000]              
	float                                              SMC_MIC_CurrentReductionTime;                     		// 0x020C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                IdealStaticMeshComponents;                        		// 0x0210 (0x0004) [0x0000000000000000]              
	int                                                IdealMaterialInstanceConstants;                   		// 0x0214 (0x0004) [0x0000000000000000]              
	TArray< class UStaticMeshComponent* >              FreeSMComponents;                                 		// 0x0218 (0x000C) [0x000000000448200A]              ( CPF_Const | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	TArray< class UMaterialInstanceConstant* >         FreeMatInstConsts;                                		// 0x0224 (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class Engine.HUD
// 0x0288 (0x0460 - 0x01D8)
class AHUD : public AActor
{
public:
	struct FColor                                      WhiteColor;                                       		// 0x01D8 (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FColor                                      GreenColor;                                       		// 0x01DC (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FColor                                      RedColor;                                         		// 0x01E0 (0x0004) [0x0000000000000002]              ( CPF_Const )
	class APlayerController*                           PlayerOwner;                                      		// 0x01E4 (0x0004) [0x0000000000000000]              
	unsigned long                                      bLostFocusPaused : 1;                             		// 0x01E8 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bShowHUD : 1;                                     		// 0x01E8 (0x0004) [0x0000000000004000] [0x00000002] ( CPF_Config )
	unsigned long                                      bShowScores : 1;                                  		// 0x01E8 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bShowDebugInfo : 1;                               		// 0x01E8 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bShowBadConnectionAlert : 1;                      		// 0x01E8 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bShowDirectorInfoDebug : 1;                       		// 0x01E8 (0x0004) [0x0000000000004000] [0x00000020] ( CPF_Config )
	unsigned long                                      bShowDirectorInfoHUD : 1;                         		// 0x01E8 (0x0004) [0x0000000000004000] [0x00000040] ( CPF_Config )
	unsigned long                                      bMessageBeep : 1;                                 		// 0x01E8 (0x0004) [0x0000000000044000] [0x00000080] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bShowOverlays : 1;                                		// 0x01E8 (0x0004) [0x0000000000000000] [0x00000100] 
	float                                              HudCanvasScale;                                   		// 0x01EC (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	TArray< class AActor* >                            PostRenderedActors;                               		// 0x01F0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FConsoleMessage >                   ConsoleMessages;                                  		// 0x01FC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FColor                                      ConsoleColor;                                     		// 0x0208 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                ConsoleMessageCount;                              		// 0x020C (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	int                                                ConsoleFontSize;                                  		// 0x0210 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	int                                                MessageFontOffset;                                		// 0x0214 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	int                                                MaxHUDAreaMessageCount;                           		// 0x0218 (0x0004) [0x0000000000000000]              
	struct FHudLocalizedMessage                        LocalMessages[ 0x8 ];                             		// 0x021C (0x0200) [0x0000000000402001]              ( CPF_Edit | CPF_Transient | CPF_NeedCtorLink )
	float                                              ConsoleMessagePosX;                               		// 0x041C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ConsoleMessagePosY;                               		// 0x0420 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UCanvas*                                     Canvas;                                           		// 0x0424 (0x0004) [0x0000000000000000]              
	float                                              LastHUDRenderTime;                                		// 0x0428 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              RenderDelta;                                      		// 0x042C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              SizeX;                                            		// 0x0430 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              SizeY;                                            		// 0x0434 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              CenterX;                                          		// 0x0438 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              CenterY;                                          		// 0x043C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              RatioX;                                           		// 0x0440 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              RatioY;                                           		// 0x0444 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FName >                             DebugDisplay;                                     		// 0x0448 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	TArray< struct FKismetDrawTextInfo >               KismetTextInfo;                                   		// 0x0454 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.AutoTestManager
// 0x009C (0x0274 - 0x01D8)
class AAutoTestManager : public AInfo
{
public:
	unsigned long                                      bAutomatedPerfTesting : 1;                        		// 0x01D8 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bAutoContinueToNextRound : 1;                     		// 0x01D8 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bUsingAutomatedTestingMapList : 1;                		// 0x01D8 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bAutomatedTestingWithOpen : 1;                    		// 0x01D8 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bExitOnCyclesComplete : 1;                        		// 0x01D8 (0x0004) [0x0000000000044000] [0x00000010] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bCheckingForFragmentation : 1;                    		// 0x01D8 (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bCheckingForMemLeaks : 1;                         		// 0x01D8 (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bDoingASentinelRun : 1;                           		// 0x01D8 (0x0004) [0x0000000000000000] [0x00000080] 
	unsigned long                                      bSentinelStreamingLevelStillLoading : 1;          		// 0x01D8 (0x0004) [0x0000000000002000] [0x00000100] ( CPF_Transient )
	int                                                AutomatedPerfRemainingTime;                       		// 0x01DC (0x0004) [0x0000000000000000]              
	int                                                AutomatedTestingMapIndex;                         		// 0x01E0 (0x0004) [0x0000000000000000]              
	TArray< struct FString >                           AutomatedMapTestingList;                          		// 0x01E4 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	int                                                NumAutomatedMapTestingCycles;                     		// 0x01F0 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	int                                                NumberOfMatchesPlayed;                            		// 0x01F4 (0x0004) [0x0000000000000000]              
	int                                                NumMapListCyclesDone;                             		// 0x01F8 (0x0004) [0x0000000000000000]              
	struct FString                                     AutomatedTestingExecCommandToRunAtStartMatch;     		// 0x01FC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     AutomatedMapTestingTransitionMap;                 		// 0x0208 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     SentinelTaskDescription;                          		// 0x0214 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     SentinelTaskParameter;                            		// 0x0220 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     SentinelTagDesc;                                  		// 0x022C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class APlayerController*                           SentinelPC;                                       		// 0x0238 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FVector >                           SentinelTravelArray;                              		// 0x023C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                SentinelNavigationIdx;                            		// 0x0248 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                SentinelIdx;                                      		// 0x024C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                NumRotationsIncrement;                            		// 0x0250 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                TravelPointsIncrement;                            		// 0x0254 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                NumMinutesPerMap;                                 		// 0x0258 (0x0004) [0x0000000000004000]              ( CPF_Config )
	TArray< struct FString >                           CommandsToRunAtEachTravelTheWorldNode;            		// 0x025C (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	struct FString                                     CommandStringToExec;                              		// 0x0268 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class Engine.CoverGroup
// 0x0014 (0x01EC - 0x01D8)
class ACoverGroup : public AInfo
{
public:
	TArray< struct FActorReference >                   CoverLinkRefs;                                    		// 0x01D8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              AutoSelectRadius;                                 		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AutoSelectHeight;                                 		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.FileWriter
// 0x0018 (0x01F0 - 0x01D8)
class AFileWriter : public AInfo
{
public:
	struct FPointer                                    ArchivePtr;                                       		// 0x01D8 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FString                                     FileName;                                         		// 0x01DC (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	unsigned char                                      FileType;                                         		// 0x01E8 (0x0001) [0x0000000000000002]              ( CPF_Const )
	unsigned long                                      bFlushEachWrite : 1;                              		// 0x01EC (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bWantsAsyncWrites : 1;                            		// 0x01EC (0x0004) [0x0000000000000000] [0x00000002] 
public:
};

// Class Engine.FileLog
// 0x0000 (0x01F0 - 0x01F0)
class AFileLog : public AFileWriter
{
public:
public:
};

// Class Engine.GameInfo
// 0x01AC (0x0384 - 0x01D8)
class AGameInfo : public AInfo
{
public:
	unsigned long                                      bRestartLevel : 1;                                		// 0x01D8 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bPauseable : 1;                                   		// 0x01D8 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bTeamGame : 1;                                    		// 0x01D8 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bGameEnded : 1;                                   		// 0x01D8 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bOverTime : 1;                                    		// 0x01D8 (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bDelayedStart : 1;                                		// 0x01D8 (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bWaitingToStartMatch : 1;                         		// 0x01D8 (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bChangeLevels : 1;                                		// 0x01D8 (0x0004) [0x0000000000044000] [0x00000080] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bAlreadyChanged : 1;                              		// 0x01D8 (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      bAdminCanPause : 1;                               		// 0x01D8 (0x0004) [0x0000000000044000] [0x00000200] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bGameRestarted : 1;                               		// 0x01D8 (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      bLevelChange : 1;                                 		// 0x01D8 (0x0004) [0x0000000000000000] [0x00000800] 
	unsigned long                                      bKickLiveIdlers : 1;                              		// 0x01D8 (0x0004) [0x0000000000044000] [0x00001000] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bUsingArbitration : 1;                            		// 0x01D8 (0x0004) [0x0000000000000000] [0x00002000] 
	unsigned long                                      bHasArbitratedHandshakeBegun : 1;                 		// 0x01D8 (0x0004) [0x0000000000000000] [0x00004000] 
	unsigned long                                      bNeedsEndGameHandshake : 1;                       		// 0x01D8 (0x0004) [0x0000000000000000] [0x00008000] 
	unsigned long                                      bIsEndGameHandshakeComplete : 1;                  		// 0x01D8 (0x0004) [0x0000000000000000] [0x00010000] 
	unsigned long                                      bHasEndGameHandshakeBegun : 1;                    		// 0x01D8 (0x0004) [0x0000000000000000] [0x00020000] 
	unsigned long                                      bFixedPlayerStart : 1;                            		// 0x01D8 (0x0004) [0x0000000000000000] [0x00040000] 
	unsigned long                                      bDoFearCostFallOff : 1;                           		// 0x01D8 (0x0004) [0x0000000000000000] [0x00080000] 
	unsigned long                                      bUpdatePostLoginStreamingLevels : 1;              		// 0x01D8 (0x0004) [0x0000000000000000] [0x00100000] 
	unsigned long                                      bUseSeamlessTravel : 1;                           		// 0x01D8 (0x0004) [0x0000000000000000] [0x00200000] 
	unsigned long                                      bHasNetworkError : 1;                             		// 0x01D8 (0x0004) [0x0000000000000000] [0x00400000] 
	unsigned long                                      bRequiresPushToTalk : 1;                          		// 0x01D8 (0x0004) [0x0000000000000002] [0x00800000] ( CPF_Const )
	unsigned long                                      bIsStandbyCheckingEnabled : 1;                    		// 0x01D8 (0x0004) [0x0000000000004000] [0x01000000] ( CPF_Config )
	unsigned long                                      bIsStandbyCheckingOn : 1;                         		// 0x01D8 (0x0004) [0x0000000000000000] [0x02000000] 
	unsigned long                                      bHasStandbyCheatTriggered : 1;                    		// 0x01D8 (0x0004) [0x0000000000000000] [0x04000000] 
	unsigned long                                      bNewOnlineSessionOnTravel : 1;                    		// 0x01D8 (0x0004) [0x0000000000000000] [0x08000000] 
	struct FString                                     CauseEventCommand;                                		// 0x01DC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     BugLocString;                                     		// 0x01E8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     BugRotString;                                     		// 0x01F4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< class APlayerController* >                 PendingArbitrationPCs;                            		// 0x0200 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< class APlayerController* >                 ArbitrationPCs;                                   		// 0x020C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              ArbitrationHandshakeTimeout;                      		// 0x0218 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              GameDifficulty;                                   		// 0x021C (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	int                                                GoreLevel;                                        		// 0x0220 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              GameSpeed;                                        		// 0x0224 (0x0004) [0x0000000000000000]              
	class UClass*                                      DefaultPawnClass;                                 		// 0x0228 (0x0004) [0x0000000000000000]              
	class UClass*                                      HUDType;                                          		// 0x022C (0x0004) [0x0000000000000000]              
	class UClass*                                      SecondaryHUDType;                                 		// 0x0230 (0x0004) [0x0000000000000000]              
	int                                                MaxSpectators;                                    		// 0x0234 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	int                                                MaxSpectatorsAllowed;                             		// 0x0238 (0x0004) [0x0000000000000000]              
	int                                                NumSpectators;                                    		// 0x023C (0x0004) [0x0000000000000000]              
	int                                                MaxPlayers;                                       		// 0x0240 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	int                                                MaxPlayersAllowed;                                		// 0x0244 (0x0004) [0x0000000000000000]              
	int                                                NumPlayers;                                       		// 0x0248 (0x0004) [0x0000000000000000]              
	int                                                NumBots;                                          		// 0x024C (0x0004) [0x0000000000000000]              
	int                                                NumTravellingPlayers;                             		// 0x0250 (0x0004) [0x0000000000000000]              
	int                                                CurrentID;                                        		// 0x0254 (0x0004) [0x0000000000000000]              
	struct FString                                     DefaultPlayerName;                                		// 0x0258 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     GameName;                                         		// 0x0264 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	float                                              FearCostFallOff;                                  		// 0x0270 (0x0004) [0x0000000000000000]              
	int                                                GoalScore;                                        		// 0x0274 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                MaxLives;                                         		// 0x0278 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                TimeLimit;                                        		// 0x027C (0x0004) [0x0000000000004000]              ( CPF_Config )
	class UClass*                                      DeathMessageClass;                                		// 0x0280 (0x0004) [0x0000000000000000]              
	class UClass*                                      GameMessageClass;                                 		// 0x0284 (0x0004) [0x0000000000000000]              
	class AMutator*                                    BaseMutator;                                      		// 0x0288 (0x0004) [0x0000000000000000]              
	class UClass*                                      AccessControlClass;                               		// 0x028C (0x0004) [0x0000000000000000]              
	class AAccessControl*                              AccessControl;                                    		// 0x0290 (0x0004) [0x0000000000000000]              
	class UClass*                                      BroadcastHandlerClass;                            		// 0x0294 (0x0004) [0x0000000000000000]              
	class ABroadcastHandler*                           BroadcastHandler;                                 		// 0x0298 (0x0004) [0x0000000000000000]              
	class UClass*                                      AutoTestManagerClass;                             		// 0x029C (0x0004) [0x0000000000000000]              
	class AAutoTestManager*                            MyAutoTestManager;                                		// 0x02A0 (0x0004) [0x0000000000000000]              
	class UClass*                                      PlayerControllerClass;                            		// 0x02A4 (0x0004) [0x0000000000000000]              
	class UClass*                                      PlayerReplicationInfoClass;                       		// 0x02A8 (0x0004) [0x0000000000000000]              
	class UClass*                                      GameReplicationInfoClass;                         		// 0x02AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class AGameReplicationInfo*                        GameReplicationInfo;                              		// 0x02B0 (0x0004) [0x0000000000000000]              
	class ACrowdPopulationManagerBase*                 PopulationManager;                                		// 0x02B4 (0x0004) [0x0000000000000000]              
	class UClass*                                      PopulationManagerClass;                           		// 0x02B8 (0x0004) [0x0000000000000000]              
	float                                              MaxIdleTime;                                      		// 0x02BC (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              MaxTimeMargin;                                    		// 0x02C0 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              TimeMarginSlack;                                  		// 0x02C4 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              MinTimeMargin;                                    		// 0x02C8 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	TArray< class APlayerReplicationInfo* >            InactivePRIArray;                                 		// 0x02CC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FScriptDelegate >                   Pausers;                                          		// 0x02D8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class UOnlineSubsystem*                            OnlineSub;                                        		// 0x02E4 (0x0004) [0x0000000000000000]              
	class UOnlineGameInterface*                        GameInterface;                                    		// 0x02E8 (0x0008) [0x0000000000000000]              
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x02EC (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	class UClass*                                      OnlineStatsWriteClass;                            		// 0x02F0 (0x0004) [0x0000000000000000]              
	int                                                LeaderboardId;                                    		// 0x02F4 (0x0004) [0x0000000000000000]              
	int                                                ArbitratedLeaderboardId;                          		// 0x02F8 (0x0004) [0x0000000000000000]              
	class ACoverReplicator*                            CoverReplicatorBase;                              		// 0x02FC (0x0004) [0x0000000000000000]              
	class UClass*                                      OnlineGameSettingsClass;                          		// 0x0300 (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FString                                     ServerOptions;                                    		// 0x0304 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                AdjustedNetSpeed;                                 		// 0x0310 (0x0004) [0x0000000000000000]              
	float                                              LastNetSpeedUpdateTime;                           		// 0x0314 (0x0004) [0x0000000000000000]              
	int                                                TotalNetBandwidth;                                		// 0x0318 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	int                                                MinDynamicBandwidth;                              		// 0x031C (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	int                                                MaxDynamicBandwidth;                              		// 0x0320 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              StandbyRxCheatTime;                               		// 0x0324 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              StandbyTxCheatTime;                               		// 0x0328 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                BadPingThreshold;                                 		// 0x032C (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              PercentMissingForRxStandby;                       		// 0x0330 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              PercentMissingForTxStandby;                       		// 0x0334 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              PercentForBadPing;                                		// 0x0338 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              JoinInProgressStandbyWaitTime;                    		// 0x033C (0x0004) [0x0000000000004000]              ( CPF_Config )
	class UMaterial*                                   StreamingPauseIcon;                               		// 0x0340 (0x0004) [0x0000000000000000]              
	TArray< struct FGameClassShortName >               GameInfoClassAliases;                             		// 0x0344 (0x000C) [0x0000000000404003]              ( CPF_Edit | CPF_Const | CPF_Config | CPF_NeedCtorLink )
	struct FString                                     DefaultGameType;                                  		// 0x0350 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	TArray< struct FGameTypePrefix >                   DefaultMapPrefixes;                               		// 0x035C (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	TArray< struct FGameTypePrefix >                   CustomMapPrefixes;                                		// 0x0368 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	int                                                AnimTreePoolSize;                                 		// 0x0374 (0x0004) [0x0000000000004000]              ( CPF_Config )
	struct FScriptDelegate                             __CanUnpause__Delegate;                           		// 0x0378 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.Mutator
// 0x0014 (0x01EC - 0x01D8)
class AMutator : public AInfo
{
public:
	class AMutator*                                    NextMutator;                                      		// 0x01D8 (0x0004) [0x0000000000000000]              
	TArray< struct FString >                           GroupNames;                                       		// 0x01DC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      bUserAdded : 1;                                   		// 0x01E8 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class Engine.PotentialClimbWatcher
// 0x0000 (0x01D8 - 0x01D8)
class APotentialClimbWatcher : public AInfo
{
public:
public:
};

// Class Engine.Route
// 0x001C (0x01F4 - 0x01D8)
class ARoute : public AInfo
{
public:
	struct FPointer                                    VfTable_IEditorLinkSelectionInterface;            		// 0x01D8 (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	unsigned char                                      RouteType;                                        		// 0x01DC (0x0001) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FActorReference >                   RouteList;                                        		// 0x01E0 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              FudgeFactor;                                      		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                RouteIndexOffset;                                 		// 0x01F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.WindPointSource
// 0x0004 (0x01DC - 0x01D8)
class AWindPointSource : public AInfo
{
public:
	class UWindPointSourceComponent*                   Component;                                        		// 0x01D8 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.Inventory
// 0x004C (0x0224 - 0x01D8)
class AInventory : public AActor
{
public:
	class AInventory*                                  Inventory;                                        		// 0x01D8 (0x0004) [0x0000000000000020]              ( CPF_Net )
	class AInventoryManager*                           InvManager;                                       		// 0x01DC (0x0004) [0x0000000000000020]              ( CPF_Net )
	struct FString                                     ItemName;                                         		// 0x01E0 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	unsigned long                                      bDropOnDeath : 1;                                 		// 0x01EC (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bDelayedSpawn : 1;                                		// 0x01EC (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bPredictRespawns : 1;                             		// 0x01EC (0x0004) [0x0000000000000000] [0x00000004] 
	float                                              RespawnTime;                                      		// 0x01F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxDesireability;                                 		// 0x01F4 (0x0004) [0x0000000000000000]              
	struct FString                                     PickupMessage;                                    		// 0x01F8 (0x000C) [0x0000000000408003]              ( CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	class USoundCue*                                   PickupSound;                                      		// 0x0204 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     PickupForce;                                      		// 0x0208 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class UClass*                                      DroppedPickupClass;                               		// 0x0214 (0x0004) [0x0000000000000000]              
	class UPrimitiveComponent*                         DroppedPickupMesh;                                		// 0x0218 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UPrimitiveComponent*                         PickupFactoryMesh;                                		// 0x021C (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UParticleSystemComponent*                    DroppedPickupParticles;                           		// 0x0220 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.Weapon
// 0x00A4 (0x02C8 - 0x0224)
class AWeapon : public AInventory
{
public:
	unsigned char                                      CurrentFireMode;                                  		// 0x0224 (0x0001) [0x0000000000000000]              
	TArray< struct FName >                             FiringStatesArray;                                		// 0x0228 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< unsigned char >                            WeaponFireTypes;                                  		// 0x0234 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< class UClass* >                            WeaponProjectiles;                                		// 0x0240 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< float >                                    FireInterval;                                     		// 0x024C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< float >                                    Spread;                                           		// 0x0258 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< float >                                    InstantHitDamage;                                 		// 0x0264 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< float >                                    InstantHitMomentum;                               		// 0x0270 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class UClass* >                            InstantHitDamageTypes;                            		// 0x027C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              EquipTime;                                        		// 0x0288 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              PutDownTime;                                      		// 0x028C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     FireOffset;                                       		// 0x0290 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bWeaponPutDown : 1;                               		// 0x029C (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bCanThrow : 1;                                    		// 0x029C (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bWasOptionalSet : 1;                              		// 0x029C (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bWasDoNotActivate : 1;                            		// 0x029C (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bInstantHit : 1;                                  		// 0x029C (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bMeleeWeapon : 1;                                 		// 0x029C (0x0004) [0x0000000000000000] [0x00000020] 
	float                                              WeaponRange;                                      		// 0x02A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMeshComponent*                              Mesh;                                             		// 0x02A4 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	float                                              DefaultAnimSpeed;                                 		// 0x02A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Priority;                                         		// 0x02AC (0x0004) [0x0000000000004000]              ( CPF_Config )
	class AAIController*                               AIController;                                     		// 0x02B0 (0x0004) [0x0000000000000000]              
	TArray< unsigned char >                            ShouldFireOnRelease;                              		// 0x02B4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              AIRating;                                         		// 0x02C0 (0x0004) [0x0000000000000000]              
	float                                              CachedMaxRange;                                   		// 0x02C4 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.InventoryManager
// 0x001C (0x01F4 - 0x01D8)
class AInventoryManager : public AActor
{
public:
	class AInventory*                                  InventoryChain;                                   		// 0x01D8 (0x0004) [0x0000000000000020]              ( CPF_Net )
	class AWeapon*                                     PendingWeapon;                                    		// 0x01DC (0x0004) [0x0000000000000000]              
	class AWeapon*                                     LastAttemptedSwitchToWeapon;                      		// 0x01E0 (0x0004) [0x0000000000000000]              
	unsigned long                                      bMustHoldWeapon : 1;                              		// 0x01E4 (0x0004) [0x0000000000000000] [0x00000001] 
	TArray< int >                                      PendingFire;                                      		// 0x01E8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.Keypoint
// 0x0004 (0x01DC - 0x01D8)
class AKeypoint : public AActor
{
public:
	class USpriteComponent*                            SpriteComp;                                       		// 0x01D8 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.TargetPoint
// 0x0008 (0x01E4 - 0x01DC)
class ATargetPoint : public AKeypoint
{
public:
	class UTexture2D*                                  SpawnSpriteTexture;                               		// 0x01DC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                SpawnRefCount;                                    		// 0x01E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.MaterialInstanceActor
// 0x0004 (0x01DC - 0x01D8)
class AMaterialInstanceActor : public AActor
{
public:
	class UMaterialInstanceConstant*                   MatInst;                                          		// 0x01D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MatineeActor
// 0x00B4 (0x028C - 0x01D8)
class AMatineeActor : public AActor
{
public:
	class USeqAct_Interp*                              InterpAction;                                     		// 0x01D8 (0x0004) [0x0000000000000022]              ( CPF_Const | CPF_Net )
	unsigned long                                      bIsPlaying : 1;                                   		// 0x01DC (0x0004) [0x0000000000000020] [0x00000001] ( CPF_Net )
	unsigned long                                      bReversePlayback : 1;                             		// 0x01DC (0x0004) [0x0000000000000020] [0x00000002] ( CPF_Net )
	unsigned long                                      bPaused : 1;                                      		// 0x01DC (0x0004) [0x0000000000000020] [0x00000004] ( CPF_Net )
	unsigned long                                      AllAIGroupsInitialized : 1;                       		// 0x01DC (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	float                                              PlayRate;                                         		// 0x01E0 (0x0004) [0x0000000000000020]              ( CPF_Net )
	float                                              Position;                                         		// 0x01E4 (0x0004) [0x0000000000000020]              ( CPF_Net )
	struct FName                                       AIGroupNames[ 0xA ];                              		// 0x01E8 (0x0050) [0x0000000000000020]              ( CPF_Net )
	class APawn*                                       AIGroupPawns[ 0xA ];                              		// 0x0238 (0x0028) [0x0000000000000020]              ( CPF_Net )
	int                                                AIGroupInitStage[ 0xA ];                          		// 0x0260 (0x0028) [0x0000000000002000]              ( CPF_Transient )
	float                                              ClientSidePositionErrorTolerance;                 		// 0x0288 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.NavigationPoint
// 0x00D8 (0x02B0 - 0x01D8)
class ANavigationPoint : public AActor
{
public:
	unsigned long                                      bEndPoint : 1;                                    		// 0x01D8 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bTransientEndPoint : 1;                           		// 0x01D8 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bHideEditorPaths : 1;                             		// 0x01D8 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bCanReach : 1;                                    		// 0x01D8 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      bBlocked : 1;                                     		// 0x01D8 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bOneWayPath : 1;                                  		// 0x01D8 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bNeverUseStrafing : 1;                            		// 0x01D8 (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bAlwaysUseStrafing : 1;                           		// 0x01D8 (0x0004) [0x0000000000000000] [0x00000080] 
	unsigned long                                      bForceNoStrafing : 1;                             		// 0x01D8 (0x0004) [0x0000000000000002] [0x00000100] ( CPF_Const )
	unsigned long                                      bAutoBuilt : 1;                                   		// 0x01D8 (0x0004) [0x0000000000000002] [0x00000200] ( CPF_Const )
	unsigned long                                      bSpecialMove : 1;                                 		// 0x01D8 (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      bNoAutoConnect : 1;                               		// 0x01D8 (0x0004) [0x0000000000000000] [0x00000800] 
	unsigned long                                      bNotBased : 1;                                    		// 0x01D8 (0x0004) [0x0000000000000002] [0x00001000] ( CPF_Const )
	unsigned long                                      bPathsChanged : 1;                                		// 0x01D8 (0x0004) [0x0000000000000002] [0x00002000] ( CPF_Const )
	unsigned long                                      bDestinationOnly : 1;                             		// 0x01D8 (0x0004) [0x0000000000000001] [0x00004000] ( CPF_Edit )
	unsigned long                                      bSourceOnly : 1;                                  		// 0x01D8 (0x0004) [0x0000000000000000] [0x00008000] 
	unsigned long                                      bSpecialForced : 1;                               		// 0x01D8 (0x0004) [0x0000000000000000] [0x00010000] 
	unsigned long                                      bMustBeReachable : 1;                             		// 0x01D8 (0x0004) [0x0000000000000000] [0x00020000] 
	unsigned long                                      bBlockable : 1;                                   		// 0x01D8 (0x0004) [0x0000000000000000] [0x00040000] 
	unsigned long                                      bFlyingPreferred : 1;                             		// 0x01D8 (0x0004) [0x0000000000000000] [0x00080000] 
	unsigned long                                      bMayCausePain : 1;                                		// 0x01D8 (0x0004) [0x0000000000000000] [0x00100000] 
	unsigned long                                      bAlreadyVisited : 1;                              		// 0x01D8 (0x0004) [0x0000000000002000] [0x00200000] ( CPF_Transient )
	unsigned long                                      bVehicleDestination : 1;                          		// 0x01D8 (0x0004) [0x0000000000000001] [0x00400000] ( CPF_Edit )
	unsigned long                                      bMakeSourceOnly : 1;                              		// 0x01D8 (0x0004) [0x0000000000000001] [0x00800000] ( CPF_Edit )
	unsigned long                                      bMustTouchToReach : 1;                            		// 0x01D8 (0x0004) [0x0000000000000000] [0x01000000] 
	unsigned long                                      bCanWalkOnToReach : 1;                            		// 0x01D8 (0x0004) [0x0000000000000000] [0x02000000] 
	unsigned long                                      bBuildLongPaths : 1;                              		// 0x01D8 (0x0004) [0x0000000000000001] [0x04000000] ( CPF_Edit )
	unsigned long                                      bSuppressReachError : 1;                          		// 0x01D8 (0x0004) [0x0000000000000000] [0x08000000] 
	unsigned long                                      bBlockedForVehicles : 1;                          		// 0x01D8 (0x0004) [0x0000000000000001] [0x10000000] ( CPF_Edit )
	unsigned long                                      bPreferredVehiclePath : 1;                        		// 0x01D8 (0x0004) [0x0000000000000001] [0x20000000] ( CPF_Edit )
	unsigned long                                      bHasCrossLevelPaths : 1;                          		// 0x01D8 (0x0004) [0x0000000000000002] [0x40000000] ( CPF_Const )
	unsigned long                                      bShouldSaveForCheckpoint : 1;                     		// 0x01D8 (0x0004) [0x0000000000002000] [0x80000000] ( CPF_Transient )
	struct FNavigationOctreeObject                     NavOctreeObject;                                  		// 0x01DC (0x0034) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< class UReachSpec* >                        PathList;                                         		// 0x0210 (0x000C) [0x0000000004620003]              ( CPF_Edit | CPF_Const | CPF_EditConst | CPF_NeedCtorLink | CPF_EditInline )
	TArray< struct FActorReference >                   EditorProscribedPaths;                            		// 0x021C (0x000C) [0x0000000000600000]              ( CPF_NeedCtorLink )
	TArray< struct FActorReference >                   EditorForcedPaths;                                		// 0x0228 (0x000C) [0x0000000000600000]              ( CPF_NeedCtorLink )
	TArray< struct FActorReference >                   Volumes;                                          		// 0x0234 (0x000C) [0x0000000000420003]              ( CPF_Edit | CPF_Const | CPF_EditConst | CPF_NeedCtorLink )
	int                                                visitedWeight;                                    		// 0x0240 (0x0004) [0x0000000000000000]              
	int                                                bestPathWeight;                                   		// 0x0244 (0x0004) [0x0000000000000002]              ( CPF_Const )
	class ANavigationPoint*                            nextNavigationPoint;                              		// 0x0248 (0x0004) [0x0000000000000002]              ( CPF_Const )
	class ANavigationPoint*                            nextOrdered;                                      		// 0x024C (0x0004) [0x0000000000000002]              ( CPF_Const )
	class ANavigationPoint*                            prevOrdered;                                      		// 0x0250 (0x0004) [0x0000000000000002]              ( CPF_Const )
	class ANavigationPoint*                            previousPath;                                     		// 0x0254 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                Cost;                                             		// 0x0258 (0x0004) [0x0000000000000000]              
	int                                                ExtraCost;                                        		// 0x025C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                TransientCost;                                    		// 0x0260 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                FearCost;                                         		// 0x0264 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FDebugNavCost >                     CostArray;                                        		// 0x0268 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class ADroppedPickup*                              InventoryCache;                                   		// 0x0274 (0x0004) [0x0000000000000000]              
	float                                              InventoryDist;                                    		// 0x0278 (0x0004) [0x0000000000000000]              
	float                                              LastDetourWeight;                                 		// 0x027C (0x0004) [0x0000000000000002]              ( CPF_Const )
	class UCylinderComponent*                          CylinderComponent;                                		// 0x0280 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FCylinder                                   MaxPathSize;                                      		// 0x0284 (0x0008) [0x0000000000020003]              ( CPF_Edit | CPF_Const | CPF_EditConst )
	struct FGuid                                       NavGuid;                                          		// 0x028C (0x0010) [0x0000000000220003]              ( CPF_Edit | CPF_Const | CPF_EditConst )
	class USpriteComponent*                            GoodSprite;                                       		// 0x029C (0x0004) [0x000000000408200A]              ( CPF_Const | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	class USpriteComponent*                            BadSprite;                                        		// 0x02A0 (0x0004) [0x000000000408200A]              ( CPF_Const | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	int                                                NetworkID;                                        		// 0x02A4 (0x0004) [0x0000000000020003]              ( CPF_Edit | CPF_Const | CPF_EditConst )
	class APawn*                                       AnchoredPawn;                                     		// 0x02A8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              LastAnchoredPawnTime;                             		// 0x02AC (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.CoverLink
// 0x0089 (0x0339 - 0x02B0)
class ACoverLink : public ANavigationPoint
{
public:
	unsigned long                                      GLOBAL_bUseSlotMarkers : 1;                       		// 0x02B0 (0x0004) [0x0000000000044000] [0x00000001] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bDisabled : 1;                                    		// 0x02B0 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bClaimAllSlots : 1;                               		// 0x02B0 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bAutoSort : 1;                                    		// 0x02B0 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bAutoAdjust : 1;                                  		// 0x02B0 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bCircular : 1;                                    		// 0x02B0 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bLooped : 1;                                      		// 0x02B0 (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bPlayerOnly : 1;                                  		// 0x02B0 (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bDynamicCover : 1;                                		// 0x02B0 (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      bFractureOnTouch : 1;                             		// 0x02B0 (0x0004) [0x0000000000000001] [0x00000200] ( CPF_Edit )
	unsigned long                                      bDebug_FireLinks : 1;                             		// 0x02B0 (0x0004) [0x0000000000000001] [0x00000400] ( CPF_Edit )
	unsigned long                                      bDebug_ExposedLinks : 1;                          		// 0x02B0 (0x0004) [0x0000000000000001] [0x00000800] ( CPF_Edit )
	unsigned long                                      bDebug_CoverGen : 1;                              		// 0x02B0 (0x0004) [0x0000000000000001] [0x00001000] ( CPF_Edit )
	unsigned long                                      bDoAutoSlotDensityFixup : 1;                      		// 0x02B0 (0x0004) [0x0000000000000001] [0x00002000] ( CPF_Edit )
	float                                              LeanTraceDist;                                    		// 0x02B4 (0x0004) [0x0000000000000000]              
	TArray< struct FCoverSlot >                        Slots;                                            		// 0x02B8 (0x000C) [0x0000000004400001]              ( CPF_Edit | CPF_NeedCtorLink | CPF_EditInline )
	TArray< struct FDynamicLinkInfo >                  DynamicLinkInfos;                                 		// 0x02C4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< class APawn* >                             Claims;                                           		// 0x02D0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              InvalidateDistance;                               		// 0x02DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxFireLinkDist;                                  		// 0x02E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     CircularOrigin;                                   		// 0x02E4 (0x000C) [0x0000000000000002]              ( CPF_Const )
	float                                              CircularRadius;                                   		// 0x02F0 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              AlignDist;                                        		// 0x02F4 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              AutoCoverSlotInterval;                            		// 0x02F8 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              StandHeight;                                      		// 0x02FC (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              MidHeight;                                        		// 0x0300 (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FVector                                     StandingLeanOffset;                               		// 0x0304 (0x000C) [0x0000000000000002]              ( CPF_Const )
	struct FVector                                     CrouchLeanOffset;                                 		// 0x0310 (0x000C) [0x0000000000000002]              ( CPF_Const )
	struct FVector                                     PopupOffset;                                      		// 0x031C (0x000C) [0x0000000000000002]              ( CPF_Const )
	float                                              SlipDist;                                         		// 0x0328 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              TurnDist;                                         		// 0x032C (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              DangerScale;                                      		// 0x0330 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class ACoverLink*                                  NextCoverLink;                                    		// 0x0334 (0x0004) [0x0000000000000002]              ( CPF_Const )
	unsigned char                                      LocationDescription;                              		// 0x0338 (0x0001) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
public:
};

// Class Engine.DoorMarker
// 0x0010 (0x02C0 - 0x02B0)
class ADoorMarker : public ANavigationPoint
{
public:
	class AInterpActor*                                MyDoor;                                           		// 0x02B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      DoorType;                                         		// 0x02B4 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	class AActor*                                      DoorTrigger;                                      		// 0x02B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bWaitUntilCompletelyOpened : 1;                   		// 0x02BC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bInitiallyClosed : 1;                             		// 0x02BC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bBlockedWhenClosed : 1;                           		// 0x02BC (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bDoorOpen : 1;                                    		// 0x02BC (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bTempDisabledCollision : 1;                       		// 0x02BC (0x0004) [0x0000000000002002] [0x00000010] ( CPF_Const | CPF_Transient )
public:
};

// Class Engine.DynamicAnchor
// 0x0004 (0x02B4 - 0x02B0)
class ADynamicAnchor : public ANavigationPoint
{
public:
	class AController*                                 CurrentUser;                                      		// 0x02B0 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.Ladder
// 0x0008 (0x02B8 - 0x02B0)
class ALadder : public ANavigationPoint
{
public:
	class ALadderVolume*                               MyLadder;                                         		// 0x02B0 (0x0004) [0x0000000000000000]              
	class ALadder*                                     LadderList;                                       		// 0x02B4 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.AutoLadder
// 0x0000 (0x02B8 - 0x02B8)
class AAutoLadder : public ALadder
{
public:
public:
};

// Class Engine.LiftCenter
// 0x0020 (0x02D0 - 0x02B0)
class ALiftCenter : public ANavigationPoint
{
public:
	class AInterpActor*                                MyLift;                                           		// 0x02B0 (0x0004) [0x0000000000000000]              
	float                                              MaxDist2D;                                        		// 0x02B4 (0x0004) [0x0000000000000000]              
	struct FVector                                     LiftOffset;                                       		// 0x02B8 (0x000C) [0x0000000000000000]              
	unsigned long                                      bJumpLift : 1;                                    		// 0x02C4 (0x0004) [0x0000000000000000] [0x00000001] 
	float                                              CollisionHeight;                                  		// 0x02C8 (0x0004) [0x0000000000000000]              
	class ATrigger*                                    LiftTrigger;                                      		// 0x02CC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.LiftExit
// 0x0008 (0x02B8 - 0x02B0)
class ALiftExit : public ANavigationPoint
{
public:
	class ALiftCenter*                                 MyLiftCenter;                                     		// 0x02B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bExitOnly : 1;                                    		// 0x02B4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.PathNode
// 0x0000 (0x02B0 - 0x02B0)
class APathNode : public ANavigationPoint
{
public:
public:
};

// Class Engine.VolumePathNode
// 0x0008 (0x02B8 - 0x02B0)
class AVolumePathNode : public APathNode
{
public:
	float                                              StartingRadius;                                   		// 0x02B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              StartingHeight;                                   		// 0x02B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.PickupFactory
// 0x001C (0x02CC - 0x02B0)
class APickupFactory : public ANavigationPoint
{
public:
	unsigned long                                      bOnlyReplicateHidden : 1;                         		// 0x02B0 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bPickupHidden : 1;                                		// 0x02B0 (0x0004) [0x0000000000000020] [0x00000002] ( CPF_Net )
	unsigned long                                      bPredictRespawns : 1;                             		// 0x02B0 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bIsSuperItem : 1;                                 		// 0x02B0 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bRespawnPaused : 1;                               		// 0x02B0 (0x0004) [0x0000000000000000] [0x00000010] 
	class UClass*                                      InventoryType;                                    		// 0x02B4 (0x0004) [0x0000000000000020]              ( CPF_Net )
	float                                              RespawnEffectTime;                                		// 0x02B8 (0x0004) [0x0000000000000000]              
	float                                              MaxDesireability;                                 		// 0x02BC (0x0004) [0x0000000000000000]              
	class UPrimitiveComponent*                         PickupMesh;                                       		// 0x02C0 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	class APickupFactory*                              ReplacementFactory;                               		// 0x02C4 (0x0004) [0x0000000000000000]              
	class APickupFactory*                              OriginalFactory;                                  		// 0x02C8 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.PlayerStart
// 0x0010 (0x02C0 - 0x02B0)
class APlayerStart : public ANavigationPoint
{
public:
	unsigned long                                      bEnabled : 1;                                     		// 0x02B0 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bPrimaryStart : 1;                                		// 0x02B0 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bBestStart : 1;                                   		// 0x02B0 (0x0004) [0x0000000000000000] [0x00000004] 
	int                                                TeamIndex;                                        		// 0x02B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                Score;                                            		// 0x02B8 (0x0004) [0x0000000000000000]              
	int                                                SelectionIndex;                                   		// 0x02BC (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.PortalMarker
// 0x0004 (0x02B4 - 0x02B0)
class APortalMarker : public ANavigationPoint
{
public:
	class APortalTeleporter*                           MyPortal;                                         		// 0x02B0 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.Pylon
// 0x0090 (0x0340 - 0x02B0)
class APylon : public ANavigationPoint
{
public:
	struct FPointer                                    VfTable_IEditorLinkSelectionInterface;            		// 0x02B0 (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	struct FPointer                                    NavMeshPtr;                                       		// 0x02B4 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FPointer                                    ObstacleMesh;                                     		// 0x02B8 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FPointer                                    DynamicObstacleMesh;                              		// 0x02BC (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FPointer                                    WorkingSetPtr;                                    		// 0x02C0 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FPointer                                    PathObjectsThatAffectThisPylon;                   		// 0x02C4 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FVector >                           NextPassSeedList;                                 		// 0x02C8 (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	struct FOctreeElementId                            OctreeId;                                         		// 0x02D4 (0x0008) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FPointer                                    OctreeIWasAddedTo;                                		// 0x02DC (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	class APylon*                                      NextPylon;                                        		// 0x02E0 (0x0004) [0x0000000000000002]              ( CPF_Const )
	TArray< class AVolume* >                           ExpansionVolumes;                                 		// 0x02E4 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              ExpansionRadius;                                  		// 0x02F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxExpansionRadius;                               		// 0x02F4 (0x0004) [0x0000000000000002]              ( CPF_Const )
	class UDrawPylonRadiusComponent*                   PylonRadiusPreview;                               		// 0x02F8 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	unsigned long                                      bImportedMesh : 1;                                		// 0x02FC (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bUseExpansionSphereOverride : 1;                  		// 0x02FC (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bNeedsCostCheck : 1;                              		// 0x02FC (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bDrawEdgePolys : 1;                               		// 0x02FC (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bDrawPolyBounds : 1;                              		// 0x02FC (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bRenderInShowPaths : 1;                           		// 0x02FC (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bDrawWalkableSurface : 1;                         		// 0x02FC (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bDrawObstacleSurface : 1;                         		// 0x02FC (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bBuildThisPylon : 1;                              		// 0x02FC (0x0004) [0x0000000000002000] [0x00000100] ( CPF_Transient )
	unsigned long                                      bDisabled : 1;                                    		// 0x02FC (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bForceObstacleMeshCollision : 1;                  		// 0x02FC (0x0004) [0x0000000000000000] [0x00000400] 
	struct FVector                                     ExpansionSphereCenter;                            		// 0x0300 (0x000C) [0x0000000000000000]              
	class UNavMeshRenderingComponent*                  RenderingComp;                                    		// 0x030C (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	class USpriteComponent*                            BrokenSprite;                                     		// 0x0310 (0x0004) [0x000000000408200A]              ( CPF_Const | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	TArray< class APylon* >                            ImposterPylons;                                   		// 0x0314 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class AActor* >                            OnBuild_DisableCollisionForThese;                 		// 0x0320 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class AActor* >                            OnBuild_EnableCollisionForThese;                  		// 0x032C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              MaxPolyHeight_Optional;                           		// 0x0338 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                DebugEdgeCount;                                   		// 0x033C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.AISwitchablePylon
// 0x0004 (0x0344 - 0x0340)
class AAISwitchablePylon : public APylon
{
public:
	unsigned long                                      bOpen : 1;                                        		// 0x0340 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.DynamicPylon
// 0x0004 (0x0344 - 0x0340)
class ADynamicPylon : public APylon
{
public:
	unsigned long                                      bMoving : 1;                                      		// 0x0340 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class Engine.Teleporter
// 0x0028 (0x02D8 - 0x02B0)
class ATeleporter : public ANavigationPoint
{
public:
	struct FString                                     URL;                                              		// 0x02B0 (0x000C) [0x0000000000400021]              ( CPF_Edit | CPF_Net | CPF_NeedCtorLink )
	struct FName                                       ProductRequired;                                  		// 0x02BC (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bChangesVelocity : 1;                             		// 0x02C4 (0x0004) [0x0000000000000021] [0x00000001] ( CPF_Edit | CPF_Net )
	unsigned long                                      bChangesYaw : 1;                                  		// 0x02C4 (0x0004) [0x0000000000000021] [0x00000002] ( CPF_Edit | CPF_Net )
	unsigned long                                      bReversesX : 1;                                   		// 0x02C4 (0x0004) [0x0000000000000021] [0x00000004] ( CPF_Edit | CPF_Net )
	unsigned long                                      bReversesY : 1;                                   		// 0x02C4 (0x0004) [0x0000000000000021] [0x00000008] ( CPF_Edit | CPF_Net )
	unsigned long                                      bReversesZ : 1;                                   		// 0x02C4 (0x0004) [0x0000000000000021] [0x00000010] ( CPF_Edit | CPF_Net )
	unsigned long                                      bEnabled : 1;                                     		// 0x02C4 (0x0004) [0x0000000000000021] [0x00000020] ( CPF_Edit | CPF_Net )
	unsigned long                                      bCanTeleportVehicles : 1;                         		// 0x02C4 (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	struct FVector                                     TargetVelocity;                                   		// 0x02C8 (0x000C) [0x0000000000000021]              ( CPF_Edit | CPF_Net )
	float                                              LastFired;                                        		// 0x02D4 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.Note
// 0x000C (0x01E4 - 0x01D8)
class ANote : public AActor
{
public:
	struct FString                                     Text;                                             		// 0x01D8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.Projectile
// 0x003C (0x0214 - 0x01D8)
class AProjectile : public AActor
{
public:
	float                                              Speed;                                            		// 0x01D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxSpeed;                                         		// 0x01DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bSwitchToZeroCollision : 1;                       		// 0x01E0 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bBlockedByInstigator : 1;                         		// 0x01E0 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bBegunPlay : 1;                                   		// 0x01E0 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bRotationFollowsVelocity : 1;                     		// 0x01E0 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bIgnoreFoliageTouch : 1;                          		// 0x01E0 (0x0004) [0x0000000000000000] [0x00000010] 
	class AActor*                                      ZeroCollider;                                     		// 0x01E4 (0x0004) [0x0000000000000000]              
	class UPrimitiveComponent*                         ZeroColliderComponent;                            		// 0x01E8 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	float                                              Damage;                                           		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DamageRadius;                                     		// 0x01F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MomentumTransfer;                                 		// 0x01F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UClass*                                      MyDamageType;                                     		// 0x01F8 (0x0004) [0x0000000000000000]              
	class USoundCue*                                   SpawnSound;                                       		// 0x01FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   ImpactSound;                                      		// 0x0200 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class AController*                                 InstigatorController;                             		// 0x0204 (0x0004) [0x0000000000000000]              
	class AActor*                                      ImpactedActor;                                    		// 0x0208 (0x0004) [0x0000000000000000]              
	float                                              NetCullDistanceSquared;                           		// 0x020C (0x0004) [0x0000000000000000]              
	class UCylinderComponent*                          CylinderComponent;                                		// 0x0210 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.RigidBodyBase
// 0x0000 (0x01D8 - 0x01D8)
class ARigidBodyBase : public AActor
{
public:
public:
};

// Class Engine.SceneCaptureActor
// 0x0004 (0x01DC - 0x01D8)
class ASceneCaptureActor : public AActor
{
public:
	class USceneCaptureComponent*                      SceneCapture;                                     		// 0x01D8 (0x0004) [0x000000000408000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.SceneCapture2DActor
// 0x0004 (0x01E0 - 0x01DC)
class ASceneCapture2DActor : public ASceneCaptureActor
{
public:
	class UDrawFrustumComponent*                       DrawFrustum;                                      		// 0x01DC (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.SceneCaptureCubeMapActor
// 0x0008 (0x01E4 - 0x01DC)
class ASceneCaptureCubeMapActor : public ASceneCaptureActor
{
public:
	class UStaticMeshComponent*                        StaticMesh;                                       		// 0x01DC (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UMaterialInstanceConstant*                   CubeMaterialInst;                                 		// 0x01E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.SceneCaptureReflectActor
// 0x0008 (0x01E4 - 0x01DC)
class ASceneCaptureReflectActor : public ASceneCaptureActor
{
public:
	class UStaticMeshComponent*                        StaticMesh;                                       		// 0x01DC (0x0004) [0x000000000408000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UMaterialInstanceConstant*                   ReflectMaterialInst;                              		// 0x01E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.SceneCapturePortalActor
// 0x0000 (0x01E4 - 0x01E4)
class ASceneCapturePortalActor : public ASceneCaptureReflectActor
{
public:
public:
};

// Class Engine.PortalTeleporter
// 0x0014 (0x01F8 - 0x01E4)
class APortalTeleporter : public ASceneCapturePortalActor
{
public:
	class APortalTeleporter*                           SisterPortal;                                     		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                TextureResolutionX;                               		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                TextureResolutionY;                               		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class APortalMarker*                               MyMarker;                                         		// 0x01F0 (0x0004) [0x0000000000000000]              
	unsigned long                                      bMovablePortal : 1;                               		// 0x01F4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bAlwaysTeleportNonPawns : 1;                      		// 0x01F4 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bCanTeleportVehicles : 1;                         		// 0x01F4 (0x0004) [0x0000000000000000] [0x00000004] 
public:
};

// Class Engine.StaticMeshActorBase
// 0x0000 (0x01D8 - 0x01D8)
class AStaticMeshActorBase : public AActor
{
public:
public:
};

// Class Engine.StaticMeshActor
// 0x0008 (0x01E0 - 0x01D8)
class AStaticMeshActor : public AStaticMeshActorBase
{
public:
	class UStaticMeshComponent*                        StaticMeshComponent;                              		// 0x01D8 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	unsigned long                                      bDisableAutoBaseOnProcBuilding : 1;               		// 0x01DC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bCreatePhysicsCollisionGeometry : 1;              		// 0x01DC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
public:
};

// Class Engine.StaticMeshCollectionActor
// 0x0010 (0x01E8 - 0x01D8)
class AStaticMeshCollectionActor : public AStaticMeshActorBase
{
public:
	TArray< class UStaticMeshComponent* >              StaticMeshComponents;                             		// 0x01D8 (0x000C) [0x000000000448000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	int                                                MaxStaticMeshComponents;                          		// 0x01E4 (0x0004) [0x0000000000004000]              ( CPF_Config )
public:
};

// Class Engine.StaticMeshActorBasedOnExtremeContent
// 0x001C (0x01F4 - 0x01D8)
class AStaticMeshActorBasedOnExtremeContent : public AActor
{
public:
	class UStaticMeshComponent*                        StaticMeshComponent;                              		// 0x01D8 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	TArray< struct FSMMaterialSetterDatum >            ExtremeContent;                                   		// 0x01DC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FSMMaterialSetterDatum >            NonExtremeContent;                                		// 0x01E8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.Trigger
// 0x000C (0x01E4 - 0x01D8)
class ATrigger : public AActor
{
public:
	class UCylinderComponent*                          CylinderComponent;                                		// 0x01D8 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	unsigned long                                      bRecentlyTriggered : 1;                           		// 0x01DC (0x0004) [0x0000000000000000] [0x00000001] 
	float                                              AITriggerDelay;                                   		// 0x01E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.Trigger_PawnsOnly
// 0x0000 (0x01E4 - 0x01E4)
class ATrigger_PawnsOnly : public ATrigger
{
public:
public:
};

// Class Engine.ActorComponent
// 0x000D (0x0055 - 0x0048)
class UActorComponent : public UComponent
{
public:
	struct FPointer                                    Scene;                                            		// 0x0048 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	class AActor*                                      Owner;                                            		// 0x004C (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	unsigned long                                      bAttached : 1;                                    		// 0x0050 (0x0004) [0x0000000000003002] [0x00000001] ( CPF_Const | CPF_Native | CPF_Transient )
	unsigned long                                      bTickInEditor : 1;                                		// 0x0050 (0x0004) [0x0000000000000002] [0x00000002] ( CPF_Const )
	unsigned long                                      bNeedsReattach : 1;                               		// 0x0050 (0x0004) [0x0000000000002002] [0x00000004] ( CPF_Const | CPF_Transient )
	unsigned long                                      bNeedsUpdateTransform : 1;                        		// 0x0050 (0x0004) [0x0000000000002002] [0x00000008] ( CPF_Const | CPF_Transient )
	unsigned long                                      bNoPhysics : 1;                                   		// 0x0050 (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned char                                      TickGroup;                                        		// 0x0054 (0x0001) [0x0000000000000002]              ( CPF_Const )
public:
};

// Class Engine.AudioComponent
// 0x01F3 (0x0248 - 0x0055)
class UAudioComponent : public UActorComponent
{
public:
	class USoundCue*                                   SoundCue;                                         		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundNode*                                  CueFirstNode;                                     		// 0x005C (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< struct FAudioComponentParam >              InstanceParameters;                               		// 0x0060 (0x000C) [0x0000000004400001]              ( CPF_Edit | CPF_NeedCtorLink | CPF_EditInline )
	unsigned long                                      bUseOwnerLocation : 1;                            		// 0x006C (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bAutoPlay : 1;                                    		// 0x006C (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bAutoDestroy : 1;                                 		// 0x006C (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bStopWhenOwnerDestroyed : 1;                      		// 0x006C (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bShouldRemainActiveIfDropped : 1;                 		// 0x006C (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bWasOccluded : 1;                                 		// 0x006C (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bSuppressSubtitles : 1;                           		// 0x006C (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	unsigned long                                      bWasPlaying : 1;                                  		// 0x006C (0x0004) [0x0000000000002000] [0x00000080] ( CPF_Transient )
	unsigned long                                      bAllowSpatialization : 1;                         		// 0x006C (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      bFinished : 1;                                    		// 0x006C (0x0004) [0x0000000000002000] [0x00000200] ( CPF_Transient )
	unsigned long                                      bApplyRadioFilter : 1;                            		// 0x006C (0x0004) [0x0000000000002000] [0x00000400] ( CPF_Transient )
	unsigned long                                      bRadioFilterSelected : 1;                         		// 0x006C (0x0004) [0x0000000000002000] [0x00000800] ( CPF_Transient )
	unsigned long                                      bPreviewComponent : 1;                            		// 0x006C (0x0004) [0x0000000000002000] [0x00001000] ( CPF_Transient )
	unsigned long                                      bIgnoreForFlushing : 1;                           		// 0x006C (0x0004) [0x0000000000002000] [0x00002000] ( CPF_Transient )
	float                                              StereoBleed;                                      		// 0x0070 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              LFEBleed;                                         		// 0x0074 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bEQFilterApplied : 1;                             		// 0x0078 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bAlwaysPlay : 1;                                  		// 0x0078 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bIsUISound : 1;                                   		// 0x0078 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bIsMusic : 1;                                     		// 0x0078 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      bReverb : 1;                                      		// 0x0078 (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	unsigned long                                      bCenterChannelOnly : 1;                           		// 0x0078 (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      bIsFlashBangFx : 1;                               		// 0x0078 (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	unsigned long                                      bIsFlashBangWhiz : 1;                             		// 0x0078 (0x0004) [0x0000000000002000] [0x00000080] ( CPF_Transient )
	TArray< struct FPointer >                          WaveInstances;                                    		// 0x007C (0x000C) [0x0000000000201002]              ( CPF_Const | CPF_Native )
	TArray< unsigned char >                            SoundNodeData;                                    		// 0x0088 (0x000C) [0x0000000000201002]              ( CPF_Const | CPF_Native )
	unsigned char                                      UnknownData00[ 0x3C ];                            		// 0x0094 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.AudioComponent.SoundNodeOffsetMap
	struct FMultiMap_Mirror                            SoundNodeResetWaveMap;                            		// 0x00D0 (0x003C) [0x0000000000201002]              ( CPF_Const | CPF_Native )
	struct FPointer                                    Listener;                                         		// 0x010C (0x0004) [0x0000000000201002]              ( CPF_Const | CPF_Native )
	float                                              PlaybackTime;                                     		// 0x0110 (0x0004) [0x0000000000201002]              ( CPF_Const | CPF_Native )
	class APortalVolume*                               PortalVolume;                                     		// 0x0114 (0x0004) [0x0000000000201002]              ( CPF_Const | CPF_Native )
	struct FVector                                     Location;                                         		// 0x0118 (0x000C) [0x0000000000201000]              ( CPF_Native )
	struct FVector                                     ComponentLocation;                                		// 0x0124 (0x000C) [0x0000000000201002]              ( CPF_Const | CPF_Native )
	class AActor*                                      LastOwner;                                        		// 0x0130 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              SubtitlePriority;                                 		// 0x0134 (0x0004) [0x0000000000001000]              ( CPF_Native )
	float                                              FadeInStartTime;                                  		// 0x0138 (0x0004) [0x0000000000000000]              
	float                                              FadeInStopTime;                                   		// 0x013C (0x0004) [0x0000000000000000]              
	float                                              FadeInTargetVolume;                               		// 0x0140 (0x0004) [0x0000000000000000]              
	float                                              FadeOutStartTime;                                 		// 0x0144 (0x0004) [0x0000000000000000]              
	float                                              FadeOutStopTime;                                  		// 0x0148 (0x0004) [0x0000000000000000]              
	float                                              FadeOutTargetVolume;                              		// 0x014C (0x0004) [0x0000000000000000]              
	float                                              AdjustVolumeStartTime;                            		// 0x0150 (0x0004) [0x0000000000000000]              
	float                                              AdjustVolumeStopTime;                             		// 0x0154 (0x0004) [0x0000000000000000]              
	float                                              AdjustVolumeTargetVolume;                         		// 0x0158 (0x0004) [0x0000000000000000]              
	float                                              CurrAdjustVolumeTargetVolume;                     		// 0x015C (0x0004) [0x0000000000000000]              
	class USoundNode*                                  CurrentNotifyBufferFinishedHook;                  		// 0x0160 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FVector                                     CurrentLocation;                                  		// 0x0164 (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              CurrentVolume;                                    		// 0x0170 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              CurrentPitch;                                     		// 0x0174 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              CurrentHighFrequencyGain;                         		// 0x0178 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	int                                                CurrentUseSpatialization;                         		// 0x017C (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	int                                                CurrentNotifyOnLoop;                              		// 0x0180 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              CurrentVolumeMultiplier;                          		// 0x0184 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              CurrentPitchMultiplier;                           		// 0x0188 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              CurrentHighFrequencyGainMultiplier;               		// 0x018C (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              CurrentVoiceCenterChannelVolume;                  		// 0x0190 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              CurrentRadioFilterVolume;                         		// 0x0194 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              CurrentRadioFilterVolumeThreshold;                		// 0x0198 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FDouble                                     LastUpdateTime;                                   		// 0x019C (0x0008) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              SourceInteriorVolume;                             		// 0x01A4 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              SourceInteriorLPF;                                		// 0x01A8 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              CurrentInteriorVolume;                            		// 0x01AC (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              CurrentInteriorLPF;                               		// 0x01B0 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FVector                                     LastLocation;                                     		// 0x01B4 (0x000C) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FInteriorSettings                           LastInteriorSettings;                             		// 0x01C0 (0x0024) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	int                                                LastReverbVolumeIndex;                            		// 0x01E4 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              VolumeMultiplier;                                 		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              PitchMultiplier;                                  		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              HighFrequencyGainMultiplier;                      		// 0x01F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OcclusionCheckInterval;                           		// 0x01F4 (0x0004) [0x0000000000000000]              
	float                                              LastOcclusionCheckTime;                           		// 0x01F8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bOcclusionFullyInitialized : 1;                   		// 0x01FC (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	float                                              LastOcclusionChangeTime;                          		// 0x0200 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              OcclusionFadeTime;                                		// 0x0204 (0x0004) [0x0000000000000000]              
	float                                              OcclusionHighFrequencyGain;                       		// 0x0208 (0x0004) [0x0000000000000000]              
	unsigned long                                      bOcclusionWithLowPassFilter : 1;                  		// 0x020C (0x0004) [0x0000000000000000] [0x00000001] 
	float                                              CurrentOcclusionHighFrequencyGain;                		// 0x0210 (0x0004) [0x0000000000000000]              
	TArray< struct FVector >                           OcclusionTargets;                                 		// 0x0214 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              OcclusionVolumeMultiplier;                        		// 0x0220 (0x0004) [0x0000000000000000]              
	float                                              StartOffset;                                      		// 0x0224 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bNoSoundOcclusionChecking : 1;                    		// 0x0228 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bDebug : 1;                                       		// 0x0228 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	class UDrawSoundRadiusComponent*                   PreviewSoundRadius;                               		// 0x022C (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FScriptDelegate                             __OnAudioFinished__Delegate;                      		// 0x0230 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnQueueSubtitles__Delegate;                     		// 0x023C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.SplineAudioComponent
// 0x0004 (0x024C - 0x0248)
class USplineAudioComponent : public UAudioComponent
{
public:
	class USplineComponent*                            SplineComponent;                                  		// 0x0248 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.HeightFogComponent
// 0x001F (0x0074 - 0x0055)
class UHeightFogComponent : public UActorComponent
{
public:
	unsigned long                                      bEnabled : 1;                                     		// 0x0058 (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	float                                              Height;                                           		// 0x005C (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              Density;                                          		// 0x0060 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              LightBrightness;                                  		// 0x0064 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FColor                                      LightColor;                                       		// 0x0068 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              ExtinctionDistance;                               		// 0x006C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              StartDistance;                                    		// 0x0070 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
public:
};

// Class Engine.PrimitiveComponent
// 0x018F (0x01E4 - 0x0055)
class UPrimitiveComponent : public UActorComponent
{
public:
	int                                                Tag;                                              		// 0x0058 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FBoxSphereBounds                            Bounds;                                           		// 0x005C (0x001C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FPointer                                    SceneInfo;                                        		// 0x0078 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	int                                                DetachFence;                                      		// 0x007C (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              LocalToWorldDeterminant;                          		// 0x0080 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	unsigned char                                      UnknownData00[ 0xC ];                             		// 0x0084 (0x000C) MISSED OFFSET
	struct FMatrix                                     LocalToWorld;                                     		// 0x0090 (0x0040) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	int                                                MotionBlurInfoIndex;                              		// 0x00D0 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FPointer >                          DecalList;                                        		// 0x00D4 (0x000C) [0x0000000001001002]              ( CPF_Const | CPF_Native )
	TArray< class UDecalComponent* >                   DecalsToReattach;                                 		// 0x00E0 (0x000C) [0x000000000448200A]              ( CPF_Const | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	class UPrimitiveComponent*                         ShadowParent;                                     		// 0x00EC (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UPrimitiveComponent*                         ReplacementPrimitive;                             		// 0x00F0 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UFogVolumeDensityComponent*                  FogVolumeComponent;                               		// 0x00F4 (0x0004) [0x000000000408200A]              ( CPF_Const | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	class ULightComponent*                             OverrideLightComponent;                           		// 0x00F8 (0x0004) [0x000000000408200A]              ( CPF_Const | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	class ULightEnvironmentComponent*                  LightEnvironment;                                 		// 0x00FC (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class ULightEnvironmentComponent*                  PreviousLightEnvironment;                         		// 0x0100 (0x0004) [0x000000000408200A]              ( CPF_Const | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	float                                              MinDrawDistance;                                  		// 0x0104 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MassiveLODDistance;                               		// 0x0108 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxDrawDistance;                                  		// 0x010C (0x0004) [0x0000000000800003]              ( CPF_Edit | CPF_Const | CPF_NoExport )
	float                                              CachedMaxDrawDistance;                            		// 0x0110 (0x0004) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
	float                                              MotionBlurInstanceScale;                          		// 0x0114 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CullDistance;                                     		// 0x0118 (0x0004) [0x0000000020800002]              ( CPF_Const | CPF_NoExport | CPF_Deprecated )
	float                                              CachedCullDistance;                               		// 0x011C (0x0004) [0x0000000020020000]              ( CPF_EditConst | CPF_Deprecated )
	unsigned char                                      DepthPriorityGroup;                               		// 0x0120 (0x0001) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned char                                      ViewOwnerDepthPriorityGroup;                      		// 0x0121 (0x0001) [0x0000000000000002]              ( CPF_Const )
	unsigned char                                      DetailMode;                                       		// 0x0122 (0x0001) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned char                                      RBChannel;                                        		// 0x0123 (0x0001) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned char                                      RBDominanceGroup;                                 		// 0x0124 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      PreviewEnvironmentShadowing;                      		// 0x0125 (0x0001) [0x0000000000000000]              
	unsigned long                                      bUseViewOwnerDepthPriorityGroup : 1;              		// 0x0128 (0x0004) [0x0000000000000002] [0x00000001] ( CPF_Const )
	unsigned long                                      bAllowCullDistanceVolume : 1;                     		// 0x0128 (0x0004) [0x0000000000000003] [0x00000002] ( CPF_Edit | CPF_Const )
	unsigned long                                      HiddenGame : 1;                                   		// 0x0128 (0x0004) [0x0000000000000003] [0x00000004] ( CPF_Edit | CPF_Const )
	unsigned long                                      HiddenEditor : 1;                                 		// 0x0128 (0x0004) [0x0000000000000003] [0x00000008] ( CPF_Edit | CPF_Const )
	unsigned long                                      bOwnerNoSee : 1;                                  		// 0x0128 (0x0004) [0x0000000000000003] [0x00000010] ( CPF_Edit | CPF_Const )
	unsigned long                                      bOnlyOwnerSee : 1;                                		// 0x0128 (0x0004) [0x0000000000000003] [0x00000020] ( CPF_Edit | CPF_Const )
	unsigned long                                      bIgnoreOwnerHidden : 1;                           		// 0x0128 (0x0004) [0x0000000000000003] [0x00000040] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUseAsOccluder : 1;                               		// 0x0128 (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bAllowApproximateOcclusion : 1;                   		// 0x0128 (0x0004) [0x0000000000000001] [0x00000100] ( CPF_Edit )
	unsigned long                                      bFirstFrameOcclusion : 1;                         		// 0x0128 (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bIgnoreNearPlaneIntersection : 1;                 		// 0x0128 (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      bSelectable : 1;                                  		// 0x0128 (0x0004) [0x0000000000000000] [0x00000800] 
	unsigned long                                      bForceMipStreaming : 1;                           		// 0x0128 (0x0004) [0x0000000000000003] [0x00001000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bAcceptsDecals : 1;                               		// 0x0128 (0x0004) [0x0000000020000002] [0x00002000] ( CPF_Const | CPF_Deprecated )
	unsigned long                                      bAcceptsDecalsDuringGameplay : 1;                 		// 0x0128 (0x0004) [0x0000000020000002] [0x00004000] ( CPF_Const | CPF_Deprecated )
	unsigned long                                      bAcceptsStaticDecals : 1;                         		// 0x0128 (0x0004) [0x0000000000000003] [0x00008000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bAcceptsDynamicDecals : 1;                        		// 0x0128 (0x0004) [0x0000000000000003] [0x00010000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bIsRefreshingDecals : 1;                          		// 0x0128 (0x0004) [0x0000000000003002] [0x00020000] ( CPF_Const | CPF_Native | CPF_Transient )
	unsigned long                                      bAllowDecalAutomaticReAttach : 1;                 		// 0x0128 (0x0004) [0x0000000000003000] [0x00040000] ( CPF_Native | CPF_Transient )
	unsigned long                                      bUsePerInstanceHitProxies : 1;                    		// 0x0128 (0x0004) [0x0000000000000000] [0x00080000] 
	unsigned long                                      CastShadow : 1;                                   		// 0x0128 (0x0004) [0x0000000000000001] [0x00100000] ( CPF_Edit )
	unsigned long                                      bForceDirectLightMap : 1;                         		// 0x0128 (0x0004) [0x0000000000000002] [0x00200000] ( CPF_Const )
	unsigned long                                      bCastDynamicShadow : 1;                           		// 0x0128 (0x0004) [0x0000000000000001] [0x00400000] ( CPF_Edit )
	unsigned long                                      bCastStaticShadow : 1;                            		// 0x0128 (0x0004) [0x0000000000000001] [0x00800000] ( CPF_Edit )
	unsigned long                                      bSelfShadowOnly : 1;                              		// 0x0128 (0x0004) [0x0000000000000001] [0x01000000] ( CPF_Edit )
	unsigned long                                      bNoModSelfShadow : 1;                             		// 0x0128 (0x0004) [0x0000000000000001] [0x02000000] ( CPF_Edit )
	unsigned long                                      bAcceptsDynamicDominantLightShadows : 1;          		// 0x0128 (0x0004) [0x0000000000000001] [0x04000000] ( CPF_Edit )
	unsigned long                                      bCastHiddenShadow : 1;                            		// 0x0128 (0x0004) [0x0000000000000001] [0x08000000] ( CPF_Edit )
	unsigned long                                      bCastShadowAsTwoSided : 1;                        		// 0x0128 (0x0004) [0x0000000000000001] [0x10000000] ( CPF_Edit )
	unsigned long                                      bAcceptsLights : 1;                               		// 0x0128 (0x0004) [0x0000000000000003] [0x20000000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bAcceptsDynamicLights : 1;                        		// 0x0128 (0x0004) [0x0000000000000003] [0x40000000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUseOnePassLightingOnTranslucency : 1;            		// 0x0128 (0x0004) [0x0000000000000003] [0x80000000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUsePrecomputedShadows : 1;                       		// 0x012C (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	unsigned long                                      bHasExplicitShadowParent : 1;                     		// 0x012C (0x0004) [0x0000000000002002] [0x00000002] ( CPF_Const | CPF_Transient )
	unsigned long                                      bAllowAmbientOcclusion : 1;                       		// 0x012C (0x0004) [0x0000000020000000] [0x00000004] ( CPF_Deprecated )
	unsigned long                                      bLightingCacheInvalid : 1;                        		// 0x012C (0x0004) [0x0000000000000002] [0x00000008] ( CPF_Const )
	unsigned long                                      CollideActors : 1;                                		// 0x012C (0x0004) [0x0000000000000003] [0x00000010] ( CPF_Edit | CPF_Const )
	unsigned long                                      TraceInteractionOnly : 1;                         		// 0x012C (0x0004) [0x0000000000000002] [0x00000020] ( CPF_Const )
	unsigned long                                      AlwaysCheckCollision : 1;                         		// 0x012C (0x0004) [0x0000000000000002] [0x00000040] ( CPF_Const )
	unsigned long                                      BlockActors : 1;                                  		// 0x012C (0x0004) [0x0000000000000002] [0x00000080] ( CPF_Const )
	unsigned long                                      BlockZeroExtent : 1;                              		// 0x012C (0x0004) [0x0000000000000002] [0x00000100] ( CPF_Const )
	unsigned long                                      BlockNonZeroExtent : 1;                           		// 0x012C (0x0004) [0x0000000000000002] [0x00000200] ( CPF_Const )
	unsigned long                                      CanBlockCamera : 1;                               		// 0x012C (0x0004) [0x0000000000000003] [0x00000400] ( CPF_Edit | CPF_Const )
	unsigned long                                      BlockRigidBody : 1;                               		// 0x012C (0x0004) [0x0000000000000003] [0x00000800] ( CPF_Edit | CPF_Const )
	unsigned long                                      bBlockFootPlacement : 1;                          		// 0x012C (0x0004) [0x0000000000000003] [0x00001000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bDisableAllRigidBody : 1;                         		// 0x012C (0x0004) [0x0000000000000003] [0x00002000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bSkipRBGeomCreation : 1;                          		// 0x012C (0x0004) [0x0000000000000003] [0x00004000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bNotifyRigidBodyCollision : 1;                    		// 0x012C (0x0004) [0x0000000000000003] [0x00008000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bFluidDrain : 1;                                  		// 0x012C (0x0004) [0x0000000000000003] [0x00010000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bFluidTwoWay : 1;                                 		// 0x012C (0x0004) [0x0000000000000003] [0x00020000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bIgnoreRadialImpulse : 1;                         		// 0x012C (0x0004) [0x0000000000000001] [0x00040000] ( CPF_Edit )
	unsigned long                                      bIgnoreRadialForce : 1;                           		// 0x012C (0x0004) [0x0000000000000001] [0x00080000] ( CPF_Edit )
	unsigned long                                      bIgnoreForceField : 1;                            		// 0x012C (0x0004) [0x0000000000000001] [0x00100000] ( CPF_Edit )
	unsigned long                                      bUseCompartment : 1;                              		// 0x012C (0x0004) [0x0000000000000003] [0x00200000] ( CPF_Edit | CPF_Const )
	unsigned long                                      AlwaysLoadOnClient : 1;                           		// 0x012C (0x0004) [0x0000000000000002] [0x00400000] ( CPF_Const )
	unsigned long                                      AlwaysLoadOnServer : 1;                           		// 0x012C (0x0004) [0x0000000000000002] [0x00800000] ( CPF_Const )
	unsigned long                                      bIgnoreHiddenActorsMembership : 1;                		// 0x012C (0x0004) [0x0000000000000001] [0x01000000] ( CPF_Edit )
	unsigned long                                      AbsoluteTranslation : 1;                          		// 0x012C (0x0004) [0x0000000000000003] [0x02000000] ( CPF_Edit | CPF_Const )
	unsigned long                                      AbsoluteRotation : 1;                             		// 0x012C (0x0004) [0x0000000000000003] [0x04000000] ( CPF_Edit | CPF_Const )
	unsigned long                                      AbsoluteScale : 1;                                		// 0x012C (0x0004) [0x0000000000000003] [0x08000000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bAllowShadowFade : 1;                             		// 0x012C (0x0004) [0x0000000000000000] [0x10000000] 
	unsigned long                                      bSupportedOnMobile : 1;                           		// 0x012C (0x0004) [0x0000000000000000] [0x20000000] 
	unsigned long                                      bWasSNFiltered : 1;                               		// 0x012C (0x0004) [0x0000000000003002] [0x40000000] ( CPF_Const | CPF_Native | CPF_Transient )
	unsigned long                                      bRenderOnlyShadow : 1;                            		// 0x012C (0x0004) [0x0000000000000001] [0x80000000] ( CPF_Edit )
	TArray< int >                                      OctreeNodes;                                      		// 0x0130 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	int                                                TranslucencySortPriority;                         		// 0x013C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                VisibilityId;                                     		// 0x0140 (0x0004) [0x0000000000200000]              
	struct FLightingChannelContainer                   LightingChannels;                                 		// 0x0144 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FRBCollisionChannelContainer                RBCollideWithChannels;                            		// 0x0148 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	class UPhysicalMaterial*                           PhysMaterialOverride;                             		// 0x014C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	class URB_BodyInstance*                            BodyInstance;                                     		// 0x0150 (0x0004) [0x0000000000201002]              ( CPF_Const | CPF_Native )
	unsigned char                                      UnknownData01[ 0xC ];                             		// 0x0154 (0x000C) MISSED OFFSET
	struct FMatrix                                     CachedParentToWorld;                              		// 0x0160 (0x0040) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FVector                                     Translation;                                      		// 0x01A0 (0x000C) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FRotator                                    Rotation;                                         		// 0x01AC (0x000C) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              Scale;                                            		// 0x01B8 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FVector                                     Scale3D;                                          		// 0x01BC (0x000C) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              BoundsScale;                                      		// 0x01C8 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              LastSubmitTime;                                   		// 0x01CC (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              LastRenderTime;                                   		// 0x01D0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FBeastPrimPropertiesContainer               BeastProperties;                                  		// 0x01D4 (0x0008) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              ScriptRigidBodyCollisionThreshold;                		// 0x01DC (0x0004) [0x0000000000000000]              
	class USkeletalMeshComponent*                      ShadowParentSkelComponent;                        		// 0x01E0 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.ArrowComponent
// 0x0014 (0x01F8 - 0x01E4)
class UArrowComponent : public UPrimitiveComponent
{
public:
	struct FColor                                      ArrowColor;                                       		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ArrowSize;                                        		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bTreatAsASprite : 1;                              		// 0x01EC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	struct FName                                       SpriteCategoryName;                               		// 0x01F0 (0x0008) [0x0000000000000000]              
public:
};

// Class Engine.BrushComponent
// 0x0054 (0x0238 - 0x01E4)
class UBrushComponent : public UPrimitiveComponent
{
public:
	class UModel*                                      Brush;                                            		// 0x01E4 (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FKAggregateGeom                             BrushAggGeom;                                     		// 0x01E8 (0x0038) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FPointer                                    BrushPhysDesc;                                    		// 0x0220 (0x0004) [0x0000000001003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FKCachedConvexData_Mirror                   CachedPhysBrushData;                              		// 0x0224 (0x000C) [0x0000000001003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	int                                                CachedPhysBrushDataVersion;                       		// 0x0230 (0x0004) [0x0000000000000002]              ( CPF_Const )
	unsigned long                                      bBlockComplexCollisionTrace : 1;                  		// 0x0234 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.CameraConeComponent
// 0x0000 (0x01E4 - 0x01E4)
class UCameraConeComponent : public UPrimitiveComponent
{
public:
public:
};

// Class Engine.CylinderComponent
// 0x0010 (0x01F4 - 0x01E4)
class UCylinderComponent : public UPrimitiveComponent
{
public:
	float                                              CollisionHeight;                                  		// 0x01E4 (0x0004) [0x000000000000000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject )
	float                                              CollisionRadius;                                  		// 0x01E8 (0x0004) [0x000000000000000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject )
	struct FColor                                      CylinderColor;                                    		// 0x01EC (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned long                                      bDrawBoundingBox : 1;                             		// 0x01F0 (0x0004) [0x0000000000000002] [0x00000001] ( CPF_Const )
	unsigned long                                      bDrawNonColliding : 1;                            		// 0x01F0 (0x0004) [0x0000000000000002] [0x00000002] ( CPF_Const )
	unsigned long                                      bAlwaysRenderIfSelected : 1;                      		// 0x01F0 (0x0004) [0x0000000000000002] [0x00000004] ( CPF_Const )
public:
};

// Class Engine.DrawBeastProbesArrayComponent
// 0x0024 (0x0208 - 0x01E4)
class UDrawBeastProbesArrayComponent : public UPrimitiveComponent
{
public:
	struct FColor                                      BoxColor;                                         		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterial*                                   BoxMaterial;                                      		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     BoxExtent;                                        		// 0x01EC (0x000C) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FVector >                           BoxPositions;                                     		// 0x01F8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      bDrawWireBox : 1;                                 		// 0x0204 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bDrawLitBox : 1;                                  		// 0x0204 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
public:
};

// Class Engine.DrawBoxComponent
// 0x0018 (0x01FC - 0x01E4)
class UDrawBoxComponent : public UPrimitiveComponent
{
public:
	struct FColor                                      BoxColor;                                         		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterial*                                   BoxMaterial;                                      		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     BoxExtent;                                        		// 0x01EC (0x000C) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bDrawWireBox : 1;                                 		// 0x01F8 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bDrawLitBox : 1;                                  		// 0x01F8 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bDrawOnlyIfSelected : 1;                          		// 0x01F8 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
public:
};

// Class Engine.DrawCapsuleComponent
// 0x0014 (0x01F8 - 0x01E4)
class UDrawCapsuleComponent : public UPrimitiveComponent
{
public:
	struct FColor                                      CapsuleColor;                                     		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterial*                                   CapsuleMaterial;                                  		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CapsuleHeight;                                    		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CapsuleRadius;                                    		// 0x01F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bDrawWireCapsule : 1;                             		// 0x01F4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bDrawLitCapsule : 1;                              		// 0x01F4 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bDrawOnlyIfSelected : 1;                          		// 0x01F4 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
public:
};

// Class Engine.DrawConeComponent
// 0x0010 (0x01F4 - 0x01E4)
class UDrawConeComponent : public UPrimitiveComponent
{
public:
	struct FColor                                      ConeColor;                                        		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ConeRadius;                                       		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ConeAngle;                                        		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                ConeSides;                                        		// 0x01F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.DrawCylinderComponent
// 0x0020 (0x0204 - 0x01E4)
class UDrawCylinderComponent : public UPrimitiveComponent
{
public:
	struct FColor                                      CylinderColor;                                    		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterial*                                   CylinderMaterial;                                 		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CylinderRadius;                                   		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CylinderTopRadius;                                		// 0x01F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CylinderHeight;                                   		// 0x01F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CylinderHeightOffset;                             		// 0x01F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                CylinderSides;                                    		// 0x01FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bDrawWireCylinder : 1;                            		// 0x0200 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bDrawLitCylinder : 1;                             		// 0x0200 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bDrawOnlyIfSelected : 1;                          		// 0x0200 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
public:
};

// Class Engine.DrawFrustumComponent
// 0x0018 (0x01FC - 0x01E4)
class UDrawFrustumComponent : public UPrimitiveComponent
{
public:
	struct FColor                                      FrustumColor;                                     		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FrustumAngle;                                     		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FrustumAspectRatio;                               		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FrustumStartDist;                                 		// 0x01F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FrustumEndDist;                                   		// 0x01F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UTexture*                                    Texture;                                          		// 0x01F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.DrawQuadComponent
// 0x000C (0x01F0 - 0x01E4)
class UDrawQuadComponent : public UPrimitiveComponent
{
public:
	class UTexture*                                    Texture;                                          		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Width;                                            		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Height;                                           		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.DrawSphereComponent
// 0x0014 (0x01F8 - 0x01E4)
class UDrawSphereComponent : public UPrimitiveComponent
{
public:
	struct FColor                                      SphereColor;                                      		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterial*                                   SphereMaterial;                                   		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SphereRadius;                                     		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                SphereSides;                                      		// 0x01F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bDrawWireSphere : 1;                              		// 0x01F4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bDrawLitSphere : 1;                               		// 0x01F4 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bDrawOnlyIfSelected : 1;                          		// 0x01F4 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
public:
};

// Class Engine.DrawPylonRadiusComponent
// 0x0000 (0x01F8 - 0x01F8)
class UDrawPylonRadiusComponent : public UDrawSphereComponent
{
public:
public:
};

// Class Engine.DrawSoundRadiusComponent
// 0x0000 (0x01F8 - 0x01F8)
class UDrawSoundRadiusComponent : public UDrawSphereComponent
{
public:
public:
};

// Class Engine.LevelGridVolumeRenderingComponent
// 0x0000 (0x01E4 - 0x01E4)
class ULevelGridVolumeRenderingComponent : public UPrimitiveComponent
{
public:
public:
};

// Class Engine.LineBatchComponent
// 0x0024 (0x0208 - 0x01E4)
class ULineBatchComponent : public UPrimitiveComponent
{
public:
	struct FPointer                                    FPrimitiveDrawInterfaceVfTable;                   		// 0x01E4 (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	struct FPointer                                    FPrimitiveDrawInterfaceView;                      		// 0x01E8 (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	TArray< struct FPointer >                          BatchedLines;                                     		// 0x01EC (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FPointer >                          BatchedPoints;                                    		// 0x01F8 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	float                                              DefaultLifeTime;                                  		// 0x0204 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.ModelComponent
// 0x0024 (0x0208 - 0x01E4)
class UModelComponent : public UPrimitiveComponent
{
public:
	class UObject*                                     Model;                                            		// 0x01E4 (0x0004) [0x0000000000803002]              ( CPF_Const | CPF_Native | CPF_Transient | CPF_NoExport )
	int                                                ZoneIndex;                                        		// 0x01E8 (0x0004) [0x0000000000803002]              ( CPF_Const | CPF_Native | CPF_Transient | CPF_NoExport )
	int                                                ComponentIndex;                                   		// 0x01EC (0x0004) [0x0000000000803002]              ( CPF_Const | CPF_Native | CPF_Transient | CPF_NoExport )
	TArray< struct FPointer >                          Nodes;                                            		// 0x01F0 (0x000C) [0x0000000000803002]              ( CPF_Const | CPF_Native | CPF_Transient | CPF_NoExport )
	TArray< struct FPointer >                          Elements;                                         		// 0x01FC (0x000C) [0x0000000000803002]              ( CPF_Const | CPF_Native | CPF_Transient | CPF_NoExport )
public:
};

// Class Engine.SpriteComponent
// 0x0024 (0x0208 - 0x01E4)
class USpriteComponent : public UPrimitiveComponent
{
public:
	class UTexture2D*                                  Sprite;                                           		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bIsScreenSizeScaled : 1;                          		// 0x01E8 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              ScreenSize;                                       		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              U;                                                		// 0x01F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              UL;                                               		// 0x01F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              V;                                                		// 0x01F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              VL;                                               		// 0x01FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       SpriteCategoryName;                               		// 0x0200 (0x0008) [0x0000000000000000]              
public:
};

// Class Engine.RadialBlurComponent
// 0x006B (0x00C0 - 0x0055)
class URadialBlurComponent : public UActorComponent
{
public:
	class UMaterialInterface*                          Material;                                         		// 0x0058 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned char                                      DepthPriorityGroup;                               		// 0x005C (0x0001) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              BlurScale;                                        		// 0x0060 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              BlurFalloffExponent;                              		// 0x0064 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              BlurOpacity;                                      		// 0x0068 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              MaxCullDistance;                                  		// 0x006C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              DistanceFalloffExponent;                          		// 0x0070 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned long                                      bRenderAsVelocity : 1;                            		// 0x0074 (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	unsigned long                                      bEnabled : 1;                                     		// 0x0074 (0x0004) [0x0000000000000003] [0x00000002] ( CPF_Edit | CPF_Const )
	unsigned char                                      UnknownData00[ 0x8 ];                             		// 0x0078 (0x0008) MISSED OFFSET
	struct FMatrix                                     LocalToWorld;                                     		// 0x0080 (0x0040) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.SceneCaptureComponent
// 0x003B (0x0090 - 0x0055)
class USceneCaptureComponent : public UActorComponent
{
public:
	unsigned long                                      bEnabled : 1;                                     		// 0x0058 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bEnablePostProcess : 1;                           		// 0x0058 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bEnableFog : 1;                                   		// 0x0058 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bUseMainScenePostProcessSettings : 1;             		// 0x0058 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bSkipUpdateIfTextureUsersOccluded : 1;            		// 0x0058 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bSkipUpdateIfOwnerOccluded : 1;                   		// 0x0058 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bSkipRenderingDepthPrepass : 1;                   		// 0x0058 (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	struct FColor                                      ClearColor;                                       		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      ViewMode;                                         		// 0x0060 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	int                                                SceneLOD;                                         		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FrameRate;                                        		// 0x0068 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	class UPostProcessChain*                           PostProcess;                                      		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxUpdateDist;                                    		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxViewDistanceOverride;                          		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxStreamingUpdateDist;                           		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FPointer                                    CaptureInfo;                                      		// 0x007C (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FPointer                                    ViewState;                                        		// 0x0080 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FPointer >                          PostProcessProxies;                               		// 0x0084 (0x000C) [0x0000000001203002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.SceneCapture2DComponent
// 0x00E0 (0x0170 - 0x0090)
class USceneCapture2DComponent : public USceneCaptureComponent
{
public:
	class UTextureRenderTarget2D*                      TextureTarget;                                    		// 0x0090 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              FieldOfView;                                      		// 0x0094 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              NearPlane;                                        		// 0x0098 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              FarPlane;                                         		// 0x009C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned long                                      bUpdateMatrices : 1;                              		// 0x00A0 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned char                                      UnknownData00[ 0xC ];                             		// 0x00A4 (0x000C) MISSED OFFSET
	struct FMatrix                                     ViewMatrix;                                       		// 0x00B0 (0x0040) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FMatrix                                     ProjMatrix;                                       		// 0x00F0 (0x0040) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FMatrix                                     ProjMatrixForeground;                             		// 0x0130 (0x0040) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
public:
};

// Class Engine.SceneCapture2DHitMaskComponent
// 0x0024 (0x00B4 - 0x0090)
class USceneCapture2DHitMaskComponent : public USceneCaptureComponent
{
public:
	class UTextureRenderTarget2D*                      TextureTarget;                                    		// 0x0090 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	class USkeletalMeshComponent*                      SkeletalMeshComp;                                 		// 0x0094 (0x0004) [0x000000000408200A]              ( CPF_Const | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	int                                                MaterialIndex;                                    		// 0x0098 (0x0004) [0x0000000000000000]              
	int                                                ForceLOD;                                         		// 0x009C (0x0004) [0x0000000000000000]              
	int                                                HitMaskCullDistance;                              		// 0x00A0 (0x0004) [0x0000000000000000]              
	float                                              FadingStartTimeSinceHit;                          		// 0x00A4 (0x0004) [0x0000000000000000]              
	float                                              FadingPercentage;                                 		// 0x00A8 (0x0004) [0x0000000000000000]              
	float                                              FadingDurationTime;                               		// 0x00AC (0x0004) [0x0000000000000000]              
	float                                              FadingIntervalTime;                               		// 0x00B0 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SceneCaptureCubeMapComponent
// 0x0018 (0x00A8 - 0x0090)
class USceneCaptureCubeMapComponent : public USceneCaptureComponent
{
public:
	class UTextureRenderTargetCube*                    TextureTarget;                                    		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              NearPlane;                                        		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FarPlane;                                         		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     WorldLocation;                                    		// 0x009C (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.SceneCapturePortalComponent
// 0x000C (0x009C - 0x0090)
class USceneCapturePortalComponent : public USceneCaptureComponent
{
public:
	class UTextureRenderTarget2D*                      TextureTarget;                                    		// 0x0090 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              ScaleFOV;                                         		// 0x0094 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	class AActor*                                      ViewDestination;                                  		// 0x0098 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
public:
};

// Class Engine.SceneCaptureReflectComponent
// 0x0008 (0x0098 - 0x0090)
class USceneCaptureReflectComponent : public USceneCaptureComponent
{
public:
	class UTextureRenderTarget2D*                      TextureTarget;                                    		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ScaleFOV;                                         		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.WindDirectionalSourceComponent
// 0x0017 (0x006C - 0x0055)
class UWindDirectionalSourceComponent : public UActorComponent
{
public:
	struct FPointer                                    SceneProxy;                                       		// 0x0058 (0x0004) [0x0000000001003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	float                                              Strength;                                         		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Phase;                                            		// 0x0060 (0x0004) [0x0000000020000000]              ( CPF_Deprecated )
	float                                              Frequency;                                        		// 0x0064 (0x0004) [0x0000000020000000]              ( CPF_Deprecated )
	float                                              Speed;                                            		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.WindPointSourceComponent
// 0x0008 (0x0074 - 0x006C)
class UWindPointSourceComponent : public UWindDirectionalSourceComponent
{
public:
	class UDrawSphereComponent*                        PreviewRadiusComponent;                           		// 0x006C (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
	float                                              Radius;                                           		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ActorFactory
// 0x0020 (0x005C - 0x003C)
class UActorFactory : public UObject
{
public:
	class UClass*                                      GameplayActorClass;                               		// 0x003C (0x0004) [0x0000000000000000]              
	struct FString                                     MenuName;                                         		// 0x0040 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                MenuPriority;                                     		// 0x004C (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                AlternateMenuPriority;                            		// 0x0050 (0x0004) [0x0000000020000000]              ( CPF_Deprecated )
	class UClass*                                      NewActorClass;                                    		// 0x0054 (0x0004) [0x0000000000000000]              
	unsigned long                                      bPlaceable : 1;                                   		// 0x0058 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bShowInEditorQuickMenu : 1;                       		// 0x0058 (0x0004) [0x0000000000000000] [0x00000002] 
public:
};

// Class Engine.ActorFactoryActor
// 0x0004 (0x0060 - 0x005C)
class UActorFactoryActor : public UActorFactory
{
public:
	class UClass*                                      ActorClass;                                       		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ActorFactoryAI
// 0x0028 (0x0084 - 0x005C)
class UActorFactoryAI : public UActorFactory
{
public:
	class UClass*                                      ControllerClass;                                  		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UClass*                                      PawnClass;                                        		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     PawnName;                                         		// 0x0064 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      bGiveDefaultInventory : 1;                        		// 0x0070 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	TArray< class UClass* >                            InventoryList;                                    		// 0x0074 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                TeamIndex;                                        		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ActorFactoryAmbientSound
// 0x0004 (0x0060 - 0x005C)
class UActorFactoryAmbientSound : public UActorFactory
{
public:
	class USoundCue*                                   AmbientSoundCue;                                  		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ActorFactoryAmbientSoundMovable
// 0x0000 (0x0060 - 0x0060)
class UActorFactoryAmbientSoundMovable : public UActorFactoryAmbientSound
{
public:
public:
};

// Class Engine.ActorFactoryAmbientSoundSimple
// 0x0004 (0x0060 - 0x005C)
class UActorFactoryAmbientSoundSimple : public UActorFactory
{
public:
	class USoundNodeWave*                              SoundNodeWave;                                    		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ActorFactoryAmbientSoundNonLoop
// 0x0000 (0x0060 - 0x0060)
class UActorFactoryAmbientSoundNonLoop : public UActorFactoryAmbientSoundSimple
{
public:
public:
};

// Class Engine.ActorFactoryAmbientSoundSimpleToggleable
// 0x0000 (0x0060 - 0x0060)
class UActorFactoryAmbientSoundSimpleToggleable : public UActorFactoryAmbientSoundSimple
{
public:
public:
};

// Class Engine.ActorFactoryAmbientSoundNonLoopingToggleable
// 0x0000 (0x0060 - 0x0060)
class UActorFactoryAmbientSoundNonLoopingToggleable : public UActorFactoryAmbientSoundSimpleToggleable
{
public:
public:
};

// Class Engine.ActorFactoryApexDestructible
// 0x0010 (0x006C - 0x005C)
class UActorFactoryApexDestructible : public UActorFactory
{
public:
	unsigned long                                      bStartAwake : 1;                                  		// 0x005C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned char                                      RBChannel;                                        		// 0x0060 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FRBCollisionChannelContainer                CollideWithChannels;                              		// 0x0064 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	class UApexDestructibleAsset*                      DestructibleAsset;                                		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ActorFactoryArchetype
// 0x0004 (0x0060 - 0x005C)
class UActorFactoryArchetype : public UActorFactory
{
public:
	class AActor*                                      ArchetypeActor;                                   		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ActorFactoryCoverLink
// 0x0000 (0x005C - 0x005C)
class UActorFactoryCoverLink : public UActorFactory
{
public:
public:
};

// Class Engine.ActorFactoryDominantDirectionalLight
// 0x0000 (0x005C - 0x005C)
class UActorFactoryDominantDirectionalLight : public UActorFactory
{
public:
public:
};

// Class Engine.ActorFactoryDominantDirectionalLightMovable
// 0x0000 (0x005C - 0x005C)
class UActorFactoryDominantDirectionalLightMovable : public UActorFactory
{
public:
public:
};

// Class Engine.ActorFactoryDynamicSM
// 0x0015 (0x0071 - 0x005C)
class UActorFactoryDynamicSM : public UActorFactory
{
public:
	class UStaticMesh*                                 StaticMesh;                                       		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     DrawScale3D;                                      		// 0x0060 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bNoEncroachCheck : 1;                             		// 0x006C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bNotifyRigidBodyCollision : 1;                    		// 0x006C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bBlockRigidBody : 1;                              		// 0x006C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bUseCompartment : 1;                              		// 0x006C (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bCastDynamicShadow : 1;                           		// 0x006C (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned char                                      CollisionType;                                    		// 0x0070 (0x0001) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ActorFactoryMover
// 0x0003 (0x0074 - 0x0071)
class UActorFactoryMover : public UActorFactoryDynamicSM
{
public:
public:
};

// Class Engine.ActorFactoryRigidBody
// 0x0027 (0x0098 - 0x0071)
class UActorFactoryRigidBody : public UActorFactoryDynamicSM
{
public:
	unsigned long                                      bStartAwake : 1;                                  		// 0x0074 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bDamageAppliesImpulse : 1;                        		// 0x0074 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bLocalSpaceInitialVelocity : 1;                   		// 0x0074 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bEnableStayUprightSpring : 1;                     		// 0x0074 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	struct FVector                                     InitialVelocity;                                  		// 0x0078 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	class UDistributionVector*                         AdditionalVelocity;                               		// 0x0084 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UDistributionVector*                         InitialAngularVelocity;                           		// 0x0088 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	unsigned char                                      RBChannel;                                        		// 0x008C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              StayUprightTorqueFactor;                          		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              StayUprightMaxTorque;                             		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ActorFactoryEmitter
// 0x0004 (0x0060 - 0x005C)
class UActorFactoryEmitter : public UActorFactory
{
public:
	class UParticleSystem*                             ParticleSystem;                                   		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ActorFactoryFracturedStaticMesh
// 0x0010 (0x006C - 0x005C)
class UActorFactoryFracturedStaticMesh : public UActorFactory
{
public:
	class UFracturedStaticMesh*                        FracturedStaticMesh;                              		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     DrawScale3D;                                      		// 0x0060 (0x000C) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ActorFactoryLensFlare
// 0x0004 (0x0060 - 0x005C)
class UActorFactoryLensFlare : public UActorFactory
{
public:
	class ULensFlare*                                  LensFlareObject;                                  		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ActorFactoryLight
// 0x0000 (0x005C - 0x005C)
class UActorFactoryLight : public UActorFactory
{
public:
public:
};

// Class Engine.ActorFactoryPathNode
// 0x0000 (0x005C - 0x005C)
class UActorFactoryPathNode : public UActorFactory
{
public:
public:
};

// Class Engine.ActorFactoryPhysicsAsset
// 0x0024 (0x0080 - 0x005C)
class UActorFactoryPhysicsAsset : public UActorFactory
{
public:
	class UPhysicsAsset*                               PhysicsAsset;                                     		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USkeletalMesh*                               SkeletalMesh;                                     		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bStartAwake : 1;                                  		// 0x0064 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bDamageAppliesImpulse : 1;                        		// 0x0064 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bNotifyRigidBodyCollision : 1;                    		// 0x0064 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bUseCompartment : 1;                              		// 0x0064 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bCastDynamicShadow : 1;                           		// 0x0064 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	struct FVector                                     InitialVelocity;                                  		// 0x0068 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     DrawScale3D;                                      		// 0x0074 (0x000C) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ActorFactoryPlayerStart
// 0x0000 (0x005C - 0x005C)
class UActorFactoryPlayerStart : public UActorFactory
{
public:
public:
};

// Class Engine.ActorFactoryPylon
// 0x0000 (0x005C - 0x005C)
class UActorFactoryPylon : public UActorFactory
{
public:
public:
};

// Class Engine.ActorFactorySkeletalMesh
// 0x0010 (0x006C - 0x005C)
class UActorFactorySkeletalMesh : public UActorFactory
{
public:
	class USkeletalMesh*                               SkeletalMesh;                                     		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UAnimSet*                                    AnimSet;                                          		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       AnimSequenceName;                                 		// 0x0064 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ActorFactoryStaticMesh
// 0x0010 (0x006C - 0x005C)
class UActorFactoryStaticMesh : public UActorFactory
{
public:
	class UStaticMesh*                                 StaticMesh;                                       		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     DrawScale3D;                                      		// 0x0060 (0x000C) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ActorFactoryTrigger
// 0x0000 (0x005C - 0x005C)
class UActorFactoryTrigger : public UActorFactory
{
public:
public:
};

// Class Engine.ActorFactoryVehicle
// 0x0004 (0x0060 - 0x005C)
class UActorFactoryVehicle : public UActorFactory
{
public:
	class UClass*                                      VehicleClass;                                     		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.BookMark
// 0x0024 (0x0060 - 0x003C)
class UBookMark : public UObject
{
public:
	struct FVector                                     Location;                                         		// 0x003C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FRotator                                    Rotation;                                         		// 0x0048 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FString >                           HiddenLevels;                                     		// 0x0054 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.BookMark2D
// 0x000C (0x0048 - 0x003C)
class UBookMark2D : public UObject
{
public:
	float                                              Zoom2D;                                           		// 0x003C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FIntPoint                                   Location;                                         		// 0x0040 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.KismetBookMark
// 0x000C (0x0054 - 0x0048)
class UKismetBookMark : public UBookMark2D
{
public:
	struct FString                                     BookMarkSequencePathName;                         		// 0x0048 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.Canvas
// 0x0058 (0x0094 - 0x003C)
class UCanvas : public UObject
{
public:
	class UFont*                                       Font;                                             		// 0x003C (0x0004) [0x0000000000000000]              
	float                                              OrgX;                                             		// 0x0040 (0x0004) [0x0000000000000000]              
	float                                              OrgY;                                             		// 0x0044 (0x0004) [0x0000000000000000]              
	float                                              ClipX;                                            		// 0x0048 (0x0004) [0x0000000000000000]              
	float                                              ClipY;                                            		// 0x004C (0x0004) [0x0000000000000000]              
	float                                              CurX;                                             		// 0x0050 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              CurY;                                             		// 0x0054 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              CurZ;                                             		// 0x0058 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              CurYL;                                            		// 0x005C (0x0004) [0x0000000000000000]              
	struct FColor                                      DrawColor;                                        		// 0x0060 (0x0004) [0x0000000000000000]              
	unsigned long                                      bCenter : 1;                                      		// 0x0064 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bNoSmooth : 1;                                    		// 0x0064 (0x0004) [0x0000000000000000] [0x00000002] 
	int                                                SizeX;                                            		// 0x0068 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                SizeY;                                            		// 0x006C (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FPointer                                    Canvas;                                           		// 0x0070 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FPointer                                    SceneView;                                        		// 0x0074 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	unsigned char                                      UnknownData00[ 0x8 ];                             		// 0x0078 (0x0008) MISSED OFFSET
	struct FPlane                                      ColorModulate;                                    		// 0x0080 (0x0010) [0x0000000000000000]              
	class UTexture2D*                                  DefaultTexture;                                   		// 0x0090 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.Channel
// 0x002C (0x0068 - 0x003C)
class UChannel : public UObject
{
public:
	unsigned char                                      UnknownData00[ 0x2C ];                            		// 0x003C (0x002C) MISSED OFFSET
public:
};

// Class Engine.ActorChannel
// 0x005C (0x00C4 - 0x0068)
class UActorChannel : public UChannel
{
public:
	unsigned char                                      UnknownData00[ 0x5C ];                            		// 0x0068 (0x005C) MISSED OFFSET
public:
};

// Class Engine.ControlChannel
// 0x0010 (0x0078 - 0x0068)
class UControlChannel : public UChannel
{
public:
	unsigned char                                      UnknownData00[ 0x10 ];                            		// 0x0068 (0x0010) MISSED OFFSET
public:
};

// Class Engine.FileChannel
// 0x0210 (0x0278 - 0x0068)
class UFileChannel : public UChannel
{
public:
	unsigned char                                      UnknownData00[ 0x210 ];                           		// 0x0068 (0x0210) MISSED OFFSET
public:
};

// Class Engine.VoiceChannel
// 0x000C (0x0074 - 0x0068)
class UVoiceChannel : public UChannel
{
public:
	unsigned char                                      UnknownData00[ 0xC ];                             		// 0x0068 (0x000C) MISSED OFFSET
public:
};

// Class Engine.Controller
// 0x01C8 (0x03A0 - 0x01D8)
class AController : public AActor
{
public:
	struct FPointer                                    VfTable_IInterface_NavigationHandle;              		// 0x01D8 (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	class APawn*                                       Pawn;                                             		// 0x01DC (0x0004) [0x0000000004000020]              ( CPF_Net | CPF_EditInline )
	class APlayerReplicationInfo*                      PlayerReplicationInfo;                            		// 0x01E0 (0x0004) [0x0000000004000020]              ( CPF_Net | CPF_EditInline )
	int                                                PlayerNum;                                        		// 0x01E4 (0x0004) [0x0000000000000002]              ( CPF_Const )
	class AController*                                 NextController;                                   		// 0x01E8 (0x0004) [0x0000000000000002]              ( CPF_Const )
	unsigned long                                      bIsPlayer : 1;                                    		// 0x01EC (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bGodMode : 1;                                     		// 0x01EC (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bSoaking : 1;                                     		// 0x01EC (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bSlowerZAcquire : 1;                              		// 0x01EC (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bNotifyPostLanded : 1;                            		// 0x01EC (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bNotifyApex : 1;                                  		// 0x01EC (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bOverrideSearchStart : 1;                         		// 0x01EC (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bAdvancedTactics : 1;                             		// 0x01EC (0x0004) [0x0000000000000000] [0x00000080] 
	unsigned long                                      bCanDoSpecial : 1;                                		// 0x01EC (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      bAdjusting : 1;                                   		// 0x01EC (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bPreparingMove : 1;                               		// 0x01EC (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      bForceStrafe : 1;                                 		// 0x01EC (0x0004) [0x0000000000000000] [0x00000800] 
	unsigned long                                      bLOSflag : 1;                                     		// 0x01EC (0x0004) [0x0000000000000002] [0x00001000] ( CPF_Const )
	unsigned long                                      bSkipExtraLOSChecks : 1;                          		// 0x01EC (0x0004) [0x0000000000000000] [0x00002000] 
	unsigned long                                      bNotifyFallingHitWall : 1;                        		// 0x01EC (0x0004) [0x0000000000000000] [0x00004000] 
	unsigned long                                      bEarlyOutOfSighTestsForSameType : 1;              		// 0x01EC (0x0004) [0x0000000000000000] [0x00008000] 
	unsigned long                                      bPreciseDestination : 1;                          		// 0x01EC (0x0004) [0x0000000000000000] [0x00010000] 
	unsigned long                                      bSeeFriendly : 1;                                 		// 0x01EC (0x0004) [0x0000000000000000] [0x00020000] 
	unsigned long                                      bUsingPathLanes : 1;                              		// 0x01EC (0x0004) [0x0000000000000000] [0x00040000] 
	unsigned long                                      bUseSSLC : 1;                                     		// 0x01EC (0x0004) [0x0000000000000000] [0x00080000] 
	unsigned long                                      bShowSSLCDebug : 1;                               		// 0x01EC (0x0004) [0x0000000000000000] [0x00100000] 
	unsigned long                                      bTakeWeaponFireScreenShots : 1;                   		// 0x01EC (0x0004) [0x0000000000000000] [0x00200000] 
	unsigned char                                      bFire;                                            		// 0x01F0 (0x0001) [0x0000000000000004]              ( CPF_Input )
	unsigned char                                      bAltFire;                                         		// 0x01F1 (0x0001) [0x0000000000000004]              ( CPF_Input )
	float                                              MinHitWall;                                       		// 0x01F4 (0x0004) [0x0000000000000000]              
	class UClass*                                      NavigationHandleClass;                            		// 0x01F8 (0x0004) [0x0000000000000000]              
	class UNavigationHandle*                           NavigationHandle;                                 		// 0x01FC (0x0004) [0x0000000004000000]              ( CPF_EditInline )
	struct FVector                                     OverrideSearchStart;                              		// 0x0200 (0x000C) [0x0000000000000000]              
	float                                              MoveTimer;                                        		// 0x020C (0x0004) [0x0000000000000000]              
	class AActor*                                      MoveTarget;                                       		// 0x0210 (0x0004) [0x0000000000000000]              
	struct FBasedPosition                              DestinationPosition;                              		// 0x0214 (0x0034) [0x0000000000000000]              
	struct FBasedPosition                              FocalPosition;                                    		// 0x0248 (0x0034) [0x0000000000000000]              
	class AActor*                                      Focus;                                            		// 0x027C (0x0004) [0x0000000000000000]              
	class AActor*                                      GoalList[ 0x4 ];                                  		// 0x0280 (0x0010) [0x0000000000000000]              
	struct FBasedPosition                              AdjustPosition;                                   		// 0x0290 (0x0034) [0x0000000000000000]              
	class ANavigationPoint*                            StartSpot;                                        		// 0x02C4 (0x0004) [0x0000000000000000]              
	TArray< class ANavigationPoint* >                  RouteCache;                                       		// 0x02C8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class UReachSpec*                                  CurrentPath;                                      		// 0x02D4 (0x0004) [0x0000000000000000]              
	class UReachSpec*                                  NextRoutePath;                                    		// 0x02D8 (0x0004) [0x0000000000000000]              
	struct FVector                                     CurrentPathDir;                                   		// 0x02DC (0x000C) [0x0000000000000000]              
	class AActor*                                      RouteGoal;                                        		// 0x02E8 (0x0004) [0x0000000000000000]              
	float                                              RouteDist;                                        		// 0x02EC (0x0004) [0x0000000000000000]              
	float                                              LastRouteFind;                                    		// 0x02F0 (0x0004) [0x0000000000000000]              
	class AInterpActor*                                PendingMover;                                     		// 0x02F4 (0x0004) [0x0000000000000000]              
	class AActor*                                      FailedMoveTarget;                                 		// 0x02F8 (0x0004) [0x0000000000000000]              
	int                                                MoveFailureCount;                                 		// 0x02FC (0x0004) [0x0000000000000000]              
	float                                              GroundPitchTime;                                  		// 0x0300 (0x0004) [0x0000000000000000]              
	class APawn*                                       ShotTarget;                                       		// 0x0304 (0x0004) [0x0000000000000000]              
	class AActor*                                      LastFailedReach;                                  		// 0x0308 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              FailedReachTime;                                  		// 0x030C (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FVector                                     FailedReachLocation;                              		// 0x0310 (0x000C) [0x0000000000000002]              ( CPF_Const )
	float                                              SightCounter;                                     		// 0x031C (0x0004) [0x0000000000000000]              
	float                                              SightCounterInterval;                             		// 0x0320 (0x0004) [0x0000000000000000]              
	float                                              RespawnPredictionTime;                            		// 0x0324 (0x0004) [0x0000000000000000]              
	float                                              InUseNodeCostMultiplier;                          		// 0x0328 (0x0004) [0x0000000000000000]              
	int                                                HighJumpNodeCostModifier;                         		// 0x032C (0x0004) [0x0000000000000000]              
	float                                              MaxMoveTowardPawnTargetTime;                      		// 0x0330 (0x0004) [0x0000000000000000]              
	class APawn*                                       Enemy;                                            		// 0x0334 (0x0004) [0x0000000000000000]              
	TArray< struct FVisiblePortalInfo >                VisiblePortals;                                   		// 0x0338 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              LaneOffset;                                       		// 0x0344 (0x0004) [0x0000000000000000]              
	struct FRotator                                    OldBasedRotation;                                 		// 0x0348 (0x000C) [0x0000000000000002]              ( CPF_Const )
	struct FVector                                     NavMeshPath_SearchExtent_Modifier;                		// 0x0354 (0x000C) [0x0000000000000000]              
	float                                              fMaxSSLCSeconds;                                  		// 0x0360 (0x0004) [0x0000000000000000]              
	struct FAwardCountInfo                             HeadshotsCounter;                                 		// 0x0364 (0x000C) [0x0000000000000000]              
	struct FAwardCountInfo                             BulletsCatchedCounter;                            		// 0x0370 (0x000C) [0x0000000000000000]              
	struct FAwardCountInfo                             BulletsFiredCounter;                              		// 0x037C (0x000C) [0x0000000000000000]              
	struct FAwardCountInfo                             BulletsHitCounter;                                		// 0x0388 (0x000C) [0x0000000000000000]              
	struct FAwardCountInfo                             ObjectiveScoreRoundCounter;                       		// 0x0394 (0x000C) [0x0000000000000000]              
public:
};

// Class Engine.PlayerController
// 0x0240 (0x05E0 - 0x03A0)
class APlayerController : public AController
{
public:
	class UPlayer*                                     Player;                                           		// 0x03A0 (0x0004) [0x0000000000000002]              ( CPF_Const )
	class ACamera*                                     PlayerCamera;                                     		// 0x03A4 (0x0004) [0x0000000004000001]              ( CPF_Edit | CPF_EditInline )
	class UClass*                                      CameraClass;                                      		// 0x03A8 (0x0004) [0x0000000000000002]              ( CPF_Const )
	unsigned long                                      bFrozen : 1;                                      		// 0x03AC (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bPressedJump : 1;                                 		// 0x03AC (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bDoubleJump : 1;                                  		// 0x03AC (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bUpdatePosition : 1;                              		// 0x03AC (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bUpdating : 1;                                    		// 0x03AC (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bNeverSwitchOnPickup : 1;                         		// 0x03AC (0x0004) [0x0000000000044000] [0x00000020] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bCheatFlying : 1;                                 		// 0x03AC (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bCameraPositionLocked : 1;                        		// 0x03AC (0x0004) [0x0000000000000000] [0x00000080] 
	unsigned long                                      bShortConnectTimeOut : 1;                         		// 0x03AC (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      bPendingDestroy : 1;                              		// 0x03AC (0x0004) [0x0000000000000002] [0x00000200] ( CPF_Const )
	unsigned long                                      bWasSpeedHack : 1;                                		// 0x03AC (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      bWasSaturated : 1;                                		// 0x03AC (0x0004) [0x0000000000000002] [0x00000800] ( CPF_Const )
	unsigned long                                      bAimingHelp : 1;                                  		// 0x03AC (0x0004) [0x0000000000044000] [0x00001000] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bCameraCut : 1;                                   		// 0x03AC (0x0004) [0x0000000000002000] [0x00002000] ( CPF_Transient )
	unsigned long                                      bClientSimulatingViewTarget : 1;                  		// 0x03AC (0x0004) [0x0000000000000000] [0x00004000] 
	unsigned long                                      bHasVoiceHandshakeCompleted : 1;                  		// 0x03AC (0x0004) [0x0000000000000000] [0x00008000] 
	unsigned long                                      bCinematicMode : 1;                               		// 0x03AC (0x0004) [0x0000000000000000] [0x00010000] 
	unsigned long                                      bInteractiveMode : 1;                             		// 0x03AC (0x0004) [0x0000000000000000] [0x00020000] 
	unsigned long                                      bCinemaDisableInputMove : 1;                      		// 0x03AC (0x0004) [0x0000000000000000] [0x00040000] 
	unsigned long                                      bCinemaDisableInputLook : 1;                      		// 0x03AC (0x0004) [0x0000000000000000] [0x00080000] 
	unsigned long                                      bRenderHUDFullScreen : 1;                         		// 0x03AC (0x0004) [0x0000000000000000] [0x00100000] 
	unsigned long                                      bIgnoreNetworkMessages : 1;                       		// 0x03AC (0x0004) [0x0000000000000000] [0x00200000] 
	unsigned long                                      bIgnoreNetworkMessageOnce : 1;                    		// 0x03AC (0x0004) [0x0000000000000000] [0x00400000] 
	unsigned long                                      bShowKismetDrawText : 1;                          		// 0x03AC (0x0004) [0x0000000000004000] [0x00800000] ( CPF_Config )
	unsigned long                                      bReplicateAllPawns : 1;                           		// 0x03AC (0x0004) [0x0000000000000000] [0x01000000] 
	unsigned long                                      bIsUsingStreamingVolumes : 1;                     		// 0x03AC (0x0004) [0x0000000000000000] [0x02000000] 
	unsigned long                                      bIsExternalUIOpen : 1;                            		// 0x03AC (0x0004) [0x0000000000000000] [0x04000000] 
	unsigned long                                      bIsControllerConnected : 1;                       		// 0x03AC (0x0004) [0x0000000000000000] [0x08000000] 
	unsigned long                                      bCheckSoundOcclusion : 1;                         		// 0x03AC (0x0004) [0x0000000000000000] [0x10000000] 
	unsigned long                                      bDebugCameraAnims : 1;                            		// 0x03AC (0x0004) [0x0000000000000000] [0x20000000] 
	unsigned long                                      bBlockCameraAnimsFromOverridingPostProcess : 1;   		// 0x03AC (0x0004) [0x0000000000000000] [0x40000000] 
	unsigned long                                      bLogHearSoundOverflow : 1;                        		// 0x03AC (0x0004) [0x0000000000044000] [0x80000000] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bCheckRelevancyThroughPortals : 1;                		// 0x03B0 (0x0004) [0x0000000000044000] [0x00000001] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bDebugClientAdjustPosition : 1;                   		// 0x03B0 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	float                                              MaxResponseTime;                                  		// 0x03B4 (0x0004) [0x0000000000000000]              
	float                                              WaitDelay;                                        		// 0x03B8 (0x0004) [0x0000000000000000]              
	class APawn*                                       AcknowledgedPawn;                                 		// 0x03BC (0x0004) [0x0000000000000000]              
	unsigned char                                      DoubleClickDir;                                   		// 0x03C0 (0x0001) [0x0000000000000000]              
	unsigned char                                      bIgnoreMoveInput;                                 		// 0x03C1 (0x0001) [0x0000000000000000]              
	unsigned char                                      bIgnoreLookInput;                                 		// 0x03C2 (0x0001) [0x0000000000000000]              
	unsigned char                                      bRun;                                             		// 0x03C3 (0x0001) [0x0000000000000004]              ( CPF_Input )
	unsigned char                                      bDuck;                                            		// 0x03C4 (0x0001) [0x0000000000000004]              ( CPF_Input )
	unsigned char                                      NetPlayerIndex;                                   		// 0x03C5 (0x0001) [0x0000000000200002]              ( CPF_Const )
	class AActor*                                      ViewTarget;                                       		// 0x03C8 (0x0004) [0x0000000000000002]              ( CPF_Const )
	class APlayerReplicationInfo*                      RealViewTarget;                                   		// 0x03CC (0x0004) [0x0000000000000000]              
	class UInterpTrackInstDirector*                    ControllingDirTrackInst;                          		// 0x03D0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              FOVAngle;                                         		// 0x03D4 (0x0004) [0x0000000000000000]              
	float                                              DesiredFOV;                                       		// 0x03D8 (0x0004) [0x0000000000000000]              
	float                                              DefaultFOV;                                       		// 0x03DC (0x0004) [0x0000000000000000]              
	float                                              weaponFOV;                                        		// 0x03E0 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              AllowedTextMessageFrequency;                      		// 0x03E4 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              LODDistanceFactor;                                		// 0x03E8 (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FRotator                                    TargetViewRotation;                               		// 0x03EC (0x000C) [0x0000000000000020]              ( CPF_Net )
	float                                              TargetEyeHeight;                                  		// 0x03F8 (0x0004) [0x0000000000000020]              ( CPF_Net )
	struct FRotator                                    BlendedTargetViewRotation;                        		// 0x03FC (0x000C) [0x0000000000000000]              
	class AHUD*                                        myHUD;                                            		// 0x0408 (0x0004) [0x0000000000000000]              
	class AHUD*                                        mySecondaryHUD;                                   		// 0x040C (0x0004) [0x0000000000000000]              
	class UClass*                                      SavedMoveClass;                                   		// 0x0410 (0x0004) [0x0000000000000000]              
	class USavedMove*                                  SavedMoves;                                       		// 0x0414 (0x0004) [0x0000000000000000]              
	class USavedMove*                                  FreeMoves;                                        		// 0x0418 (0x0004) [0x0000000000000000]              
	class USavedMove*                                  PendingMove;                                      		// 0x041C (0x0004) [0x0000000000000000]              
	struct FVector                                     LastAckedAccel;                                   		// 0x0420 (0x000C) [0x0000000000000000]              
	float                                              CurrentTimeStamp;                                 		// 0x042C (0x0004) [0x0000000000000000]              
	float                                              LastUpdateTime;                                   		// 0x0430 (0x0004) [0x0000000000000000]              
	float                                              ServerTimeStamp;                                  		// 0x0434 (0x0004) [0x0000000000000000]              
	float                                              TimeMargin;                                       		// 0x0438 (0x0004) [0x0000000000000000]              
	float                                              ClientUpdateTime;                                 		// 0x043C (0x0004) [0x0000000000000000]              
	float                                              MaxTimeMargin;                                    		// 0x0440 (0x0004) [0x0000000000000000]              
	float                                              LastActiveTime;                                   		// 0x0444 (0x0004) [0x0000000000000000]              
	int                                                ClientCap;                                        		// 0x0448 (0x0004) [0x0000000000000000]              
	float                                              DynamicPingThreshold;                             		// 0x044C (0x0004) [0x0000000020000000]              ( CPF_Deprecated )
	float                                              LastPingUpdate;                                   		// 0x0450 (0x0004) [0x0000000000000000]              
	float                                              LastSpeedHackLog;                                 		// 0x0454 (0x0004) [0x0000000000000000]              
	struct FClientAdjustment                           PendingAdjustment;                                		// 0x0458 (0x0034) [0x0000000000000000]              
	int                                                GroundPitch;                                      		// 0x048C (0x0004) [0x0000000000000000]              
	class UCheatManager*                               CheatManager;                                     		// 0x0490 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UClass*                                      CheatClass;                                       		// 0x0494 (0x0004) [0x0000000000000000]              
	class UPlayerInput*                                PlayerInput;                                      		// 0x0498 (0x0004) [0x0000000004002001]              ( CPF_Edit | CPF_Transient | CPF_EditInline )
	class UClass*                                      InputClass;                                       		// 0x049C (0x0004) [0x0000000000000000]              
	struct FVector                                     FailedPathStart;                                  		// 0x04A0 (0x000C) [0x0000000000000002]              ( CPF_Const )
	class UCylinderComponent*                          CylinderComponent;                                		// 0x04AC (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FString                                     ForceFeedbackManagerClassName;                    		// 0x04B0 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	class UForceFeedbackManager*                       ForceFeedbackManager;                             		// 0x04BC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< class UInteraction* >                      Interactions;                                     		// 0x04C0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FUniqueNetId >                      VoiceMuteList;                                    		// 0x04CC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FUniqueNetId >                      GameplayVoiceMuteList;                            		// 0x04D8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FUniqueNetId >                      VoicePacketFilter;                                		// 0x04E4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FConnectedPeerInfo >                ConnectedPeers;                                   		// 0x04F0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FUniqueNetId >                      BestNextHostPeers;                                		// 0x04FC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class UOnlineGameSearch*                           MigratedSearchToJoin;                             		// 0x0508 (0x0004) [0x0000000000000000]              
	class UOnlineSubsystem*                            OnlineSub;                                        		// 0x050C (0x0004) [0x0000000000000000]              
	class UOnlineVoiceInterface*                       VoiceInterface;                                   		// 0x0510 (0x0008) [0x0000000000000000]              
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x0514 (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	class UUIDataStore_OnlinePlayerData*               OnlinePlayerData;                                 		// 0x0518 (0x0004) [0x0000000000000000]              
	float                                              InteractDistance;                                 		// 0x051C (0x0004) [0x0000000000004000]              ( CPF_Config )
	struct FName                                       DelayedJoinSessionName;                           		// 0x0520 (0x0008) [0x0000000000000000]              
	TArray< struct FInputMatchRequest >                InputRequests;                                    		// 0x0528 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              LastBroadcastTime;                                		// 0x0534 (0x0004) [0x0000000000000000]              
	struct FString                                     LastBroadcastString[ 0x4 ];                       		// 0x0538 (0x0030) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FName >                             PendingMapChangeLevelNames;                       		// 0x0568 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class ACoverReplicator*                            MyCoverReplicator;                                		// 0x0574 (0x0004) [0x0000000000000000]              
	TArray< struct FDebugTextInfo >                    DebugTextList;                                    		// 0x0578 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              SpectatorCameraSpeed;                             		// 0x0584 (0x0004) [0x0000000000000000]              
	class UNetConnection*                              PendingSwapConnection;                            		// 0x0588 (0x0004) [0x0000000000200002]              ( CPF_Const )
	float                                              MinRespawnDelay;                                  		// 0x058C (0x0004) [0x0000000000000000]              
	int                                                MaxConcurrentHearSounds;                          		// 0x0590 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	TArray< class UAudioComponent* >                   HearSoundActiveComponents;                        		// 0x0594 (0x000C) [0x0000000004480008]              ( CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	TArray< class UAudioComponent* >                   HearSoundPoolComponents;                          		// 0x05A0 (0x000C) [0x0000000004480008]              ( CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	TArray< class AActor* >                            HiddenActors;                                     		// 0x05AC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              LastSpectatorStateSynchTime;                      		// 0x05B8 (0x0004) [0x0000000000000000]              
	struct FScriptDelegate                             __OnMissingPeersUnregistered__Delegate;           		// 0x05BC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __CanUnpause__Delegate;                           		// 0x05C8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __InputMatchDelegate__Delegate;                   		// 0x05D4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.CheatManager
// 0x0020 (0x005C - 0x003C)
class UCheatManager : public UObject
{
public:
	class ADebugCameraController*                      DebugCameraControllerRef;                         		// 0x003C (0x0004) [0x0000000000000000]              
	class UClass*                                      DebugCameraControllerClass;                       		// 0x0040 (0x0004) [0x0000000000000000]              
	struct FString                                     ViewingFrom;                                      		// 0x0044 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     OwnCamera;                                        		// 0x0050 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
public:
};

// Class Engine.Client
// 0x0014 (0x0050 - 0x003C)
class UClient : public UObject
{
public:
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x003C (0x0004) MISSED OFFSET
	float                                              MinDesiredFrameRate;                              		// 0x0040 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              DisplayGamma;                                     		// 0x0044 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              InitialButtonRepeatDelay;                         		// 0x0048 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              ButtonRepeatDelay;                                		// 0x004C (0x0004) [0x0000000000004000]              ( CPF_Config )
public:
};

// Class Engine.ClipPadEntry
// 0x0018 (0x0054 - 0x003C)
class UClipPadEntry : public UObject
{
public:
	struct FString                                     Title;                                            		// 0x003C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     Text;                                             		// 0x0048 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.CodecMovie
// 0x0004 (0x0040 - 0x003C)
class UCodecMovie : public UObject
{
public:
	float                                              PlaybackDuration;                                 		// 0x003C (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
public:
};

// Class Engine.CodecMovieBink
// 0x0000 (0x0040 - 0x0040)
class UCodecMovieBink : public UCodecMovie
{
public:
public:
};

// Class Engine.CodecMovieFallback
// 0x0004 (0x0044 - 0x0040)
class UCodecMovieFallback : public UCodecMovie
{
public:
	float                                              CurrentTime;                                      		// 0x0040 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
public:
};

// Class Engine.CurveEdPresetCurve
// 0x0018 (0x0054 - 0x003C)
class UCurveEdPresetCurve : public UObject
{
public:
	struct FString                                     CurveName;                                        		// 0x003C (0x000C) [0x0000000000408003]              ( CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	TArray< struct FPresetGeneratedPoint >             Points;                                           		// 0x0048 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.CustomPropertyItemHandler
// 0x0000 (0x003C - 0x003C)
class UCustomPropertyItemHandler : public UInterface
{
public:
public:
};

// Class Engine.DamageType
// 0x0028 (0x0064 - 0x003C)
class UDamageType : public UObject
{
public:
	unsigned long                                      bArmorStops : 1;                                  		// 0x003C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bCausedByWorld : 1;                               		// 0x003C (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bExtraMomentumZ : 1;                              		// 0x003C (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bCausesFracture : 1;                              		// 0x003C (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bRadialDamageVelChange : 1;                       		// 0x003C (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	float                                              KDamageImpulse;                                   		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              KDeathVel;                                        		// 0x0044 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              KDeathUpKick;                                     		// 0x0048 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RadialDamageImpulse;                              		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              VehicleDamageScaling;                             		// 0x0050 (0x0004) [0x0000000000000000]              
	float                                              VehicleMomentumScaling;                           		// 0x0054 (0x0004) [0x0000000000000000]              
	class UForceFeedbackWaveform*                      DamagedFFWaveform;                                		// 0x0058 (0x0004) [0x0000000000000000]              
	class UForceFeedbackWaveform*                      KilledFFWaveform;                                 		// 0x005C (0x0004) [0x0000000000000000]              
	float                                              FracturedMeshDamage;                              		// 0x0060 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.KillZDamageType
// 0x0000 (0x0064 - 0x0064)
class UKillZDamageType : public UDamageType
{
public:
public:
};

// Class Engine.DistributionFloatConstant
// 0x0004 (0x0054 - 0x0050)
class UDistributionFloatConstant : public UDistributionFloat
{
public:
	float                                              Constant;                                         		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.DistributionFloatParameterBase
// 0x0019 (0x006D - 0x0054)
class UDistributionFloatParameterBase : public UDistributionFloatConstant
{
public:
	struct FName                                       ParameterName;                                    		// 0x0054 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              MinInput;                                         		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxInput;                                         		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MinOutput;                                        		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxOutput;                                        		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      ParamMode;                                        		// 0x006C (0x0001) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.DistributionFloatConstantCurve
// 0x0010 (0x0060 - 0x0050)
class UDistributionFloatConstantCurve : public UDistributionFloat
{
public:
	struct FInterpCurveFloat                           ConstantCurve;                                    		// 0x0050 (0x0010) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.DistributionFloatUniform
// 0x0008 (0x0058 - 0x0050)
class UDistributionFloatUniform : public UDistributionFloat
{
public:
	float                                              Min;                                              		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Max;                                              		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.DistributionFloatUniformCurve
// 0x0010 (0x0060 - 0x0050)
class UDistributionFloatUniformCurve : public UDistributionFloat
{
public:
	struct FInterpCurveVector2D                        ConstantCurve;                                    		// 0x0050 (0x0010) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.DistributionVectorConstant
// 0x0011 (0x0061 - 0x0050)
class UDistributionVectorConstant : public UDistributionVector
{
public:
	struct FVector                                     Constant;                                         		// 0x0050 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bLockAxes : 1;                                    		// 0x005C (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned char                                      LockedAxes;                                       		// 0x0060 (0x0001) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.DistributionVectorParameterBase
// 0x003E (0x009F - 0x0061)
class UDistributionVectorParameterBase : public UDistributionVectorConstant
{
public:
	struct FName                                       ParameterName;                                    		// 0x0064 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     MinInput;                                         		// 0x006C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     MaxInput;                                         		// 0x0078 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     MinOutput;                                        		// 0x0084 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     MaxOutput;                                        		// 0x0090 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      ParamModes[ 0x3 ];                                		// 0x009C (0x0003) [0x0000000000080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component )
public:
};

// Class Engine.DistributionVectorConstantCurve
// 0x0015 (0x0065 - 0x0050)
class UDistributionVectorConstantCurve : public UDistributionVector
{
public:
	struct FInterpCurveVector                          ConstantCurve;                                    		// 0x0050 (0x0010) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      bLockAxes : 1;                                    		// 0x0060 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned char                                      LockedAxes;                                       		// 0x0064 (0x0001) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.DistributionVectorUniform
// 0x0020 (0x0070 - 0x0050)
class UDistributionVectorUniform : public UDistributionVector
{
public:
	struct FVector                                     Max;                                              		// 0x0050 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     Min;                                              		// 0x005C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bLockAxes : 1;                                    		// 0x0068 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bUseExtremes : 1;                                 		// 0x0068 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned char                                      LockedAxes;                                       		// 0x006C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      MirrorFlags[ 0x3 ];                               		// 0x006D (0x0003) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.DistributionVectorUniformCurve
// 0x0019 (0x0069 - 0x0050)
class UDistributionVectorUniformCurve : public UDistributionVector
{
public:
	struct FInterpCurveTwoVectors                      ConstantCurve;                                    		// 0x0050 (0x0010) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      bLockAxes1 : 1;                                   		// 0x0060 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bLockAxes2 : 1;                                   		// 0x0060 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bUseExtremes : 1;                                 		// 0x0060 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned char                                      LockedAxes[ 0x2 ];                                		// 0x0064 (0x0002) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      MirrorFlags[ 0x3 ];                               		// 0x0066 (0x0003) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.Download
// 0x0A34 (0x0A70 - 0x003C)
class UDownload : public UObject
{
public:
	unsigned char                                      UnknownData00[ 0xA34 ];                           		// 0x003C (0x0A34) MISSED OFFSET
public:
};

// Class Engine.ChannelDownload
// 0x0004 (0x0A74 - 0x0A70)
class UChannelDownload : public UDownload
{
public:
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x0A70 (0x0004) MISSED OFFSET
public:
};

// Class Engine.EdCoordSystem
// 0x0050 (0x008C - 0x003C)
class UEdCoordSystem : public UObject
{
public:
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x003C (0x0004) MISSED OFFSET
	struct FMatrix                                     M;                                                		// 0x0040 (0x0040) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     Desc;                                             		// 0x0080 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.EditorLinkSelectionInterface
// 0x0000 (0x003C - 0x003C)
class UEditorLinkSelectionInterface : public UInterface
{
public:
public:
};

// Class Engine.EngineTypes
// 0x0000 (0x003C - 0x003C)
class UEngineTypes : public UObject
{
public:
public:
};

// Class Engine.FaceFXAnimSet
// 0x0030 (0x006C - 0x003C)
class UFaceFXAnimSet : public UObject
{
public:
	class UFaceFXAsset*                                DefaultFaceFXAsset;                               		// 0x003C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FPointer                                    InternalFaceFXAnimSet;                            		// 0x0040 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< unsigned char >                            RawFaceFXAnimSetBytes;                            		// 0x0044 (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< unsigned char >                            RawFaceFXMiniSessionBytes;                        		// 0x0050 (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< class USoundCue* >                         ReferencedSoundCues;                              		// 0x005C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                NumLoadErrors;                                    		// 0x0068 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.FaceFXAsset
// 0x0048 (0x0084 - 0x003C)
class UFaceFXAsset : public UObject
{
public:
	class USkeletalMesh*                               DefaultSkelMesh;                                  		// 0x003C (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FPointer                                    FaceFXActor;                                      		// 0x0040 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< unsigned char >                            RawFaceFXActorBytes;                              		// 0x0044 (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< unsigned char >                            RawFaceFXSessionBytes;                            		// 0x0050 (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< class UMorphTargetSet* >                   PreviewMorphSets;                                 		// 0x005C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class UFaceFXAnimSet* >                    MountedFaceFXAnimSets;                            		// 0x0068 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< class USoundCue* >                         ReferencedSoundCues;                              		// 0x0074 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                NumLoadErrors;                                    		// 0x0080 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.Font
// 0x0114 (0x0150 - 0x003C)
class UFont : public UObject
{
public:
	TArray< struct FFontCharacter >                    Characters;                                       		// 0x003C (0x000C) [0x0000000004400001]              ( CPF_Edit | CPF_NeedCtorLink | CPF_EditInline )
	TArray< class UTexture2D* >                        Textures;                                         		// 0x0048 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned char                                      UnknownData00[ 0x3C ];                            		// 0x0054 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.Font.CharRemap
	int                                                IsRemapped;                                       		// 0x0090 (0x0004) [0x0000000000000000]              
	float                                              EmScale;                                          		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Ascent;                                           		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Descent;                                          		// 0x009C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Leading;                                          		// 0x00A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                Kerning;                                          		// 0x00A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FFontImportOptionsData                      ImportOptions;                                    		// 0x00A8 (0x0094) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                NumCharacters;                                    		// 0x013C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< int >                                      MaxCharHeight;                                    		// 0x0140 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              ScalingFactor;                                    		// 0x014C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
public:
};

// Class Engine.MultiFont
// 0x000C (0x015C - 0x0150)
class UMultiFont : public UFont
{
public:
	TArray< float >                                    ResolutionTestTable;                              		// 0x0150 (0x000C) [0x0000000004400001]              ( CPF_Edit | CPF_NeedCtorLink | CPF_EditInline )
public:
};

// Class Engine.FontImportOptions
// 0x0094 (0x00D0 - 0x003C)
class UFontImportOptions : public UObject
{
public:
	struct FFontImportOptionsData                      Data;                                             		// 0x003C (0x0094) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.ForceFeedbackManager
// 0x0018 (0x0054 - 0x003C)
class UForceFeedbackManager : public UObject
{
public:
	unsigned long                                      bAllowsForceFeedback : 1;                         		// 0x003C (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bIsPaused : 1;                                    		// 0x003C (0x0004) [0x0000000000000000] [0x00000002] 
	class UForceFeedbackWaveform*                      FFWaveform;                                       		// 0x0040 (0x0004) [0x0000000000000000]              
	int                                                CurrentSample;                                    		// 0x0044 (0x0004) [0x0000000000000000]              
	float                                              ElapsedTime;                                      		// 0x0048 (0x0004) [0x0000000000000000]              
	float                                              ScaleAllWaveformsBy;                              		// 0x004C (0x0004) [0x0000000000000000]              
	class AActor*                                      WaveformInstigator;                               		// 0x0050 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.ForceFeedbackWaveform
// 0x0018 (0x0054 - 0x003C)
class UForceFeedbackWaveform : public UObject
{
public:
	unsigned long                                      bIsLooping : 1;                                   		// 0x003C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	TArray< struct FWaveformSample >                   Samples;                                          		// 0x0040 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              WaveformFalloffStartDistance;                     		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxWaveformDistance;                              		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.GuidCache
// 0x0048 (0x0084 - 0x003C)
class UGuidCache : public UObject
{
public:
	unsigned char                                      UnknownData00[ 0x48 ];                            		// 0x003C (0x0048) MISSED OFFSET
public:
};

// Class Engine.IniLocPatcher
// 0x0020 (0x005C - 0x003C)
class UIniLocPatcher : public UObject
{
public:
	TArray< struct FIniLocFileEntry >                  Files;                                            		// 0x003C (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	class UOnlineTitleFileInterface*                   TitleFileInterface;                               		// 0x0048 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x004C (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	struct FScriptDelegate                             __OnReadTitleFileComplete__Delegate;              		// 0x0050 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.Interface_NavigationHandle
// 0x0000 (0x003C - 0x003C)
class UInterface_NavigationHandle : public UInterface
{
public:
public:
};

// Class Engine.Interface_Speaker
// 0x0000 (0x003C - 0x003C)
class UInterface_Speaker : public UInterface
{
public:
public:
};

// Class Engine.InterpCurveEdSetup
// 0x0010 (0x004C - 0x003C)
class UInterpCurveEdSetup : public UObject
{
public:
	TArray< struct FCurveEdTab >                       Tabs;                                             		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                ActiveTab;                                        		// 0x0048 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.InterpTrack
// 0x0044 (0x0080 - 0x003C)
class UInterpTrack : public UObject
{
public:
	struct FPointer                                    VfTable_FInterpEdInputInterface;                  		// 0x003C (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	struct FPointer                                    CurveEdVTable;                                    		// 0x0040 (0x0004) [0x0000000000801000]              ( CPF_Native | CPF_NoExport )
	TArray< class UInterpTrack* >                      SubTracks;                                        		// 0x0044 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FSubTrackGroup >                    SubTrackGroups;                                   		// 0x0050 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FSupportedSubTrackInfo >            SupportedSubTracks;                               		// 0x005C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UClass*                                      TrackInstClass;                                   		// 0x0068 (0x0004) [0x0000000000000000]              
	unsigned char                                      ActiveCondition;                                  		// 0x006C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     TrackTitle;                                       		// 0x0070 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned long                                      bOnePerGroup : 1;                                 		// 0x007C (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bDirGroupOnly : 1;                                		// 0x007C (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bDisableTrack : 1;                                		// 0x007C (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bIsAnimControlTrack : 1;                          		// 0x007C (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bSubTrackOnly : 1;                                		// 0x007C (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bVisible : 1;                                     		// 0x007C (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      bIsSelected : 1;                                  		// 0x007C (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	unsigned long                                      bIsRecording : 1;                                 		// 0x007C (0x0004) [0x0000000000002000] [0x00000080] ( CPF_Transient )
	unsigned long                                      bIsCollapsed : 1;                                 		// 0x007C (0x0004) [0x0000000000000000] [0x00000100] 
public:
};

// Class Engine.JsonObject
// 0x0090 (0x00CC - 0x003C)
class UJsonObject : public UObject
{
public:
	struct FMap_Mirror                                 ValueMap;                                         		// 0x003C (0x003C) [0x0000000000001000]              ( CPF_Native )
	struct FMap_Mirror                                 ObjectMap;                                        		// 0x0078 (0x003C) [0x0000000000001000]              ( CPF_Native )
	TArray< struct FString >                           ValueArray;                                       		// 0x00B4 (0x000C) [0x0000000000001000]              ( CPF_Native )
	TArray< class UJsonObject* >                       ObjectArray;                                      		// 0x00C0 (0x000C) [0x0000000000001000]              ( CPF_Native )
public:
};

// Class Engine.KMeshProps
// 0x0044 (0x0080 - 0x003C)
class UKMeshProps : public UObject
{
public:
	struct FVector                                     COMNudge;                                         		// 0x003C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FKAggregateGeom                             AggGeom;                                          		// 0x0048 (0x0038) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.LevelBase
// 0x0054 (0x0090 - 0x003C)
class ULevelBase : public UObject
{
public:
	unsigned char                                      UnknownData00[ 0x54 ];                            		// 0x003C (0x0054) MISSED OFFSET
public:
};

// Class Engine.Level
// 0x02E4 (0x0374 - 0x0090)
class ULevel : public ULevelBase
{
public:
	unsigned char                                      UnknownData00[ 0xD8 ];                            		// 0x0090 (0x00D8) MISSED OFFSET
	float                                              LightmapTotalSize;                                		// 0x0168 (0x0004) [0x0000000000020002]              ( CPF_Const | CPF_EditConst )
	float                                              ShadowmapTotalSize;                               		// 0x016C (0x0004) [0x0000000000020002]              ( CPF_Const | CPF_EditConst )
	unsigned char                                      UnknownData01[ 0x204 ];                           		// 0x0170 (0x0204) MISSED OFFSET
public:
};

// Class Engine.PendingLevel
// 0x0038 (0x00C8 - 0x0090)
class UPendingLevel : public ULevelBase
{
public:
	unsigned char                                      UnknownData00[ 0x38 ];                            		// 0x0090 (0x0038) MISSED OFFSET
public:
};

// Class Engine.DemoPlayPendingLevel
// 0x0000 (0x00C8 - 0x00C8)
class UDemoPlayPendingLevel : public UPendingLevel
{
public:
public:
};

// Class Engine.NetPendingLevel
// 0x0000 (0x00C8 - 0x00C8)
class UNetPendingLevel : public UPendingLevel
{
public:
public:
};

// Class Engine.LevelStreaming
// 0x005C (0x0098 - 0x003C)
class ULevelStreaming : public UObject
{
public:
	struct FName                                       PackageName;                                      		// 0x003C (0x0008) [0x0000000000020003]              ( CPF_Edit | CPF_Const | CPF_EditConst )
	class ULevel*                                      LoadedLevel;                                      		// 0x0044 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FVector                                     Offset;                                           		// 0x0048 (0x000C) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FVector                                     OldOffset;                                        		// 0x0054 (0x000C) [0x0000000000000002]              ( CPF_Const )
	unsigned long                                      bIsVisible : 1;                                   		// 0x0060 (0x0004) [0x0000000000002002] [0x00000001] ( CPF_Const | CPF_Transient )
	unsigned long                                      bHasLoadRequestPending : 1;                       		// 0x0060 (0x0004) [0x0000000000002002] [0x00000002] ( CPF_Const | CPF_Transient )
	unsigned long                                      bHasUnloadRequestPending : 1;                     		// 0x0060 (0x0004) [0x0000000000002002] [0x00000004] ( CPF_Const | CPF_Transient )
	unsigned long                                      bShouldBeVisibleInEditor : 1;                     		// 0x0060 (0x0004) [0x0000000000000003] [0x00000008] ( CPF_Edit | CPF_Const )
	unsigned long                                      bBoundingBoxVisible : 1;                          		// 0x0060 (0x0004) [0x0000000000000002] [0x00000010] ( CPF_Const )
	unsigned long                                      bLocked : 1;                                      		// 0x0060 (0x0004) [0x0000000000000003] [0x00000020] ( CPF_Edit | CPF_Const )
	unsigned long                                      bIsFullyStatic : 1;                               		// 0x0060 (0x0004) [0x0000000000000003] [0x00000040] ( CPF_Edit | CPF_Const )
	unsigned long                                      bShouldBeLoaded : 1;                              		// 0x0060 (0x0004) [0x0000000000002002] [0x00000080] ( CPF_Const | CPF_Transient )
	unsigned long                                      bShouldBeVisible : 1;                             		// 0x0060 (0x0004) [0x0000000000002002] [0x00000100] ( CPF_Const | CPF_Transient )
	unsigned long                                      bShouldBlockOnLoad : 1;                           		// 0x0060 (0x0004) [0x0000000000002000] [0x00000200] ( CPF_Transient )
	unsigned long                                      bDrawOnLevelStatusMap : 1;                        		// 0x0060 (0x0004) [0x0000000000000001] [0x00000400] ( CPF_Edit )
	unsigned long                                      bIsRequestingUnloadAndRemoval : 1;                		// 0x0060 (0x0004) [0x0000000000002002] [0x00000800] ( CPF_Const | CPF_Transient )
	struct FColor                                      DrawColor;                                        		// 0x0064 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	TArray< class ALevelStreamingVolume* >             EditorStreamingVolumes;                           		// 0x0068 (0x000C) [0x0000000000420003]              ( CPF_Edit | CPF_Const | CPF_EditConst | CPF_NeedCtorLink )
	float                                              MinTimeBetweenVolumeUnloadRequests;               		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LastVolumeUnloadRequestTime;                      		// 0x0078 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	TArray< struct FString >                           Keywords;                                         		// 0x007C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class ALevelGridVolume*                            EditorGridVolume;                                 		// 0x0088 (0x0004) [0x0000000000020003]              ( CPF_Edit | CPF_Const | CPF_EditConst )
	int                                                GridPosition[ 0x3 ];                              		// 0x008C (0x000C) [0x0000000000020003]              ( CPF_Edit | CPF_Const | CPF_EditConst )
public:
};

// Class Engine.LevelStreamingAlwaysLoaded
// 0x0004 (0x009C - 0x0098)
class ULevelStreamingAlwaysLoaded : public ULevelStreaming
{
public:
	unsigned long                                      bIsProceduralBuildingLODLevel : 1;                		// 0x0098 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.LevelStreamingDistance
// 0x0010 (0x00A8 - 0x0098)
class ULevelStreamingDistance : public ULevelStreaming
{
public:
	struct FVector                                     Origin;                                           		// 0x0098 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxDistance;                                      		// 0x00A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.LevelStreamingKismet
// 0x0000 (0x0098 - 0x0098)
class ULevelStreamingKismet : public ULevelStreaming
{
public:
public:
};

// Class Engine.LevelStreamingPersistent
// 0x0000 (0x0098 - 0x0098)
class ULevelStreamingPersistent : public ULevelStreaming
{
public:
public:
};

// Class Engine.LightmappedSurfaceCollection
// 0x0010 (0x004C - 0x003C)
class ULightmappedSurfaceCollection : public UObject
{
public:
	class UModel*                                      SourceModel;                                      		// 0x003C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< int >                                      Surfaces;                                         		// 0x0040 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.LightmassLevelSettings
// 0x0030 (0x006C - 0x003C)
class ULightmassLevelSettings : public UObject
{
public:
	int                                                NumIndirectLightingBounces;                       		// 0x003C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      EnvironmentColor;                                 		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EnvironmentIntensity;                             		// 0x0044 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EmissiveBoost;                                    		// 0x0048 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DiffuseBoost;                                     		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SpecularBoost;                                    		// 0x0050 (0x0004) [0x0000000000000000]              
	unsigned long                                      bUseAmbientOcclusion : 1;                         		// 0x0054 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bVisualizeAmbientOcclusion : 1;                   		// 0x0054 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	float                                              DirectIlluminationOcclusionFraction;              		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              IndirectIlluminationOcclusionFraction;            		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OcclusionExponent;                                		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FullyOccludedSamplesFraction;                     		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxOcclusionDistance;                             		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.LightmassPrimitiveSettingsObject
// 0x001C (0x0058 - 0x003C)
class ULightmassPrimitiveSettingsObject : public UObject
{
public:
	struct FLightmassPrimitiveSettings                 LightmassSettings;                                		// 0x003C (0x001C) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MapInfo
// 0x0000 (0x003C - 0x003C)
class UMapInfo : public UObject
{
public:
public:
};

// Class Engine.Model
// 0x09D0 (0x0A0C - 0x003C)
class UModel : public UObject
{
public:
	unsigned char                                      UnknownData00[ 0x9D0 ];                           		// 0x003C (0x09D0) MISSED OFFSET
public:
};

// Class Engine.MusicTrackDataStructures
// 0x0000 (0x003C - 0x003C)
class UMusicTrackDataStructures : public UObject
{
public:
public:
};

// Class Engine.NavigationMeshBase
// 0x0264 (0x02A0 - 0x003C)
class UNavigationMeshBase : public UObject
{
public:
	unsigned char                                      UnknownData00[ 0x264 ];                           		// 0x003C (0x0264) MISSED OFFSET
public:
};

// Class Engine.NetDriver
// 0x0154 (0x0194 - 0x0040)
class UNetDriver : public USubsystem
{
public:
	unsigned char                                      UnknownData00[ 0x20 ];                            		// 0x0040 (0x0020) MISSED OFFSET
	float                                              ConnectionTimeout;                                		// 0x0060 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              InitialConnectTimeout;                            		// 0x0064 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              KeepAliveTime;                                    		// 0x0068 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              RelevantTimeout;                                  		// 0x006C (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              SpawnPrioritySeconds;                             		// 0x0070 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              ServerTravelPause;                                		// 0x0074 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                MaxClientRate;                                    		// 0x0078 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                MaxInternetClientRate;                            		// 0x007C (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                NetServerMaxTickRate;                             		// 0x0080 (0x0004) [0x0000000000004000]              ( CPF_Config )
	unsigned long                                      bClampListenServerTickRate : 1;                   		// 0x0084 (0x0004) [0x0000000000004000] [0x00000001] ( CPF_Config )
	unsigned long                                      AllowDownloads : 1;                               		// 0x0088 (0x0004) [0x0000000000004000] [0x00000001] ( CPF_Config )
	unsigned long                                      AllowPeerConnections : 1;                         		// 0x008C (0x0004) [0x0000000000004000] [0x00000001] ( CPF_Config )
	unsigned long                                      AllowPeerVoice : 1;                               		// 0x0090 (0x0004) [0x0000000000004000] [0x00000001] ( CPF_Config )
	unsigned char                                      UnknownData01[ 0x18 ];                            		// 0x0094 (0x0018) MISSED OFFSET
	int                                                MaxDownloadSize;                                  		// 0x00AC (0x0004) [0x0000000000004000]              ( CPF_Config )
	TArray< struct FString >                           DownloadManagers;                                 		// 0x00B0 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	unsigned char                                      UnknownData02[ 0x90 ];                            		// 0x00BC (0x0090) MISSED OFFSET
	struct FString                                     NetConnectionClassName;                           		// 0x014C (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	unsigned char                                      UnknownData03[ 0x3C ];                            		// 0x0158 (0x003C) MISSED OFFSET
public:
};

// Class Engine.DemoRecDriver
// 0x00C4 (0x0258 - 0x0194)
class UDemoRecDriver : public UNetDriver
{
public:
	unsigned char                                      UnknownData00[ 0x28 ];                            		// 0x0194 (0x0028) MISSED OFFSET
	struct FString                                     DemoSpectatorClass;                               		// 0x01BC (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	unsigned char                                      UnknownData01[ 0x7C ];                            		// 0x01C8 (0x007C) MISSED OFFSET
	int                                                MaxRewindPoints;                                  		// 0x0244 (0x0004) [0x0000000000004000]              ( CPF_Config )
	unsigned char                                      UnknownData02[ 0x4 ];                             		// 0x0248 (0x0004) MISSED OFFSET
	float                                              RewindPointInterval;                              		// 0x024C (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                NumRecentRewindPoints;                            		// 0x0250 (0x0004) [0x0000000000004000]              ( CPF_Config )
	unsigned char                                      UnknownData03[ 0x4 ];                             		// 0x0254 (0x0004) MISSED OFFSET
public:
};

// Class Engine.ObjectReferencer
// 0x000C (0x0048 - 0x003C)
class UObjectReferencer : public UObject
{
public:
	TArray< class UObject* >                           ReferencedObjects;                                		// 0x003C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.OnlineMatchmakingStats
// 0x0000 (0x003C - 0x003C)
class UOnlineMatchmakingStats : public UObject
{
public:
public:
};

// Class Engine.OnlinePlayerStorage
// 0x006C (0x00A8 - 0x003C)
class UOnlinePlayerStorage : public UObject
{
public:
	struct FVideoSettingsStructDup                     ProfileVideoSettings;                             		// 0x003C (0x0034) [0x0000000000000000]              
	TArray< struct FKeyBindDup >                       ProfileBindings;                                  		// 0x0070 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                VersionNumber;                                    		// 0x007C (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                VersionSettingsId;                                		// 0x0080 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                SaveCountSettingId;                               		// 0x0084 (0x0004) [0x0000000000000002]              ( CPF_Const )
	TArray< struct FOnlineProfileSetting >             ProfileSettings;                                  		// 0x0088 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FSettingsPropertyPropertyMetaData > ProfileMappings;                                  		// 0x0094 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned char                                      AsyncState;                                       		// 0x00A0 (0x0001) [0x0000000000000002]              ( CPF_Const )
	int                                                DeviceID;                                         		// 0x00A4 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.OnlineProfileSettings
// 0x0024 (0x00CC - 0x00A8)
class UOnlineProfileSettings : public UOnlinePlayerStorage
{
public:
	TArray< int >                                      ProfileSettingIds;                                		// 0x00A8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FOnlineProfileSetting >             DefaultSettings;                                  		// 0x00B4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FIdToStringMapping >                OwnerMappings;                                    		// 0x00C0 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
public:
};

// Class Engine.OnlineStats
// 0x000C (0x0048 - 0x003C)
class UOnlineStats : public UObject
{
public:
	TArray< struct FStringIdToStringMapping >          ViewIdMappings;                                   		// 0x003C (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
public:
};

// Class Engine.OnlineStatsRead
// 0x0054 (0x009C - 0x0048)
class UOnlineStatsRead : public UOnlineStats
{
public:
	int                                                ViewId;                                           		// 0x0048 (0x0004) [0x0000000000000000]              
	int                                                SortColumnId;                                     		// 0x004C (0x0004) [0x0000000000000002]              ( CPF_Const )
	TArray< int >                                      ColumnIds;                                        		// 0x0050 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                TotalRowsInView;                                  		// 0x005C (0x0004) [0x0000000000000002]              ( CPF_Const )
	TArray< struct FOnlineStatsRow >                   Rows;                                             		// 0x0060 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FColumnMetaData >                   ColumnMappings;                                   		// 0x006C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     ViewName;                                         		// 0x0078 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                TitleId;                                          		// 0x0084 (0x0004) [0x0000000000000002]              ( CPF_Const )
	unsigned long                                      m_bReading : 1;                                   		// 0x0088 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	struct FString                                     TableName;                                        		// 0x008C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                m_nStatsPageIndex;                                		// 0x0098 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.OnlineStatsWrite
// 0x0040 (0x0088 - 0x0048)
class UOnlineStatsWrite : public UOnlineStats
{
public:
	TArray< struct FStringIdToStringMapping >          StatMappings;                                     		// 0x0048 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< struct FSettingsProperty >                 Properties;                                       		// 0x0054 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< int >                                      ViewIds;                                          		// 0x0060 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< int >                                      ArbitratedViewIds;                                		// 0x006C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                RatingId;                                         		// 0x0078 (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FScriptDelegate                             __OnStatsWriteComplete__Delegate;                 		// 0x007C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.OnlineSubsystem
// 0x00B4 (0x00F0 - 0x003C)
class UOnlineSubsystem : public UObject
{
public:
	struct FPointer                                    VfTable_FTickableObject;                          		// 0x003C (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	class UOnlineAccountInterface*                     AccountInterface;                                 		// 0x0040 (0x0008) [0x0000000000000000]              
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x0044 (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x0048 (0x0008) [0x0000000000000000]              
	unsigned char                                      UnknownData01[ 0x4 ];                             		// 0x004C (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	class UOnlinePlayerInterfaceEx*                    PlayerInterfaceEx;                                		// 0x0050 (0x0008) [0x0000000000000000]              
	unsigned char                                      UnknownData02[ 0x4 ];                             		// 0x0054 (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	class UOnlineSystemInterface*                      SystemInterface;                                  		// 0x0058 (0x0008) [0x0000000000000000]              
	unsigned char                                      UnknownData03[ 0x4 ];                             		// 0x005C (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	class UOnlineGameInterface*                        GameInterface;                                    		// 0x0060 (0x0008) [0x0000000000000000]              
	unsigned char                                      UnknownData04[ 0x4 ];                             		// 0x0064 (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	class UOnlineContentInterface*                     ContentInterface;                                 		// 0x0068 (0x0008) [0x0000000000000000]              
	unsigned char                                      UnknownData05[ 0x4 ];                             		// 0x006C (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	class UOnlineVoiceInterface*                       VoiceInterface;                                   		// 0x0070 (0x0008) [0x0000000000000000]              
	unsigned char                                      UnknownData06[ 0x4 ];                             		// 0x0074 (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	class UOnlineStatsInterface*                       StatsInterface;                                   		// 0x0078 (0x0008) [0x0000000000000000]              
	unsigned char                                      UnknownData07[ 0x4 ];                             		// 0x007C (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	class UOnlineNewsInterface*                        NewsInterface;                                    		// 0x0080 (0x0008) [0x0000000000000000]              
	unsigned char                                      UnknownData08[ 0x4 ];                             		// 0x0084 (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	class UOnlinePartyChatInterface*                   PartyChatInterface;                               		// 0x0088 (0x0008) [0x0000000000000000]              
	unsigned char                                      UnknownData09[ 0x4 ];                             		// 0x008C (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	class UOnlineTitleFileInterface*                   TitleFileInterface;                               		// 0x0090 (0x0008) [0x0000000000000000]              
	unsigned char                                      UnknownData10[ 0x4 ];                             		// 0x0094 (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	class UOnlineTitleFileCacheInterface*              TitleFileCacheInterface;                          		// 0x0098 (0x0008) [0x0000000000000000]              
	unsigned char                                      UnknownData11[ 0x4 ];                             		// 0x009C (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	class UOnlineSocialInterface*                      SocialInterface;                                  		// 0x00A0 (0x0008) [0x0000000000000000]              
	unsigned char                                      UnknownData12[ 0x4 ];                             		// 0x00A4 (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	class UOnlineGameUpdateInterface*                  GameUpdateInterface;                              		// 0x00A8 (0x0008) [0x0000000000000000]              
	unsigned char                                      UnknownData13[ 0x4 ];                             		// 0x00AC (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	TArray< struct FNamedInterface >                   NamedInterfaces;                                  		// 0x00B0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FNamedInterfaceDef >                NamedInterfaceDefs;                               		// 0x00BC (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	TArray< struct FNamedSession >                     Sessions;                                         		// 0x00C8 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	unsigned long                                      bUseBuildIdOverride : 1;                          		// 0x00D4 (0x0004) [0x0000000000004000] [0x00000001] ( CPF_Config )
	int                                                BuildIdOverride;                                  		// 0x00D8 (0x0004) [0x0000000000004000]              ( CPF_Config )
	struct FString                                     IniLocPatcherClassName;                           		// 0x00DC (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	class UIniLocPatcher*                              Patcher;                                          		// 0x00E8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              AsyncMinCompletionTime;                           		// 0x00EC (0x0004) [0x0000000000004000]              ( CPF_Config )
public:
};

// Class Engine.PackageMapLevel
// 0x0004 (0x00C4 - 0x00C0)
class UPackageMapLevel : public UPackageMap
{
public:
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x00C0 (0x0004) MISSED OFFSET
public:
};

// Class Engine.PackageMapSeekFree
// 0x0000 (0x00C4 - 0x00C4)
class UPackageMapSeekFree : public UPackageMapLevel
{
public:
public:
};

// Class Engine.PatchScriptCommandlet
// 0x0004 (0x0080 - 0x007C)
class UPatchScriptCommandlet : public UCommandlet
{
public:
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x007C (0x0004) MISSED OFFSET
public:
};

// Class Engine.Player
// 0x0024 (0x0060 - 0x003C)
class UPlayer : public UObject
{
public:
	struct FPointer                                    VfTable_FExec;                                    		// 0x003C (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	class APlayerController*                           Actor;                                            		// 0x0040 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                CurrentNetSpeed;                                  		// 0x0044 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                ConfiguredInternetSpeed;                          		// 0x0048 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	int                                                ConfiguredLanSpeed;                               		// 0x004C (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              PP_DesaturationMultiplier;                        		// 0x0050 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              PP_HighlightsMultiplier;                          		// 0x0054 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              PP_MidTonesMultiplier;                            		// 0x0058 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              PP_ShadowsMultiplier;                             		// 0x005C (0x0004) [0x0000000000004000]              ( CPF_Config )
public:
};

// Class Engine.LocalPlayer
// 0x0430 (0x0490 - 0x0060)
class ULocalPlayer : public UPlayer
{
public:
	struct FPointer                                    VfTable_FObserverInterface;                       		// 0x0060 (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	int                                                ControllerId;                                     		// 0x0064 (0x0004) [0x0000000000000000]              
	class UGameViewportClient*                         ViewportClient;                                   		// 0x0068 (0x0004) [0x0000000000000000]              
	struct FVector2D                                   Origin;                                           		// 0x006C (0x0008) [0x0000000000000000]              
	struct FVector2D                                   Size;                                             		// 0x0074 (0x0008) [0x0000000000000000]              
	class UPostProcessChain*                           PlayerPostProcess;                                		// 0x007C (0x0004) [0x0000000000000002]              ( CPF_Const )
	TArray< class UPostProcessChain* >                 PlayerPostProcessChains;                          		// 0x0080 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	unsigned long                                      bForceDefaultPostProcessChain : 1;                		// 0x008C (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bWantToResetToMapDefaultPP : 1;                   		// 0x008C (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bSentSplitJoin : 1;                               		// 0x008C (0x0004) [0x0000000000022002] [0x00000004] ( CPF_Const | CPF_Transient | CPF_EditConst )
	struct FPointer                                    ViewState;                                        		// 0x0090 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FSynchronizedActorVisibilityHistory         ActorVisibilityHistory;                           		// 0x0094 (0x0008) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FVector                                     LastViewLocation;                                 		// 0x009C (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FCurrentPostProcessVolumeInfo               CurrentPPInfo;                                    		// 0x00A8 (0x01E4) [0x0000000001402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	struct FCurrentPostProcessVolumeInfo               LevelPPInfo;                                      		// 0x028C (0x01E4) [0x0000000001402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FPostProcessSettingsOverride >      ActivePPOverrides;                                		// 0x0470 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned char                                      AspectRatioAxisConstraint;                        		// 0x047C (0x0001) [0x0000000000004000]              ( CPF_Config )
	struct FString                                     LastMap;                                          		// 0x0480 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class UTranslationContext*                         TagContext;                                       		// 0x048C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.NetConnection
// 0x4F80 (0x4FE0 - 0x0060)
class UNetConnection : public UPlayer
{
public:
	unsigned char                                      UnknownData00[ 0x4F48 ];                          		// 0x0060 (0x4F48) MISSED OFFSET
	TArray< class UChildConnection* >                  Children;                                         		// 0x4FA8 (0x000C) [0x0000000000602000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned char                                      UnknownData01[ 0x2C ];                            		// 0x4FB4 (0x002C) MISSED OFFSET
public:
};

// Class Engine.ChildConnection
// 0x0004 (0x4FE4 - 0x4FE0)
class UChildConnection : public UNetConnection
{
public:
	class UNetConnection*                              Parent;                                           		// 0x4FE0 (0x0004) [0x0000000000202002]              ( CPF_Const | CPF_Transient )
public:
};

// Class Engine.DemoRecConnection
// 0x0000 (0x4FE0 - 0x4FE0)
class UDemoRecConnection : public UNetConnection
{
public:
public:
};

// Class Engine.Polys
// 0x0010 (0x004C - 0x003C)
class UPolys : public UObject
{
public:
	unsigned char                                      UnknownData00[ 0x10 ];                            		// 0x003C (0x0010) MISSED OFFSET
public:
};

// Class Engine.PostProcessChain
// 0x0010 (0x004C - 0x003C)
class UPostProcessChain : public UObject
{
public:
	TArray< class UPostProcessEffect* >                Effects;                                          		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned long                                      bEnable : 1;                                      		// 0x0048 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class Engine.PostProcessEffect
// 0x0025 (0x0061 - 0x003C)
class UPostProcessEffect : public UObject
{
public:
	unsigned long                                      bShowInEditor : 1;                                		// 0x003C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bShowInGame : 1;                                  		// 0x003C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bUseWorldSettings : 1;                            		// 0x003C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bAffectsLightingOnly : 1;                         		// 0x003C (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bEnabled : 1;                                     		// 0x003C (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bForceShow : 1;                                   		// 0x003C (0x0004) [0x0000000000000000] [0x00000020] 
	struct FName                                       EffectName;                                       		// 0x0040 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	int                                                NodePosY;                                         		// 0x0048 (0x0004) [0x0000000000000000]              
	int                                                NodePosX;                                         		// 0x004C (0x0004) [0x0000000000000000]              
	int                                                DrawWidth;                                        		// 0x0050 (0x0004) [0x0000000000000000]              
	int                                                DrawHeight;                                       		// 0x0054 (0x0004) [0x0000000000000000]              
	int                                                OutDrawY;                                         		// 0x0058 (0x0004) [0x0000000000000000]              
	int                                                InDrawY;                                          		// 0x005C (0x0004) [0x0000000000000000]              
	unsigned char                                      SceneDPG;                                         		// 0x0060 (0x0001) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.AmbientOcclusionEffect
// 0x005F (0x00C0 - 0x0061)
class UAmbientOcclusionEffect : public UPostProcessEffect
{
public:
	struct FLinearColor                                OcclusionColor;                                   		// 0x0064 (0x0010) [0x0000000000000001]              ( CPF_Edit )
	float                                              OcclusionPower;                                   		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OcclusionScale;                                   		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OcclusionBias;                                    		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MinOcclusion;                                     		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      SSAO2 : 1;                                        		// 0x0084 (0x0004) [0x0000000020000000] [0x00000001] ( CPF_Deprecated )
	unsigned long                                      bAngleBasedSSAO : 1;                              		// 0x0084 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	float                                              OcclusionRadius;                                  		// 0x0088 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OcclusionAttenuation;                             		// 0x008C (0x0004) [0x0000000020000000]              ( CPF_Deprecated )
	unsigned char                                      OcclusionQuality;                                 		// 0x0090 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              OcclusionFadeoutMinDistance;                      		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OcclusionFadeoutMaxDistance;                      		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              HaloDistanceThreshold;                            		// 0x009C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              HaloDistanceScale;                                		// 0x00A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              HaloOcclusion;                                    		// 0x00A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EdgeDistanceThreshold;                            		// 0x00A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EdgeDistanceScale;                                		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FilterDistanceScale;                              		// 0x00B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                FilterSize;                                       		// 0x00B4 (0x0004) [0x0000000020000000]              ( CPF_Deprecated )
	float                                              HistoryConvergenceTime;                           		// 0x00B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              HistoryWeightConvergenceTime;                     		// 0x00BC (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.BlurEffect
// 0x0007 (0x0068 - 0x0061)
class UBlurEffect : public UPostProcessEffect
{
public:
	int                                                BlurKernelSize;                                   		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.DOFEffect
// 0x002F (0x0090 - 0x0061)
class UDOFEffect : public UPostProcessEffect
{
public:
	float                                              FalloffExponent;                                  		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BlurKernelSize;                                   		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxNearBlurAmount;                                		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MinBlurAmount;                                    		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxFarBlurAmount;                                 		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      FocusType;                                        		// 0x0078 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              FocusInnerRadius;                                 		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FocusDistance;                                    		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     FocusPosition;                                    		// 0x0084 (0x000C) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.DOFAndBloomEffect
// 0x0024 (0x00B4 - 0x0090)
class UDOFAndBloomEffect : public UDOFEffect
{
public:
	float                                              BloomScale;                                       		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BloomThreshold;                                   		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      BloomTint;                                        		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BloomScreenBlendThreshold;                        		// 0x009C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SceneMultiplier;                                  		// 0x00A0 (0x0004) [0x0000000020000000]              ( CPF_Deprecated )
	float                                              BlurBloomKernelSize;                              		// 0x00A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bEnableReferenceDOF : 1;                          		// 0x00A8 (0x0004) [0x0000000020000000] [0x00000001] ( CPF_Deprecated )
	unsigned char                                      DepthOfFieldType;                                 		// 0x00AC (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      DepthOfFieldQuality;                              		// 0x00AD (0x0001) [0x0000000000000001]              ( CPF_Edit )
	class UTexture2D*                                  BokehTexture;                                     		// 0x00B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.DOFBloomMotionBlurEffect
// 0x0014 (0x00C8 - 0x00B4)
class UDOFBloomMotionBlurEffect : public UDOFAndBloomEffect
{
public:
	float                                              MaxVelocity;                                      		// 0x00B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MotionBlurAmount;                                 		// 0x00B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      FullMotionBlur : 1;                               		// 0x00BC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              CameraRotationThreshold;                          		// 0x00C0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CameraTranslationThreshold;                       		// 0x00C4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.UberPostProcessEffect
// 0x008C (0x0154 - 0x00C8)
class UUberPostProcessEffect : public UDOFBloomMotionBlurEffect
{
public:
	struct FVector                                     SceneShadows;                                     		// 0x00C8 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     SceneHighLights;                                  		// 0x00D4 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     SceneMidTones;                                    		// 0x00E0 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              SceneDesaturation;                                		// 0x00EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     SceneColorize;                                    		// 0x00F0 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      TonemapperType;                                   		// 0x00FC (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      PostProcessAAType;                                		// 0x00FD (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              TonemapperRange;                                  		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TonemapperToeFactor;                              		// 0x0104 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TonemapperScale;                                  		// 0x0108 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MotionBlurSoftEdgeKernelSize;                     		// 0x010C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bEnableImageGrain : 1;                            		// 0x0110 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bScaleEffectsWithViewSize : 1;                    		// 0x0110 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bEnableHDRTonemapper : 1;                         		// 0x0110 (0x0004) [0x0000000020000000] [0x00000004] ( CPF_Deprecated )
	float                                              SceneImageGrainScale;                             		// 0x0114 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BloomWeightSmall;                                 		// 0x0118 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BloomWeightMedium;                                		// 0x011C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BloomWeightLarge;                                 		// 0x0120 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BloomSizeScaleSmall;                              		// 0x0124 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BloomSizeScaleMedium;                             		// 0x0128 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BloomSizeScaleLarge;                              		// 0x012C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EdgeDetectionThreshold;                           		// 0x0130 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FLUTBlender                                 PreviousLUTBlender;                               		// 0x0134 (0x001C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	float                                              SceneHDRTonemapperScale;                          		// 0x0150 (0x0004) [0x0000000020000000]              ( CPF_Deprecated )
public:
};

// Class Engine.DwTriovizImplEffect
// 0x0003 (0x0064 - 0x0061)
class UDwTriovizImplEffect : public UPostProcessEffect
{
public:
public:
};

// Class Engine.MaterialEffect
// 0x001B (0x007C - 0x0061)
class UMaterialEffect : public UPostProcessEffect
{
public:
	class UMaterialInterface*                          Material;                                         		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              leftX;                                            		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              leftY;                                            		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Width;                                            		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Height;                                           		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bUseFading : 1;                                   		// 0x0078 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.MotionBlurEffect
// 0x0017 (0x0078 - 0x0061)
class UMotionBlurEffect : public UPostProcessEffect
{
public:
	float                                              MaxVelocity;                                      		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MotionBlurAmount;                                 		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      FullMotionBlur : 1;                               		// 0x006C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              CameraRotationThreshold;                          		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CameraTranslationThreshold;                       		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.PrimitiveComponentFactory
// 0x0004 (0x0040 - 0x003C)
class UPrimitiveComponentFactory : public UObject
{
public:
	unsigned long                                      CollideActors : 1;                                		// 0x003C (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	unsigned long                                      BlockActors : 1;                                  		// 0x003C (0x0004) [0x0000000000000003] [0x00000002] ( CPF_Edit | CPF_Const )
	unsigned long                                      BlockZeroExtent : 1;                              		// 0x003C (0x0004) [0x0000000000000003] [0x00000004] ( CPF_Edit | CPF_Const )
	unsigned long                                      BlockNonZeroExtent : 1;                           		// 0x003C (0x0004) [0x0000000000000003] [0x00000008] ( CPF_Edit | CPF_Const )
	unsigned long                                      BlockRigidBody : 1;                               		// 0x003C (0x0004) [0x0000000000000003] [0x00000010] ( CPF_Edit | CPF_Const )
	unsigned long                                      HiddenGame : 1;                                   		// 0x003C (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      HiddenEditor : 1;                                 		// 0x003C (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      CastShadow : 1;                                   		// 0x003C (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
public:
};

// Class Engine.MeshComponentFactory
// 0x000C (0x004C - 0x0040)
class UMeshComponentFactory : public UPrimitiveComponentFactory
{
public:
	TArray< class UMaterialInterface* >                Materials;                                        		// 0x0040 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.StaticMeshComponentFactory
// 0x0004 (0x0050 - 0x004C)
class UStaticMeshComponentFactory : public UMeshComponentFactory
{
public:
	class UStaticMesh*                                 StaticMesh;                                       		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ReachSpec
// 0x0054 (0x0090 - 0x003C)
class UReachSpec : public UObject
{
public:
	struct FPointer                                    NavOctreeObject;                                  		// 0x003C (0x0004) [0x0000000000023002]              ( CPF_Const | CPF_Native | CPF_Transient | CPF_EditConst )
	int                                                Distance;                                         		// 0x0040 (0x0004) [0x0000000000000000]              
	struct FVector                                     Direction;                                        		// 0x0044 (0x000C) [0x0000000000000000]              
	class ANavigationPoint*                            Start;                                            		// 0x0050 (0x0004) [0x0000000000020003]              ( CPF_Edit | CPF_Const | CPF_EditConst )
	struct FActorReference                             End;                                              		// 0x0054 (0x0014) [0x0000000000020003]              ( CPF_Edit | CPF_Const | CPF_EditConst )
	int                                                CollisionRadius;                                  		// 0x0068 (0x0004) [0x0000000000020003]              ( CPF_Edit | CPF_Const | CPF_EditConst )
	int                                                CollisionHeight;                                  		// 0x006C (0x0004) [0x0000000000020003]              ( CPF_Edit | CPF_Const | CPF_EditConst )
	int                                                reachFlags;                                       		// 0x0070 (0x0004) [0x0000000000000000]              
	int                                                MaxLandingVelocity;                               		// 0x0074 (0x0004) [0x0000000000000000]              
	unsigned char                                      bPruned;                                          		// 0x0078 (0x0001) [0x0000000000000000]              
	unsigned char                                      PathColorIndex;                                   		// 0x0079 (0x0001) [0x0000000000000000]              
	unsigned long                                      bAddToNavigationOctree : 1;                       		// 0x007C (0x0004) [0x0000000000020002] [0x00000001] ( CPF_Const | CPF_EditConst )
	unsigned long                                      bCanCutCorners : 1;                               		// 0x007C (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bCheckForObstructions : 1;                        		// 0x007C (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bSkipPrune : 1;                                   		// 0x007C (0x0004) [0x0000000000000002] [0x00000008] ( CPF_Const )
	unsigned long                                      bDisabled : 1;                                    		// 0x007C (0x0004) [0x0000000000020001] [0x00000010] ( CPF_Edit | CPF_EditConst )
	TArray< class UClass* >                            PruneSpecList;                                    		// 0x0080 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	class AActor*                                      BlockedBy;                                        		// 0x008C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.AdvancedReachSpec
// 0x0000 (0x0090 - 0x0090)
class UAdvancedReachSpec : public UReachSpec
{
public:
public:
};

// Class Engine.CeilingReachSpec
// 0x0000 (0x0090 - 0x0090)
class UCeilingReachSpec : public UReachSpec
{
public:
public:
};

// Class Engine.ForcedReachSpec
// 0x0000 (0x0090 - 0x0090)
class UForcedReachSpec : public UReachSpec
{
public:
public:
};

// Class Engine.CoverSlipReachSpec
// 0x0001 (0x0091 - 0x0090)
class UCoverSlipReachSpec : public UForcedReachSpec
{
public:
	unsigned char                                      SpecDirection;                                    		// 0x0090 (0x0001) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
public:
};

// Class Engine.FloorToCeilingReachSpec
// 0x0000 (0x0090 - 0x0090)
class UFloorToCeilingReachSpec : public UForcedReachSpec
{
public:
public:
};

// Class Engine.MantleReachSpec
// 0x0004 (0x0094 - 0x0090)
class UMantleReachSpec : public UForcedReachSpec
{
public:
	unsigned long                                      bClimbUp : 1;                                     		// 0x0090 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.SlotToSlotReachSpec
// 0x0001 (0x0091 - 0x0090)
class USlotToSlotReachSpec : public UForcedReachSpec
{
public:
	unsigned char                                      SpecDirection;                                    		// 0x0090 (0x0001) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
public:
};

// Class Engine.SwatTurnReachSpec
// 0x0001 (0x0091 - 0x0090)
class USwatTurnReachSpec : public UForcedReachSpec
{
public:
	unsigned char                                      SpecDirection;                                    		// 0x0090 (0x0001) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
public:
};

// Class Engine.WallTransReachSpec
// 0x0000 (0x0090 - 0x0090)
class UWallTransReachSpec : public UForcedReachSpec
{
public:
public:
};

// Class Engine.LadderReachSpec
// 0x0000 (0x0090 - 0x0090)
class ULadderReachSpec : public UReachSpec
{
public:
public:
};

// Class Engine.ProscribedReachSpec
// 0x0000 (0x0090 - 0x0090)
class UProscribedReachSpec : public UReachSpec
{
public:
public:
};

// Class Engine.TeleportReachSpec
// 0x0000 (0x0090 - 0x0090)
class UTeleportReachSpec : public UReachSpec
{
public:
public:
};

// Class Engine.SavedMove
// 0x00AC (0x00E8 - 0x003C)
class USavedMove : public UObject
{
public:
	class USavedMove*                                  NextMove;                                         		// 0x003C (0x0004) [0x0000000000000000]              
	float                                              TimeStamp;                                        		// 0x0040 (0x0004) [0x0000000000000000]              
	float                                              Delta;                                            		// 0x0044 (0x0004) [0x0000000000000000]              
	unsigned long                                      bRun : 1;                                         		// 0x0048 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bDuck : 1;                                        		// 0x0048 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bPressedJump : 1;                                 		// 0x0048 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bDoubleJump : 1;                                  		// 0x0048 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bPreciseDestination : 1;                          		// 0x0048 (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bForceRMVelocity : 1;                             		// 0x0048 (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bForceMaxAccel : 1;                               		// 0x0048 (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bRootMotionFromInterpCurve : 1;                   		// 0x0048 (0x0004) [0x0000000000000000] [0x00000080] 
	unsigned char                                      DoubleClickMove;                                  		// 0x004C (0x0001) [0x0000000000000000]              
	unsigned char                                      SavedPhysics;                                     		// 0x004D (0x0001) [0x0000000000000000]              
	unsigned char                                      RootMotionMode;                                   		// 0x004E (0x0001) [0x0000000000000000]              
	struct FVector                                     StartLocation;                                    		// 0x0050 (0x000C) [0x0000000000000000]              
	struct FVector                                     StartRelativeLocation;                            		// 0x005C (0x000C) [0x0000000000000000]              
	struct FVector                                     StartVelocity;                                    		// 0x0068 (0x000C) [0x0000000000000000]              
	struct FVector                                     StartFloor;                                       		// 0x0074 (0x000C) [0x0000000000000000]              
	struct FVector                                     SavedLocation;                                    		// 0x0080 (0x000C) [0x0000000000000000]              
	struct FVector                                     SavedVelocity;                                    		// 0x008C (0x000C) [0x0000000000000000]              
	struct FVector                                     SavedRelativeLocation;                            		// 0x0098 (0x000C) [0x0000000000000000]              
	struct FVector                                     RMVelocity;                                       		// 0x00A4 (0x000C) [0x0000000000000000]              
	struct FVector                                     Acceleration;                                     		// 0x00B0 (0x000C) [0x0000000000000000]              
	struct FRotator                                    Rotation;                                         		// 0x00BC (0x000C) [0x0000000000000000]              
	class AActor*                                      StartBase;                                        		// 0x00C8 (0x0004) [0x0000000000000000]              
	class AActor*                                      EndBase;                                          		// 0x00CC (0x0004) [0x0000000000000000]              
	float                                              CustomTimeDilation;                               		// 0x00D0 (0x0004) [0x0000000000000000]              
	float                                              AccelDotThreshold;                                		// 0x00D4 (0x0004) [0x0000000000000000]              
	float                                              RootMotionInterpCurrentTime;                      		// 0x00D8 (0x0004) [0x0000000000000000]              
	struct FVector                                     RootMotionInterpCurveLastValue;                   		// 0x00DC (0x000C) [0x0000000000000000]              
public:
};

// Class Engine.SaveGameSummary
// 0x0014 (0x0050 - 0x003C)
class USaveGameSummary : public UObject
{
public:
	struct FName                                       BaseLevel;                                        		// 0x003C (0x0008) [0x0000000000000000]              
	struct FString                                     Description;                                      		// 0x0044 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.ScriptViewportClient
// 0x0004 (0x0040 - 0x003C)
class UScriptViewportClient : public UObject
{
public:
	struct FPointer                                    VfTable_FViewportClient;                          		// 0x003C (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
public:
};

// Class Engine.GameViewportClient
// 0x00E8 (0x0128 - 0x0040)
class UGameViewportClient : public UScriptViewportClient
{
public:
	struct FPointer                                    VfTable_FExec;                                    		// 0x0040 (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	struct FPointer                                    Viewport;                                         		// 0x0044 (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FPointer                                    ViewportFrame;                                    		// 0x0048 (0x0004) [0x0000000000000002]              ( CPF_Const )
	TArray< class UInteraction* >                      GlobalInteractions;                               		// 0x004C (0x000C) [0x0000000000500000]              ( CPF_NeedCtorLink )
	class UClass*                                      UIControllerClass;                                		// 0x0058 (0x0004) [0x0000000000000000]              
	class UUIInteraction*                              UIController;                                     		// 0x005C (0x0004) [0x0000000000000000]              
	class UConsole*                                    ViewportConsole;                                  		// 0x0060 (0x0004) [0x0000000000000000]              
	struct FExportShowFlags_Mirror                     ShowFlags;                                        		// 0x0064 (0x0010) [0x0000000000000002]              ( CPF_Const )
	struct FString                                     LoadingMessage;                                   		// 0x0074 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     SavingMessage;                                    		// 0x0080 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     ConnectingMessage;                                		// 0x008C (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     PausedMessage;                                    		// 0x0098 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     PrecachingMessage;                                		// 0x00A4 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	unsigned long                                      bShowTitleSafeZone : 1;                           		// 0x00B0 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bDisplayingUIMouseCursor : 1;                     		// 0x00B0 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bUIMouseCaptureOverride : 1;                      		// 0x00B0 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bOverrideDiffuseAndSpecular : 1;                  		// 0x00B0 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      bIsPlayInEditorViewport : 1;                      		// 0x00B0 (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	unsigned long                                      bShowSystemMouseCursor : 1;                       		// 0x00B0 (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      bDisableWorldRendering : 1;                       		// 0x00B0 (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bDebugNoGFxUI : 1;                                		// 0x00B0 (0x0004) [0x0000000000004000] [0x00000080] ( CPF_Config )
	unsigned long                                      bUseHardwareCursorWhenWindowed : 1;               		// 0x00B0 (0x0004) [0x0000000000004000] [0x00000100] ( CPF_Config )
	struct FTitleSafeZoneArea                          TitleSafeZone;                                    		// 0x00B4 (0x0010) [0x0000000000000000]              
	TArray< struct FSplitscreenData >                  SplitscreenInfo;                                  		// 0x00C4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned char                                      DesiredSplitscreenType;                           		// 0x00D0 (0x0001) [0x0000000000000000]              
	unsigned char                                      ActiveSplitscreenType;                            		// 0x00D1 (0x0001) [0x0000000000000000]              
	unsigned char                                      Default2PSplitType;                               		// 0x00D2 (0x0001) [0x0000000000000002]              ( CPF_Const )
	unsigned char                                      Default3PSplitType;                               		// 0x00D3 (0x0001) [0x0000000000000002]              ( CPF_Const )
	struct FString                                     ProgressMessage[ 0x2 ];                           		// 0x00D4 (0x0018) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              ProgressTimeOut;                                  		// 0x00EC (0x0004) [0x0000000000000000]              
	float                                              ProgressFadeTime;                                 		// 0x00F0 (0x0004) [0x0000000000000000]              
	TArray< struct FDebugDisplayProperty >             DebugProperties;                                  		// 0x00F4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FPointer                                    ScaleformInteraction;                             		// 0x0100 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FScriptDelegate                             __HandleInputKey__Delegate;                       		// 0x0104 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __HandleInputAxis__Delegate;                      		// 0x0110 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __HandleInputChar__Delegate;                      		// 0x011C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.Selection
// 0x0024 (0x0060 - 0x003C)
class USelection : public UObject
{
public:
	unsigned char                                      UnknownData00[ 0x24 ];                            		// 0x003C (0x0024) MISSED OFFSET
public:
};

// Class Engine.ServerCommandlet
// 0x0000 (0x007C - 0x007C)
class UServerCommandlet : public UCommandlet
{
public:
public:
};

// Class Engine.Settings
// 0x0030 (0x006C - 0x003C)
class USettings : public UObject
{
public:
	TArray< struct FLocalizedStringSetting >           LocalizedSettings;                                		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FSettingsProperty >                 Properties;                                       		// 0x0048 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FLocalizedStringSettingMetaData >   LocalizedSettingsMappings;                        		// 0x0054 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FSettingsPropertyPropertyMetaData > PropertyMappings;                                 		// 0x0060 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.OnlineGameSearch
// 0x0088 (0x00F4 - 0x006C)
class UOnlineGameSearch : public USettings
{
public:
	int                                                MaxSearchResults;                                 		// 0x006C (0x0004) [0x0000000000000000]              
	struct FLocalizedStringSetting                     Query;                                            		// 0x0070 (0x000C) [0x0000000000000000]              
	unsigned long                                      bIsLanQuery : 1;                                  		// 0x007C (0x0004) [0x0000000040000000] [0x00000001] ( CPF_EditInlineNotify )
	unsigned long                                      bUsesArbitration : 1;                             		// 0x007C (0x0004) [0x0000000040000000] [0x00000002] ( CPF_EditInlineNotify )
	unsigned long                                      bIsSearchInProgress : 1;                          		// 0x007C (0x0004) [0x0000000000000002] [0x00000004] ( CPF_Const )
	class UClass*                                      GameSettingsClass;                                		// 0x0080 (0x0004) [0x0000000000000000]              
	TArray< struct FOnlineGameSearchResult >           Results;                                          		// 0x0084 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	struct FOverrideSkill                              ManualSkillOverride;                              		// 0x0090 (0x0028) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FNamedObjectProperty >              NamedProperties;                                  		// 0x00B8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FOnlineGameSearchQuery                      FilterQuery;                                      		// 0x00C4 (0x0018) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	struct FString                                     AdditionalSearchCriteria;                         		// 0x00DC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                PingBucketSize;                                   		// 0x00E8 (0x0004) [0x0000000000000000]              
	int                                                NumPingProbes;                                    		// 0x00EC (0x0004) [0x0000000000000000]              
	int                                                MaxPingBytes;                                     		// 0x00F0 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.OnlineGameSettings
// 0x0064 (0x00D0 - 0x006C)
class UOnlineGameSettings : public USettings
{
public:
	int                                                NumPublicConnections;                             		// 0x006C (0x0004) [0x0000000040000000]              ( CPF_EditInlineNotify )
	int                                                NumPrivateConnections;                            		// 0x0070 (0x0004) [0x0000000040000000]              ( CPF_EditInlineNotify )
	int                                                NumOpenPublicConnections;                         		// 0x0074 (0x0004) [0x0000000040000000]              ( CPF_EditInlineNotify )
	int                                                NumOpenPrivateConnections;                        		// 0x0078 (0x0004) [0x0000000040000000]              ( CPF_EditInlineNotify )
	struct FQWord                                      ServerNonce;                                      		// 0x007C (0x0008) [0x0000000000000002]              ( CPF_Const )
	unsigned long                                      bShouldAdvertise : 1;                             		// 0x0084 (0x0004) [0x0000000040000000] [0x00000001] ( CPF_EditInlineNotify )
	unsigned long                                      bIsLanMatch : 1;                                  		// 0x0084 (0x0004) [0x0000000040000000] [0x00000002] ( CPF_EditInlineNotify )
	unsigned long                                      bUsesStats : 1;                                   		// 0x0084 (0x0004) [0x0000000040000000] [0x00000004] ( CPF_EditInlineNotify )
	unsigned long                                      bAllowJoinInProgress : 1;                         		// 0x0084 (0x0004) [0x0000000040000000] [0x00000008] ( CPF_EditInlineNotify )
	unsigned long                                      bAllowInvites : 1;                                		// 0x0084 (0x0004) [0x0000000040000000] [0x00000010] ( CPF_EditInlineNotify )
	unsigned long                                      bUsesPresence : 1;                                		// 0x0084 (0x0004) [0x0000000040000000] [0x00000020] ( CPF_EditInlineNotify )
	unsigned long                                      bAllowJoinViaPresence : 1;                        		// 0x0084 (0x0004) [0x0000000040000000] [0x00000040] ( CPF_EditInlineNotify )
	unsigned long                                      bAllowJoinViaPresenceFriendsOnly : 1;             		// 0x0084 (0x0004) [0x0000000040000000] [0x00000080] ( CPF_EditInlineNotify )
	unsigned long                                      bUsesArbitration : 1;                             		// 0x0084 (0x0004) [0x0000000040000000] [0x00000100] ( CPF_EditInlineNotify )
	unsigned long                                      bAntiCheatProtected : 1;                          		// 0x0084 (0x0004) [0x0000000040000000] [0x00000200] ( CPF_EditInlineNotify )
	unsigned long                                      bWasFromInvite : 1;                               		// 0x0084 (0x0004) [0x0000000000000002] [0x00000400] ( CPF_Const )
	unsigned long                                      bIsDedicated : 1;                                 		// 0x0084 (0x0004) [0x0000000040000000] [0x00000800] ( CPF_EditInlineNotify )
	unsigned long                                      bHasSkillUpdateInProgress : 1;                    		// 0x0084 (0x0004) [0x0000000000000002] [0x00001000] ( CPF_Const )
	unsigned long                                      bShouldShrinkArbitratedSessions : 1;              		// 0x0084 (0x0004) [0x0000000000000002] [0x00002000] ( CPF_Const )
	unsigned long                                      bPassword : 1;                                    		// 0x0084 (0x0004) [0x0000000040000000] [0x00004000] ( CPF_EditInlineNotify )
	struct FString                                     OwningPlayerName;                                 		// 0x0088 (0x000C) [0x0000000040400000]              ( CPF_NeedCtorLink | CPF_EditInlineNotify )
	struct FUniqueNetId                                OwningPlayerId;                                   		// 0x0094 (0x0008) [0x0000000000000000]              
	int                                                PingInMs;                                         		// 0x009C (0x0004) [0x0000000040000000]              ( CPF_EditInlineNotify )
	float                                              MatchQuality;                                     		// 0x00A0 (0x0004) [0x0000000040000000]              ( CPF_EditInlineNotify )
	unsigned char                                      GameState;                                        		// 0x00A4 (0x0001) [0x0000000040000002]              ( CPF_Const | CPF_EditInlineNotify )
	int                                                BuildUniqueId;                                    		// 0x00A8 (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FString                                     CurrentMapName;                                   		// 0x00AC (0x000C) [0x0000000040400000]              ( CPF_NeedCtorLink | CPF_EditInlineNotify )
	struct FString                                     GameVer;                                          		// 0x00B8 (0x000C) [0x0000000040400000]              ( CPF_NeedCtorLink | CPF_EditInlineNotify )
	struct FString                                     GameType;                                         		// 0x00C4 (0x000C) [0x0000000040400000]              ( CPF_NeedCtorLink | CPF_EditInlineNotify )
public:
};

// Class Engine.ShaderCache
// 0x004C (0x0088 - 0x003C)
class UShaderCache : public UObject
{
public:
	unsigned char                                      UnknownData00[ 0x4C ];                            		// 0x003C (0x004C) MISSED OFFSET
public:
};

// Class Engine.ShadowMap1D
// 0x0040 (0x007C - 0x003C)
class UShadowMap1D : public UObject
{
public:
	unsigned char                                      UnknownData00[ 0x40 ];                            		// 0x003C (0x0040) MISSED OFFSET
public:
};

// Class Engine.ShadowMap2D
// 0x0030 (0x006C - 0x003C)
class UShadowMap2D : public UObject
{
public:
	class UShadowMapTexture2D*                         Texture;                                          		// 0x003C (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FVector2D                                   CoordinateScale;                                  		// 0x0040 (0x0008) [0x0000000000000002]              ( CPF_Const )
	struct FVector2D                                   CoordinateBias;                                   		// 0x0048 (0x0008) [0x0000000000000002]              ( CPF_Const )
	struct FGuid                                       LightGuid;                                        		// 0x0050 (0x0010) [0x0000000000000002]              ( CPF_Const )
	unsigned long                                      bIsShadowFactorTexture : 1;                       		// 0x0060 (0x0004) [0x0000000000000002] [0x00000001] ( CPF_Const )
	class UInstancedStaticMeshComponent*               Component;                                        		// 0x0064 (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	int                                                InstanceIndex;                                    		// 0x0068 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.SmokeTestCommandlet
// 0x0000 (0x007C - 0x007C)
class USmokeTestCommandlet : public UCommandlet
{
public:
public:
};

// Class Engine.SoundCue
// 0x0090 (0x00CC - 0x003C)
class USoundCue : public UObject
{
public:
	struct FName                                       SoundClass;                                       		// 0x003C (0x0008) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
	unsigned char                                      SoundClassName;                                   		// 0x0044 (0x0001) [0x0000000000000000]              
	unsigned long                                      bDebug : 1;                                       		// 0x0048 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bIgnoreGlobalPitchModifier : 1;                   		// 0x0048 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	class USoundNode*                                  FirstNode;                                        		// 0x004C (0x0004) [0x0000000000000000]              
	unsigned char                                      UnknownData00[ 0x3C ];                            		// 0x0050 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.SoundCue.EditorData
	float                                              MaxAudibleDistance;                               		// 0x008C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              VolumeMultiplier;                                 		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              PitchMultiplier;                                  		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Duration;                                         		// 0x0098 (0x0004) [0x0000000000000000]              
	class UFaceFXAnimSet*                              FaceFXAnimSetRef;                                 		// 0x009C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     FaceFXGroupName;                                  		// 0x00A0 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     FaceFXAnimName;                                   		// 0x00AC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                MaxConcurrentPlayCount;                           		// 0x00B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                CurrentPlayCount;                                 		// 0x00BC (0x0004) [0x0000000000202002]              ( CPF_Const | CPF_Transient )
	float                                              SndDuplicateFadeoutTime;                          		// 0x00C0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       SoundGroup;                                       		// 0x00C4 (0x0008) [0x0000000020000000]              ( CPF_Deprecated )
public:
};

// Class Engine.SpeechRecognition
// 0x0088 (0x00C4 - 0x003C)
class USpeechRecognition : public UObject
{
public:
	struct FString                                     Language;                                         		// 0x003C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              ConfidenceThreshhold;                             		// 0x0048 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FRecogVocabulary >                  Vocabularies;                                     		// 0x004C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< unsigned char >                            VoiceData;                                        		// 0x0058 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< unsigned char >                            WorkingVoiceData;                                 		// 0x0064 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< unsigned char >                            UserData;                                         		// 0x0070 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FRecogUserData                              InstanceData[ 0x4 ];                              		// 0x007C (0x0040) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned long                                      bDirty : 1;                                       		// 0x00BC (0x0004) [0x0000000000202000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bInitialised : 1;                                 		// 0x00BC (0x0004) [0x0000000000202000] [0x00000002] ( CPF_Transient )
	struct FPointer                                    FnxVoiceData;                                     		// 0x00C0 (0x0004) [0x0000000000201002]              ( CPF_Const | CPF_Native )
public:
};

// Class Engine.StaticMesh
// 0x0164 (0x01A0 - 0x003C)
class UStaticMesh : public UObject
{
public:
	unsigned char                                      UnknownData00[ 0xC ];                             		// 0x003C (0x000C) MISSED OFFSET
	TArray< struct FStaticMeshLODInfo >                LODInfo;                                          		// 0x0048 (0x000C) [0x0000000000001041]              ( CPF_Edit | CPF_EditConstArray | CPF_Native )
	float                                              LODDistanceRatio;                                 		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LODMaxRange;                                      		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      UnknownData01[ 0x10 ];                            		// 0x005C (0x0010) MISSED OFFSET
	int                                                LightMapResolution;                               		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                LightMapCoordinateIndex;                          		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      UnknownData02[ 0x50 ];                            		// 0x0074 (0x0050) MISSED OFFSET
	class URB_BodySetup*                               BodySetup;                                        		// 0x00C4 (0x0004) [0x0000000004000001]              ( CPF_Edit | CPF_EditInline )
	unsigned char                                      UnknownData03[ 0x34 ];                            		// 0x00C8 (0x0034) MISSED OFFSET
	unsigned long                                      UseSimpleLineCollision : 1;                       		// 0x00FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      UseSimpleBoxCollision : 1;                        		// 0x0100 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      UseSimpleRigidBodyCollision : 1;                  		// 0x0104 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      UseFullPrecisionUVs : 1;                          		// 0x0108 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bUsedForInstancing : 1;                           		// 0x010C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	int                                                ConsolePreallocateInstanceCount;                  		// 0x0110 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bUseMaximumStreamingTexelRatio : 1;               		// 0x0114 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bPartitionForEdgeGeometry : 1;                    		// 0x0118 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bCanBecomeDynamic : 1;                            		// 0x011C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned char                                      UnknownData04[ 0x4 ];                             		// 0x0120 (0x0004) MISSED OFFSET
	unsigned long                                      bStripComplexCollisionForConsole : 1;             		// 0x0124 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bPerLODStaticLightingForInstancing : 1;           		// 0x0128 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              StreamingDistanceMultiplier;                      		// 0x012C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      UnknownData05[ 0x20 ];                            		// 0x0130 (0x0020) MISSED OFFSET
	class UInstancedFoliageSettings*                   FoliageDefaultSettings;                           		// 0x0150 (0x0004) [0x0000000004000001]              ( CPF_Edit | CPF_EditInline )
	struct FString                                     SourceFilePath;                                   		// 0x0154 (0x000C) [0x0000000000420001]              ( CPF_Edit | CPF_EditConst | CPF_NeedCtorLink )
	struct FString                                     SourceFileTimestamp;                              		// 0x0160 (0x000C) [0x0000000000420001]              ( CPF_Edit | CPF_EditConst | CPF_NeedCtorLink )
	unsigned long                                      bExportToBeast : 1;                               		// 0x016C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned char                                      UnknownData06[ 0x30 ];                            		// 0x0170 (0x0030) MISSED OFFSET
public:
};

// Class Engine.Surface
// 0x0000 (0x003C - 0x003C)
class USurface : public UObject
{
public:
public:
};

// Class Engine.MaterialInterface
// 0x0158 (0x0194 - 0x003C)
class UMaterialInterface : public USurface
{
public:
	struct FRenderCommandFence_Mirror                  ParentRefFence;                                   		// 0x003C (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FLightmassMaterialInterfaceSettings         LightmassSettings;                                		// 0x0040 (0x001C) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     PreviewMesh;                                      		// 0x005C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FGuid                                       LightingGuid;                                     		// 0x0068 (0x0010) [0x0000000000000002]              ( CPF_Const )
	unsigned long                                      bAutoFlattenMobile : 1;                           		// 0x0078 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bAutoFlattenMobileNormalTexture : 1;              		// 0x0078 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bMobileAllowFog : 1;                              		// 0x0078 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bUseMobileSpecular : 1;                           		// 0x0078 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bUseMobileVertexSpecular : 1;                     		// 0x0078 (0x0004) [0x0000000020000000] [0x00000010] ( CPF_Deprecated )
	unsigned long                                      bUseMobilePixelSpecular : 1;                      		// 0x0078 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bUseMobileBumpOffset : 1;                         		// 0x0078 (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bLockColorBlending : 1;                           		// 0x0078 (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bUseMobileUniformColorMultiply : 1;               		// 0x0078 (0x0004) [0x0000000000000001] [0x00000100] ( CPF_Edit )
	unsigned long                                      bUseMobileVertexColorMultiply : 1;                		// 0x0078 (0x0004) [0x0000000000000001] [0x00000200] ( CPF_Edit )
	unsigned long                                      bUseMobileDetailNormal : 1;                       		// 0x0078 (0x0004) [0x0000000000000001] [0x00000400] ( CPF_Edit )
	unsigned long                                      bBaseTextureTransformed : 1;                      		// 0x0078 (0x0004) [0x0000000000000001] [0x00000800] ( CPF_Edit )
	unsigned long                                      bEmissiveTextureTransformed : 1;                  		// 0x0078 (0x0004) [0x0000000000000001] [0x00001000] ( CPF_Edit )
	unsigned long                                      bNormalTextureTransformed : 1;                    		// 0x0078 (0x0004) [0x0000000000000001] [0x00002000] ( CPF_Edit )
	unsigned long                                      bMaskTextureTransformed : 1;                      		// 0x0078 (0x0004) [0x0000000000000001] [0x00004000] ( CPF_Edit )
	unsigned long                                      bDetailTextureTransformed : 1;                    		// 0x0078 (0x0004) [0x0000000000000001] [0x00008000] ( CPF_Edit )
	unsigned long                                      bUseMobileWaveVertexMovement : 1;                 		// 0x0078 (0x0004) [0x0000000000000001] [0x00010000] ( CPF_Edit )
	unsigned long                                      bMobileEnableBounceLight : 1;                     		// 0x0078 (0x0004) [0x0000000000000001] [0x00020000] ( CPF_Edit )
	struct FColor                                      FlattenBackgroundColor;                           		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UTexture*                                    MobileBaseTexture;                                		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UTexture*                                    FlattenedTexture;                                 		// 0x0084 (0x0004) [0x0000000020200000]              ( CPF_Deprecated )
	unsigned char                                      MobileBaseTextureTexCoordsSource;                 		// 0x0088 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      MobileAmbientOcclusionSource;                     		// 0x0089 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      MobileSpecularMask;                               		// 0x008A (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      MobileEmissiveColorSource;                        		// 0x008B (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      MobileEmissiveMaskSource;                         		// 0x008C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      MobileEnvironmentMaskSource;                      		// 0x008D (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      MobileEnvironmentBlendMode;                       		// 0x008E (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      MobileRimLightingMaskSource;                      		// 0x008F (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      MobileMaskTextureTexCoordsSource;                 		// 0x0090 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      MobileAlphaValueSource;                           		// 0x0091 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      MobileDetailTextureTexCoordsSource;               		// 0x0092 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      MobileTextureBlendFactorSource;                   		// 0x0093 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	class UTexture*                                    MobileNormalTexture;                              		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearColor                                MobileSpecularColor;                              		// 0x0098 (0x0010) [0x0000000000000001]              ( CPF_Edit )
	float                                              MobileSpecularPower;                              		// 0x00A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UTexture*                                    MobileEmissiveTexture;                            		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearColor                                MobileEmissiveColor;                              		// 0x00B0 (0x0010) [0x0000000000000001]              ( CPF_Edit )
	class UTexture*                                    MobileEnvironmentTexture;                         		// 0x00C0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MobileEnvironmentAmount;                          		// 0x00C4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearColor                                MobileEnvironmentColor;                           		// 0x00C8 (0x0010) [0x0000000000000001]              ( CPF_Edit )
	float                                              MobileEnvironmentFresnelAmount;                   		// 0x00D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MobileEnvironmentFresnelExponent;                 		// 0x00DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MobileRimLightingStrength;                        		// 0x00E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MobileRimLightingExponent;                        		// 0x00E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearColor                                MobileRimLightingColor;                           		// 0x00E8 (0x0010) [0x0000000000000001]              ( CPF_Edit )
	float                                              MobileBumpOffsetReferencePlane;                   		// 0x00F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MobileBumpOffsetHeightRatio;                      		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UTexture*                                    MobileMaskTexture;                                		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UTexture*                                    MobileDetailTexture;                              		// 0x0104 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UTexture*                                    MobileDetailTexture2;                             		// 0x0108 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UTexture*                                    MobileDetailTexture3;                             		// 0x010C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearColor                                DefaultUniformColor;                              		// 0x0110 (0x0010) [0x0000000000000001]              ( CPF_Edit )
	float                                              TransformCenterX;                                 		// 0x0120 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TransformCenterY;                                 		// 0x0124 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              PannerSpeedX;                                     		// 0x0128 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              PannerSpeedY;                                     		// 0x012C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RotateSpeed;                                      		// 0x0130 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FixedScaleX;                                      		// 0x0134 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FixedScaleY;                                      		// 0x0138 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SineScaleX;                                       		// 0x013C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SineScaleY;                                       		// 0x0140 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SineScaleFrequencyMultipler;                      		// 0x0144 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FixedOffsetX;                                     		// 0x0148 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FixedOffsetY;                                     		// 0x014C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MobileTangentVertexFrequencyMultiplier;           		// 0x0150 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MobileVerticalFrequencyMultiplier;                		// 0x0154 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MobileMaxVertexMovementAmplitude;                 		// 0x0158 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MobileSwayFrequencyMultiplier;                    		// 0x015C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MobileSwayMaxAngle;                               		// 0x0160 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     MobileDirectionalLightDirection;                  		// 0x0164 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              MobileDirectionalLightBrightness;                 		// 0x0170 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      MobileDirectionalLightColor;                      		// 0x0174 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     MobileBounceLightDirection;                       		// 0x0178 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              MobileBounceLightBrightness;                      		// 0x0184 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      MobileBounceLightColor;                           		// 0x0188 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MobileSkyLightBrightness;                         		// 0x018C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      MobileSkyLightColor;                              		// 0x0190 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.RB_BodySetup
// 0x004C (0x00CC - 0x0080)
class URB_BodySetup : public UKMeshProps
{
public:
	unsigned char                                      SleepFamily;                                      		// 0x0080 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       BoneName;                                         		// 0x0084 (0x0008) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
	unsigned long                                      bFixed : 1;                                       		// 0x008C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bNoCollision : 1;                                 		// 0x008C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bBlockZeroExtent : 1;                             		// 0x008C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bBlockNonZeroExtent : 1;                          		// 0x008C (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bEnableContinuousCollisionDetection : 1;          		// 0x008C (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bAlwaysFullAnimWeight : 1;                        		// 0x008C (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bConsiderForBounds : 1;                           		// 0x008C (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bUseTrianglesForPenetratingZeroExtentLineCheck : 1;		// 0x008C (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	class UPhysicalMaterial*                           PhysMaterial;                                     		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MassScale;                                        		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FPointer >                          CollisionGeom;                                    		// 0x0098 (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< struct FVector >                           CollisionGeomScale3D;                             		// 0x00A4 (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< struct FVector >                           PreCachedPhysScale;                               		// 0x00B0 (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
	TArray< struct FKCachedConvexData >                PreCachedPhysData;                                		// 0x00BC (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	int                                                PreCachedPhysDataVersion;                         		// 0x00C8 (0x0004) [0x0000000000000002]              ( CPF_Const )
public:
};

// Class Engine.InstancedFoliageSettings
// 0x0064 (0x00A0 - 0x003C)
class UInstancedFoliageSettings : public UObject
{
public:
	float                                              Density;                                          		// 0x003C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Radius;                                           		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ScaleMinX;                                        		// 0x0044 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ScaleMinY;                                        		// 0x0048 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ScaleMinZ;                                        		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ScaleMaxX;                                        		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ScaleMaxY;                                        		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ScaleMaxZ;                                        		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      LockScaleX : 1;                                   		// 0x005C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      LockScaleY : 1;                                   		// 0x005C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      LockScaleZ : 1;                                   		// 0x005C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      AlignToNormal : 1;                                		// 0x005C (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      RandomYaw : 1;                                    		// 0x005C (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      UniformScale : 1;                                 		// 0x005C (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      ReapplyDensity : 1;                               		// 0x005C (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      ReapplyRadius : 1;                                		// 0x005C (0x0004) [0x0000000000000000] [0x00000080] 
	unsigned long                                      ReapplyAlignToNormal : 1;                         		// 0x005C (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      ReapplyRandomYaw : 1;                             		// 0x005C (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      ReapplyScaleX : 1;                                		// 0x005C (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      ReapplyScaleY : 1;                                		// 0x005C (0x0004) [0x0000000000000000] [0x00000800] 
	unsigned long                                      ReapplyScaleZ : 1;                                		// 0x005C (0x0004) [0x0000000000000000] [0x00001000] 
	unsigned long                                      ReapplyRandomPitchAngle : 1;                      		// 0x005C (0x0004) [0x0000000000000000] [0x00002000] 
	unsigned long                                      ReapplyGroundSlope : 1;                           		// 0x005C (0x0004) [0x0000000000000000] [0x00004000] 
	unsigned long                                      ReapplyHeight : 1;                                		// 0x005C (0x0004) [0x0000000000000000] [0x00008000] 
	unsigned long                                      ReapplyLandscapeLayer : 1;                        		// 0x005C (0x0004) [0x0000000000000000] [0x00010000] 
	unsigned long                                      ReapplyZOffset : 1;                               		// 0x005C (0x0004) [0x0000000000000000] [0x00020000] 
	unsigned long                                      IsSelected : 1;                                   		// 0x005C (0x0004) [0x0000000000000000] [0x00040000] 
	unsigned long                                      ShowNothing : 1;                                  		// 0x005C (0x0004) [0x0000000000000000] [0x00080000] 
	unsigned long                                      ShowPaintSettings : 1;                            		// 0x005C (0x0004) [0x0000000000000000] [0x00100000] 
	unsigned long                                      ShowInstanceSettings : 1;                         		// 0x005C (0x0004) [0x0000000000000000] [0x00200000] 
	float                                              AlignMaxAngle;                                    		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RandomPitchAngle;                                 		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              GroundSlope;                                      		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              HeightMin;                                        		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              HeightMax;                                        		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       LandscapeLayer;                                   		// 0x0074 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              ZOffsetMin;                                       		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ZOffsetMax;                                       		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                MaxInstancesPerCluster;                           		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxClusterRadius;                                 		// 0x0088 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ReapplyDensityAmount;                             		// 0x008C (0x0004) [0x0000000000000000]              
	int                                                StartCullDistance;                                		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                EndCullDistance;                                  		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      CullOption;                                       		// 0x0098 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	int                                                DisplayOrder;                                     		// 0x009C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.FracturedStaticMesh
// 0x00D0 (0x0270 - 0x01A0)
class UFracturedStaticMesh : public UStaticMesh
{
public:
	class UStaticMesh*                                 SourceCoreMesh;                                   		// 0x01A0 (0x0004) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
	float                                              CoreMeshScale;                                    		// 0x01A4 (0x0004) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
	unsigned char                                      UnknownData00[ 0x30 ];                            		// 0x01A8 (0x0030) MISSED OFFSET
	unsigned long                                      bSliceUsingCoreCollision : 1;                     		// 0x01D8 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	class UParticleSystem*                             FragmentDestroyEffect;                            		// 0x01DC (0x0004) [0x0000000000000000]              
	TArray< class UParticleSystem* >                   FragmentDestroyEffects;                           		// 0x01E0 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              FragmentDestroyEffectScale;                       		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FragmentHealthScale;                              		// 0x01F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FragmentMinHealth;                                		// 0x01F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FragmentMaxHealth;                                		// 0x01F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bUniformFragmentHealth : 1;                       		// 0x01FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              ChunkLinVel;                                      		// 0x0200 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ChunkAngVel;                                      		// 0x0204 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ChunkLinHorizontalScale;                          		// 0x0208 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ExplosionVelScale;                                		// 0x020C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bCompositeChunksExplodeOnImpact : 1;              		// 0x0210 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bFixIsolatedChunks : 1;                           		// 0x0214 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bAlwaysBreakOffIsolatedIslands : 1;               		// 0x0218 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bSpawnPhysicsChunks : 1;                          		// 0x021C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              ChanceOfPhysicsChunk;                             		// 0x0220 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ExplosionChanceOfPhysicsChunk;                    		// 0x0224 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              NormalPhysicsChunkScaleMin;                       		// 0x0228 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              NormalPhysicsChunkScaleMax;                       		// 0x022C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ExplosionPhysicsChunkScaleMin;                    		// 0x0230 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ExplosionPhysicsChunkScaleMax;                    		// 0x0234 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MinConnectionSupportArea;                         		// 0x0238 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          DynamicOutsideMaterial;                           		// 0x023C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          LoseChunkOutsideMaterial;                         		// 0x0240 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                OutsideMaterialIndex;                             		// 0x0244 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      UnknownData01[ 0x28 ];                            		// 0x0248 (0x0028) MISSED OFFSET
public:
};

// Class Engine.ParticleSystem
// 0x00FC (0x0138 - 0x003C)
class UParticleSystem : public UObject
{
public:
	unsigned char                                      SystemUpdateMode;                                 		// 0x003C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      LODMethod;                                        		// 0x003D (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      OcclusionBoundsMethod;                            		// 0x003E (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              UpdateTime_FPS;                                   		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              UpdateTime_Delta;                                 		// 0x0044 (0x0004) [0x0000000000000000]              
	float                                              WarmupTime;                                       		// 0x0048 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WarmupTickRate;                                   		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class UParticleEmitter* >                  Emitters;                                         		// 0x0050 (0x000C) [0x0000000004400008]              ( CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
	class UParticleSystemComponent*                    PreviewComponent;                                 		// 0x005C (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	struct FRotator                                    ThumbnailAngle;                                   		// 0x0060 (0x000C) [0x0000000000000000]              
	float                                              ThumbnailDistance;                                		// 0x006C (0x0004) [0x0000000000000000]              
	float                                              ThumbnailWarmup;                                  		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bLit : 1;                                         		// 0x0074 (0x0004) [0x0000000020000002] [0x00000001] ( CPF_Const | CPF_Deprecated )
	unsigned long                                      bOrientZAxisTowardCamera : 1;                     		// 0x0074 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bRegenerateLODDuplicate : 1;                      		// 0x0074 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bUseFixedRelativeBoundingBox : 1;                 		// 0x0074 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bShouldResetPeakCounts : 1;                       		// 0x0074 (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bHasPhysics : 1;                                  		// 0x0074 (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      bUseRealtimeThumbnail : 1;                        		// 0x0074 (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      ThumbnailImageOutOfDate : 1;                      		// 0x0074 (0x0004) [0x0000000000000000] [0x00000080] 
	unsigned long                                      bSkipSpawnCountCheck : 1;                         		// 0x0074 (0x0004) [0x0000000000000001] [0x00000100] ( CPF_Edit )
	unsigned long                                      bUseDelayRange : 1;                               		// 0x0074 (0x0004) [0x0000000000000001] [0x00000200] ( CPF_Edit )
	unsigned long                                      bUseMobilePointSprites : 1;                       		// 0x0074 (0x0004) [0x0000000000000001] [0x00000400] ( CPF_Edit )
	class UInterpCurveEdSetup*                         CurveEdSetup;                                     		// 0x0078 (0x0004) [0x0000000000000008]              ( CPF_ExportObject )
	float                                              LODDistanceCheckTime;                             		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< float >                                    LODDistances;                                     		// 0x0080 (0x000C) [0x0000000000400041]              ( CPF_Edit | CPF_EditConstArray | CPF_NeedCtorLink )
	int                                                EditorLODSetting;                                 		// 0x008C (0x0004) [0x0000000000000000]              
	TArray< struct FParticleSystemLOD >                LODSettings;                                      		// 0x0090 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FBox                                        FixedRelativeBoundingBox;                         		// 0x009C (0x001C) [0x0000000000000001]              ( CPF_Edit )
	float                                              SecondsBeforeInactive;                            		// 0x00B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     FloorMesh;                                        		// 0x00BC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FVector                                     FloorPosition;                                    		// 0x00C8 (0x000C) [0x0000000000000000]              
	struct FRotator                                    FloorRotation;                                    		// 0x00D4 (0x000C) [0x0000000000000000]              
	float                                              FloorScale;                                       		// 0x00E0 (0x0004) [0x0000000000000000]              
	struct FVector                                     FloorScale3D;                                     		// 0x00E4 (0x000C) [0x0000000000000000]              
	struct FColor                                      BackgroundColor;                                  		// 0x00F0 (0x0004) [0x0000000000000000]              
	class UTexture2D*                                  ThumbnailImage;                                   		// 0x00F4 (0x0004) [0x0000000000000000]              
	float                                              Delay;                                            		// 0x00F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DelayLow;                                         		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     MacroUVPosition;                                  		// 0x0100 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              MacroUVRadius;                                    		// 0x010C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FBox                                        CustomOcclusionBounds;                            		// 0x0110 (0x001C) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FLODSoloTrack >                     SoloTracking;                                     		// 0x012C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class Engine.Texture
// 0x00B4 (0x00F0 - 0x003C)
class UTexture : public USurface
{
public:
	unsigned long                                      SRGB : 1;                                         		// 0x003C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      RGBE : 1;                                         		// 0x003C (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bIsSourceArtUncompressed : 1;                     		// 0x003C (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      CompressionNoAlpha : 1;                           		// 0x003C (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      CompressionNone : 1;                              		// 0x003C (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      CompressionNoMipmaps : 1;                         		// 0x003C (0x0004) [0x0000000020000000] [0x00000020] ( CPF_Deprecated )
	unsigned long                                      CompressionFullDynamicRange : 1;                  		// 0x003C (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      DeferCompression : 1;                             		// 0x003C (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      NeverStream : 1;                                  		// 0x003C (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      bDitherMipMapAlpha : 1;                           		// 0x003C (0x0004) [0x0000000000000001] [0x00000200] ( CPF_Edit )
	unsigned long                                      bPreserveBorderR : 1;                             		// 0x003C (0x0004) [0x0000000000000001] [0x00000400] ( CPF_Edit )
	unsigned long                                      bPreserveBorderG : 1;                             		// 0x003C (0x0004) [0x0000000000000001] [0x00000800] ( CPF_Edit )
	unsigned long                                      bPreserveBorderB : 1;                             		// 0x003C (0x0004) [0x0000000000000001] [0x00001000] ( CPF_Edit )
	unsigned long                                      bPreserveBorderA : 1;                             		// 0x003C (0x0004) [0x0000000000000001] [0x00002000] ( CPF_Edit )
	unsigned long                                      bNoTiling : 1;                                    		// 0x003C (0x0004) [0x0000000000000002] [0x00004000] ( CPF_Const )
	unsigned long                                      bForcePVRTC4 : 1;                                 		// 0x003C (0x0004) [0x0000000000000001] [0x00008000] ( CPF_Edit )
	unsigned long                                      bAsyncResourceReleaseHasBeenStarted : 1;          		// 0x003C (0x0004) [0x0000000000002002] [0x00010000] ( CPF_Const | CPF_Transient )
	unsigned long                                      bUseCinematicMipLevels : 1;                       		// 0x003C (0x0004) [0x0000000000002002] [0x00020000] ( CPF_Const | CPF_Transient )
	float                                              UnpackMin[ 0x4 ];                                 		// 0x0040 (0x0010) [0x0000000000000001]              ( CPF_Edit )
	float                                              UnpackMax[ 0x4 ];                                 		// 0x0050 (0x0010) [0x0000000000000001]              ( CPF_Edit )
	struct FUntypedBulkData_Mirror                     SourceArt;                                        		// 0x0060 (0x0034) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	unsigned char                                      CompressionSettings;                              		// 0x0094 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      Filter;                                           		// 0x0095 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      LODGroup;                                         		// 0x0096 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      MipGenSettings;                                   		// 0x0097 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	int                                                LODBias;                                          		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                CachedCombinedLODBias;                            		// 0x009C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                NumCinematicMipLevels;                            		// 0x00A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     SourceFilePath;                                   		// 0x00A4 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     SourceFileTimestamp;                              		// 0x00B0 (0x000C) [0x0000000000420001]              ( CPF_Edit | CPF_EditConst | CPF_NeedCtorLink )
	struct FPointer                                    Resource;                                         		// 0x00BC (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FGuid                                       LightingGuid;                                     		// 0x00C0 (0x0010) [0x0000000000000002]              ( CPF_Const )
	float                                              AdjustBrightness;                                 		// 0x00D0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AdjustBrightnessCurve;                            		// 0x00D4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AdjustVibrance;                                   		// 0x00D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AdjustSaturation;                                 		// 0x00DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AdjustRGBCurve;                                   		// 0x00E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AdjustHue;                                        		// 0x00E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                InternalFormatLODBias;                            		// 0x00E8 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                bUseAsyncCompression;                             		// 0x00EC (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
public:
};

// Class Engine.Texture2D
// 0x00C8 (0x01B8 - 0x00F0)
class UTexture2D : public UTexture
{
public:
	struct FIndirectArray_Mirror                       Mips;                                             		// 0x00F0 (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FIndirectArray_Mirror                       CachedPVRTCMips;                                  		// 0x00FC (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	int                                                SizeX;                                            		// 0x0108 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                SizeY;                                            		// 0x010C (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                OriginalSizeX;                                    		// 0x0110 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                OriginalSizeY;                                    		// 0x0114 (0x0004) [0x0000000000000002]              ( CPF_Const )
	unsigned char                                      Format;                                           		// 0x0118 (0x0001) [0x0000000000000002]              ( CPF_Const )
	unsigned char                                      AddressX;                                         		// 0x0119 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      AddressY;                                         		// 0x011A (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bIsStreamable : 1;                                		// 0x011C (0x0004) [0x0000000000002002] [0x00000001] ( CPF_Const | CPF_Transient )
	unsigned long                                      bHasCancelationPending : 1;                       		// 0x011C (0x0004) [0x0000000000002002] [0x00000002] ( CPF_Const | CPF_Transient )
	unsigned long                                      bHasBeenLoadedFromPersistentArchive : 1;          		// 0x011C (0x0004) [0x0000000000002002] [0x00000004] ( CPF_Const | CPF_Transient )
	unsigned long                                      bForceMiplevelsToBeResident : 1;                  		// 0x011C (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      bGlobalForceMipLevelsToBeResident : 1;            		// 0x011C (0x0004) [0x0000000000000003] [0x00000010] ( CPF_Edit | CPF_Const )
	unsigned long                                      bIsCompositingSource : 1;                         		// 0x011C (0x0004) [0x0000000000000003] [0x00000020] ( CPF_Edit | CPF_Const )
	unsigned long                                      bHasBeenPaintedInEditor : 1;                      		// 0x011C (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bPrePostLoadAllMips : 1;                          		// 0x011C (0x0004) [0x0000000000000002] [0x00000080] ( CPF_Const )
	int                                                ForceMiplevelsToBeResident;                       		// 0x0120 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              ForceMipLevelsToBeResidentTimestamp;              		// 0x0124 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FName                                       TextureFileCacheName;                             		// 0x0128 (0x0008) [0x0000000000000000]              
	struct FGuid                                       TextureFileCacheGuid;                             		// 0x0130 (0x0010) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	int                                                RequestedMips;                                    		// 0x0140 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                ResidentMips;                                     		// 0x0144 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                MipsToRemoveOnCompress;                           		// 0x0148 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FThreadSafeCounter                          PendingMipChangeRequestStatus;                    		// 0x014C (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< unsigned char >                            SystemMemoryData;                                 		// 0x0150 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FTextureLinkedListMirror                    StreamableTexturesLink;                           		// 0x015C (0x000C) [0x0000000001201002]              ( CPF_Const | CPF_Native )
	int                                                StreamingIndex;                                   		// 0x0168 (0x0004) [0x0000000000202002]              ( CPF_Const | CPF_Transient )
	int                                                MipTailBaseIdx;                                   		// 0x016C (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FPointer                                    ResourceMem;                                      		// 0x0170 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	int                                                FirstResourceMemMip;                              		// 0x0174 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                NumAvailableMips;                                 		// 0x0178 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              Timer;                                            		// 0x017C (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FPointer                                    PreMipData[ 0xE ];                                		// 0x0180 (0x0038) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.LightMapTexture2D
// 0x0004 (0x01BC - 0x01B8)
class ULightMapTexture2D : public UTexture2D
{
public:
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x01B8 (0x0004) MISSED OFFSET
public:
};

// Class Engine.ShadowMapTexture2D
// 0x0004 (0x01BC - 0x01B8)
class UShadowMapTexture2D : public UTexture2D
{
public:
	int                                                ShadowmapFlags;                                   		// 0x01B8 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.TranslationContext
// 0x000C (0x0048 - 0x003C)
class UTranslationContext : public UObject
{
public:
	TArray< class UTranslatorTag* >                    TranslatorTags;                                   		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.TranslatorTag
// 0x0008 (0x0044 - 0x003C)
class UTranslatorTag : public UObject
{
public:
	struct FName                                       Tag;                                              		// 0x003C (0x0008) [0x0000000000000000]              
public:
};

// Class Engine.StringsTag
// 0x0000 (0x0044 - 0x0044)
class UStringsTag : public UTranslatorTag
{
public:
public:
};

// Class Engine.UIRoot
// 0x000C (0x0048 - 0x003C)
class UUIRoot : public UObject
{
public:
	TArray< struct FString >                           BadCapsLocContexts;                               		// 0x003C (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
public:
};

// Class Engine.Interaction
// 0x0030 (0x0078 - 0x0048)
class UInteraction : public UUIRoot
{
public:
	struct FScriptDelegate                             __OnReceivedNativeInputKey__Delegate;             		// 0x0048 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnReceivedNativeInputAxis__Delegate;            		// 0x0054 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnReceivedNativeInputChar__Delegate;            		// 0x0060 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnInitialize__Delegate;                         		// 0x006C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.UIInteraction
// 0x00F0 (0x0168 - 0x0078)
class UUIInteraction : public UInteraction
{
public:
	struct FPointer                                    VfTable_FExec;                                    		// 0x0078 (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	struct FPointer                                    VfTable_FGlobalDataStoreClientManager;            		// 0x007C (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	struct FPointer                                    VfTable_FCallbackEventDevice;                     		// 0x0080 (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	class UUIManager*                                  UIManager;                                        		// 0x0084 (0x0004) [0x0000000000000000]              
	class UClass*                                      UIManagerClass;                                   		// 0x0088 (0x0004) [0x0000000000000000]              
	class UClass*                                      SceneClientClass;                                 		// 0x008C (0x0004) [0x0000000000000000]              
	class UGameUISceneClient*                          SceneClient;                                      		// 0x0090 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	TArray< struct FName >                             SupportedDoubleClickKeys;                         		// 0x0094 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UDataStoreClient*                            DataStoreManager;                                 		// 0x00A0 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	unsigned long                                      bProcessInput : 1;                                		// 0x00A4 (0x0004) [0x0000000000002002] [0x00000001] ( CPF_Const | CPF_Transient )
	float                                              UIJoystickDeadZone;                               		// 0x00A8 (0x0004) [0x0000000000004002]              ( CPF_Const | CPF_Config )
	float                                              UIAxisMultiplier;                                 		// 0x00AC (0x0004) [0x0000000000004002]              ( CPF_Const | CPF_Config )
	float                                              AxisRepeatDelay;                                  		// 0x00B0 (0x0004) [0x0000000000004002]              ( CPF_Const | CPF_Config )
	float                                              MouseButtonRepeatDelay;                           		// 0x00B4 (0x0004) [0x0000000000004002]              ( CPF_Const | CPF_Config )
	float                                              DoubleClickTriggerSeconds;                        		// 0x00B8 (0x0004) [0x0000000000004002]              ( CPF_Const | CPF_Config )
	int                                                DoubleClickPixelTolerance;                        		// 0x00BC (0x0004) [0x0000000000004002]              ( CPF_Const | CPF_Config )
	struct FUIKeyRepeatData                            MouseButtonRepeatInfo;                            		// 0x00C0 (0x0010) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	TArray< struct FUIAxisEmulationDefinition >        ConfiguredAxisEmulationDefinitions;               		// 0x00D0 (0x000C) [0x0000000000404002]              ( CPF_Const | CPF_Config | CPF_NeedCtorLink )
	unsigned char                                      UnknownData00[ 0x3C ];                            		// 0x00DC (0x003C) UNKNOWN PROPERTY: MapProperty Engine.UIInteraction.AxisEmulationDefinitions
	struct FUIAxisEmulationData                        AxisInputEmulation[ 0x4 ];                        		// 0x0118 (0x0050) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.UIManager
// 0x0000 (0x003C - 0x003C)
class UUIManager : public UObject
{
public:
public:
};

// Class Engine.WaveFormBase
// 0x0004 (0x0040 - 0x003C)
class UWaveFormBase : public UObject
{
public:
	class UForceFeedbackWaveform*                      TheWaveForm;                                      		// 0x003C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.World
// 0x02A4 (0x02E0 - 0x003C)
class UWorld : public UObject
{
public:
	unsigned char                                      UnknownData00[ 0x2A4 ];                           		// 0x003C (0x02A4) MISSED OFFSET
public:
};

// Class Engine.EnvironmentVolume
// 0x000C (0x0220 - 0x0214)
class AEnvironmentVolume : public AVolume
{
public:
	struct FPointer                                    VfTable_IInterface_NavMeshPathObstacle;           		// 0x0214 (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	struct FPointer                                    VfTable_IInterface_NavMeshPathObject;             		// 0x0218 (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	unsigned long                                      bSplitNavMesh : 1;                                		// 0x021C (0x0004) [0x0000000000002002] [0x00000001] ( CPF_Const | CPF_Transient )
public:
};

// Class Engine.TestSplittingVolume
// 0x0004 (0x0218 - 0x0214)
class ATestSplittingVolume : public AVolume
{
public:
	struct FPointer                                    VfTable_IInterface_NavMeshPathObject;             		// 0x0214 (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
public:
};

// Class Engine.AIController
// 0x0018 (0x03B8 - 0x03A0)
class AAIController : public AController
{
public:
	unsigned long                                      bAdjustFromWalls : 1;                             		// 0x03A0 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bReverseScriptedRoute : 1;                        		// 0x03A0 (0x0004) [0x0000000000000000] [0x00000002] 
	float                                              Skill;                                            		// 0x03A4 (0x0004) [0x0000000000000000]              
	class AActor*                                      ScriptedMoveTarget;                               		// 0x03A8 (0x0004) [0x0000000000000000]              
	class ARoute*                                      ScriptedRoute;                                    		// 0x03AC (0x0004) [0x0000000000000000]              
	int                                                ScriptedRouteIndex;                               		// 0x03B0 (0x0004) [0x0000000000000000]              
	class AActor*                                      ScriptedFocus;                                    		// 0x03B4 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.CrowdAgentBase
// 0x0004 (0x01DC - 0x01D8)
class ACrowdAgentBase : public AActor
{
public:
	struct FPointer                                    VfTable_IInterface_NavigationHandle;              		// 0x01D8 (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
public:
};

// Class Engine.CrowdPopulationManagerBase
// 0x0000 (0x01D8 - 0x01D8)
class ACrowdPopulationManagerBase : public AActor
{
public:
public:
};

// Class Engine.PathTargetPoint
// 0x0000 (0x01DC - 0x01DC)
class APathTargetPoint : public AKeypoint
{
public:
public:
};

// Class Engine.NavMeshObstacle
// 0x0008 (0x01E0 - 0x01D8)
class ANavMeshObstacle : public AActor
{
public:
	struct FPointer                                    VfTable_IInterface_NavMeshPathObstacle;           		// 0x01D8 (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	unsigned long                                      bEnabled : 1;                                     		// 0x01DC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bPreserveInternalGeo : 1;                         		// 0x01DC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
public:
};

// Class Engine.PylonSeed
// 0x0004 (0x01DC - 0x01D8)
class APylonSeed : public AActor
{
public:
	struct FPointer                                    VfTable_IInterface_NavMeshPathObject;             		// 0x01D8 (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
public:
};

// Class Engine.CoverGroupRenderingComponent
// 0x0000 (0x01E4 - 0x01E4)
class UCoverGroupRenderingComponent : public UPrimitiveComponent
{
public:
public:
};

// Class Engine.MeshComponent
// 0x000C (0x01F0 - 0x01E4)
class UMeshComponent : public UPrimitiveComponent
{
public:
	TArray< class UMaterialInterface* >                Materials;                                        		// 0x01E4 (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
public:
};

// Class Engine.StaticMeshComponent
// 0x007C (0x026C - 0x01F0)
class UStaticMeshComponent : public UMeshComponent
{
public:
	int                                                ForcedLodModel;                                   		// 0x01F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                ForcedLodModelLow;                                		// 0x01F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                PreviousLODLevel;                                 		// 0x01F8 (0x0004) [0x0000000000000000]              
	class UStaticMesh*                                 StaticMesh;                                       		// 0x01FC (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FColor                                      WireframeColor;                                   		// 0x0200 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bIgnoreInstanceForTextureStreaming : 1;           		// 0x0204 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bOverrideLightMapResolution : 1;                  		// 0x0204 (0x0004) [0x0000000020000002] [0x00000002] ( CPF_Const | CPF_Deprecated )
	unsigned long                                      bOverrideLightMapRes : 1;                         		// 0x0204 (0x0004) [0x0000000000000003] [0x00000004] ( CPF_Edit | CPF_Const )
	int                                                OverriddenLightMapResolution;                     		// 0x0208 (0x0004) [0x0000000020000002]              ( CPF_Const | CPF_Deprecated )
	int                                                OverriddenLightMapRes;                            		// 0x020C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              OverriddenLODMaxRange;                            		// 0x0210 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      BeastImportOption;                                		// 0x0214 (0x0001) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              StreamingDistanceMultiplier;                      		// 0x0218 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                SubDivisionStepSize;                              		// 0x021C (0x0004) [0x0000000000000002]              ( CPF_Const )
	unsigned long                                      bUseSubDivisions : 1;                             		// 0x0220 (0x0004) [0x0000000000000002] [0x00000001] ( CPF_Const )
	unsigned long                                      bForceStaticDecals : 1;                           		// 0x0220 (0x0004) [0x0000000000002002] [0x00000002] ( CPF_Const | CPF_Transient )
	unsigned long                                      bCanHighlightSelectedSections : 1;                		// 0x0220 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bUseSimpleLightmapModifications : 1;              		// 0x0220 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	class UTexture*                                    SimpleLightmapModificationTexture;                		// 0x0224 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      SimpleLightmapModificationFunction;               		// 0x0228 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bNeverBecomeDynamic : 1;                          		// 0x022C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	TArray< struct FGuid >                             IrrelevantLights;                                 		// 0x0230 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< struct FStaticMeshComponentLODInfo >       LODData;                                          		// 0x023C (0x000C) [0x0000000080001002]              ( CPF_Const | CPF_Native | CPF_RepNotify | CPF_Interp | CPF_NonTransactional )
	int                                                VertexPositionVersionNumber;                      		// 0x0248 (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FLightmassPrimitiveSettings                 LightmassSettings;                                		// 0x024C (0x001C) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bUseStaticShadowsMaps_Beast : 1;                  		// 0x0268 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class Engine.CoverMeshComponent
// 0x0028 (0x0294 - 0x026C)
class UCoverMeshComponent : public UStaticMeshComponent
{
public:
	TArray< struct FCoverMeshes >                      Meshes;                                           		// 0x026C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FVector                                     LocationOffset;                                   		// 0x0278 (0x000C) [0x0000000000000000]              
	class UStaticMesh*                                 AutoAdjustOn;                                     		// 0x0284 (0x0004) [0x0000000000000000]              
	class UStaticMesh*                                 AutoAdjustOff;                                    		// 0x0288 (0x0004) [0x0000000000000000]              
	class UStaticMesh*                                 Disabled;                                         		// 0x028C (0x0004) [0x0000000000000000]              
	unsigned long                                      bShowWhenNotSelected : 1;                         		// 0x0290 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class Engine.NavMeshRenderingComponent
// 0x0000 (0x01E4 - 0x01E4)
class UNavMeshRenderingComponent : public UPrimitiveComponent
{
public:
public:
};

// Class Engine.PathRenderingComponent
// 0x0000 (0x01E4 - 0x01E4)
class UPathRenderingComponent : public UPrimitiveComponent
{
public:
public:
};

// Class Engine.RouteRenderingComponent
// 0x0000 (0x01E4 - 0x01E4)
class URouteRenderingComponent : public UPrimitiveComponent
{
public:
public:
};

// Class Engine.AICommandBase
// 0x0000 (0x003C - 0x003C)
class UAICommandBase : public UObject
{
public:
public:
};

// Class Engine.AutoNavMeshPathObstacleUnregister
// 0x0008 (0x0044 - 0x003C)
class UAutoNavMeshPathObstacleUnregister : public UObject
{
public:
	class UInterface_NavMeshPathObstacle*              PathObstacleRef;                                  		// 0x003C (0x0008) [0x0000000000001000]              ( CPF_Native )
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x0040 (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
public:
};

// Class Engine.Interface_NavMeshPathObject
// 0x0000 (0x003C - 0x003C)
class UInterface_NavMeshPathObject : public UInterface
{
public:
public:
};

// Class Engine.Interface_NavMeshPathSwitch
// 0x0000 (0x003C - 0x003C)
class UInterface_NavMeshPathSwitch : public UInterface_NavMeshPathObject
{
public:
public:
};

// Class Engine.Interface_NavMeshPathObstacle
// 0x0000 (0x003C - 0x003C)
class UInterface_NavMeshPathObstacle : public UInterface
{
public:
public:
};

// Class Engine.Interface_RVO
// 0x0000 (0x003C - 0x003C)
class UInterface_RVO : public UInterface
{
public:
public:
};

// Class Engine.NavigationHandle
// 0x0118 (0x0154 - 0x003C)
class UNavigationHandle : public UObject
{
public:
	class APylon*                                      AnchorPylon;                                      		// 0x003C (0x0004) [0x0000000000000000]              
	struct FPointer                                    AnchorPoly;                                       		// 0x0040 (0x0004) [0x0000000000001000]              ( CPF_Native )
	struct FPathStore                                  PathCache;                                        		// 0x0044 (0x000C) [0x0000000000000000]              
	struct FPointer                                    BestUnfinishedPathPoint;                          		// 0x0050 (0x0004) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
	struct FPointer                                    CurrentEdge;                                      		// 0x0054 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FPointer                                    SubGoal_DestPoly;                                 		// 0x0058 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FBasedPosition                              FinalDestination;                                 		// 0x005C (0x0034) [0x0000000000000000]              
	unsigned long                                      bSkipRouteCacheUpdates : 1;                       		// 0x0090 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bUseORforEvaluateGoal : 1;                        		// 0x0090 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bDebugConstraintsAndGoalEvals : 1;                		// 0x0090 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bUltraVerbosePathDebugging : 1;                   		// 0x0090 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bDebug_Breadcrumbs : 1;                           		// 0x0090 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	class UNavMeshPathConstraint*                      PathConstraintList;                               		// 0x0094 (0x0004) [0x0000000000000000]              
	class UNavMeshPathGoalEvaluator*                   PathGoalList;                                     		// 0x0098 (0x0004) [0x0000000000000000]              
	struct FNavMeshPathParams                          CachedPathParams;                                 		// 0x009C (0x0030) [0x0000000000000000]              
	unsigned char                                      LastPathError;                                    		// 0x00CC (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              LastPathFailTime;                                 		// 0x00D0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     Breadcrumbs[ 0xA ];                               		// 0x00D4 (0x0078) [0x0000000000000000]              
	int                                                BreadCrumbMostRecentIdx;                          		// 0x014C (0x0004) [0x0000000000000000]              
	float                                              BreadCrumbDistanceInterval;                       		// 0x0150 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.NavMeshGoal_Filter
// 0x000C (0x0048 - 0x003C)
class UNavMeshGoal_Filter : public UObject
{
public:
	unsigned long                                      bShowDebug : 1;                                   		// 0x003C (0x0004) [0x0000000000000000] [0x00000001] 
	int                                                NumNodesThrownOut;                                		// 0x0040 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                NumNodesProcessed;                                		// 0x0044 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.NavMeshGoalFilter_MinPathDistance
// 0x0004 (0x004C - 0x0048)
class UNavMeshGoalFilter_MinPathDistance : public UNavMeshGoal_Filter
{
public:
	int                                                MinDistancePathShouldBe;                          		// 0x0048 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.NavMeshGoalFilter_NotNearOtherAI
// 0x0004 (0x004C - 0x0048)
class UNavMeshGoalFilter_NotNearOtherAI : public UNavMeshGoal_Filter
{
public:
	float                                              DistanceToCheck;                                  		// 0x0048 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.NavMeshGoalFilter_OutOfViewFrom
// 0x0010 (0x0058 - 0x0048)
class UNavMeshGoalFilter_OutOfViewFrom : public UNavMeshGoal_Filter
{
public:
	struct FPointer                                    GoalPoly;                                         		// 0x0048 (0x0004) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
	struct FVector                                     OutOfViewLocation;                                		// 0x004C (0x000C) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.NavMeshGoalFilter_OutSideOfDotProductWedge
// 0x001C (0x0064 - 0x0048)
class UNavMeshGoalFilter_OutSideOfDotProductWedge : public UNavMeshGoal_Filter
{
public:
	struct FVector                                     Location;                                         		// 0x0048 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     Rotation;                                         		// 0x0054 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	float                                              Epsilon;                                          		// 0x0060 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.NavMeshGoalFilter_PolyEncompassesAI
// 0x000C (0x0054 - 0x0048)
class UNavMeshGoalFilter_PolyEncompassesAI : public UNavMeshGoal_Filter
{
public:
	struct FVector                                     OverrideExtentToCheck;                            		// 0x0048 (0x000C) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.NavMeshPathConstraint
// 0x0014 (0x0050 - 0x003C)
class UNavMeshPathConstraint : public UObject
{
public:
	class UNavMeshPathConstraint*                      NextConstraint;                                   		// 0x003C (0x0004) [0x0000000000000000]              
	int                                                NumNodesProcessed;                                		// 0x0040 (0x0004) [0x0000000000000000]              
	int                                                NumThrownOutNodes;                                		// 0x0044 (0x0004) [0x0000000000000000]              
	float                                              AddedDirectCost;                                  		// 0x0048 (0x0004) [0x0000000000000000]              
	float                                              AddedHeuristicCost;                               		// 0x004C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.NavMeshPath_AlongLine
// 0x000C (0x005C - 0x0050)
class UNavMeshPath_AlongLine : public UNavMeshPathConstraint
{
public:
	struct FVector                                     Direction;                                        		// 0x0050 (0x000C) [0x0000000000000000]              
public:
};

// Class Engine.NavMeshPath_EnforceTwoWayEdges
// 0x0000 (0x0050 - 0x0050)
class UNavMeshPath_EnforceTwoWayEdges : public UNavMeshPathConstraint
{
public:
public:
};

// Class Engine.NavMeshPath_MinDistBetweenSpecsOfType
// 0x0018 (0x0068 - 0x0050)
class UNavMeshPath_MinDistBetweenSpecsOfType : public UNavMeshPathConstraint
{
public:
	float                                              MinDistBetweenEdgeTypes;                          		// 0x0050 (0x0004) [0x0000000000000000]              
	struct FVector                                     InitLocation;                                     		// 0x0054 (0x000C) [0x0000000000000000]              
	unsigned char                                      EdgeType;                                         		// 0x0060 (0x0001) [0x0000000000000000]              
	float                                              Penalty;                                          		// 0x0064 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.NavMeshPath_SameCoverLink
// 0x0004 (0x0054 - 0x0050)
class UNavMeshPath_SameCoverLink : public UNavMeshPathConstraint
{
public:
	class ACoverLink*                                  TestLink;                                         		// 0x0050 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.NavMeshPath_Toward
// 0x0010 (0x0060 - 0x0050)
class UNavMeshPath_Toward : public UNavMeshPathConstraint
{
public:
	class AActor*                                      GoalActor;                                        		// 0x0050 (0x0004) [0x0000000000000000]              
	struct FVector                                     GoalPoint;                                        		// 0x0054 (0x000C) [0x0000000000000000]              
public:
};

// Class Engine.NavMeshPath_WithinDistanceEnvelope
// 0x001C (0x006C - 0x0050)
class UNavMeshPath_WithinDistanceEnvelope : public UNavMeshPathConstraint
{
public:
	float                                              MaxDistance;                                      		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MinDistance;                                      		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bSoft : 1;                                        		// 0x0058 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bOnlyThrowOutNodesThatLeaveEnvelope : 1;          		// 0x0058 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	float                                              SoftStartPenalty;                                 		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     EnvelopeTestPoint;                                		// 0x0060 (0x000C) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.NavMeshPath_WithinTraversalDist
// 0x000C (0x005C - 0x0050)
class UNavMeshPath_WithinTraversalDist : public UNavMeshPathConstraint
{
public:
	float                                              MaxTraversalDist;                                 		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bSoft : 1;                                        		// 0x0054 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              SoftStartPenalty;                                 		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.NavMeshPathGoalEvaluator
// 0x0014 (0x0050 - 0x003C)
class UNavMeshPathGoalEvaluator : public UObject
{
public:
	class UNavMeshPathGoalEvaluator*                   NextEvaluator;                                    		// 0x003C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                MaxPathVisits;                                    		// 0x0040 (0x0004) [0x0000000000000000]              
	unsigned long                                      bAlwaysCallEvaluateGoal : 1;                      		// 0x0044 (0x0004) [0x0000000000000000] [0x00000001] 
	int                                                NumNodesThrownOut;                                		// 0x0048 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                NumNodesProcessed;                                		// 0x004C (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.NavMeshGoal_At
// 0x0020 (0x0070 - 0x0050)
class UNavMeshGoal_At : public UNavMeshPathGoalEvaluator
{
public:
	struct FVector                                     Goal;                                             		// 0x0050 (0x000C) [0x0000000000000000]              
	float                                              GoalDist;                                         		// 0x005C (0x0004) [0x0000000000000000]              
	unsigned long                                      bKeepPartial : 1;                                 		// 0x0060 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bWeightPartialByDist : 1;                         		// 0x0060 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bGoalInSamePolyAsAnchor : 1;                      		// 0x0060 (0x0004) [0x0000000000000000] [0x00000004] 
	float                                              PartialDistSq;                                    		// 0x0064 (0x0004) [0x0000000000000000]              
	struct FPointer                                    GoalPoly;                                         		// 0x0068 (0x0004) [0x0000000000001000]              ( CPF_Native )
	struct FPointer                                    PartialGoal;                                      		// 0x006C (0x0004) [0x0000000000001000]              ( CPF_Native )
public:
};

// Class Engine.NavMeshGoal_ClosestActorInList
// 0x004C (0x009C - 0x0050)
class UNavMeshGoal_ClosestActorInList : public UNavMeshPathGoalEvaluator
{
public:
	TArray< struct FBiasedGoalActor >                  GoalList;                                         		// 0x0050 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FMultiMap_Mirror                            PolyToGoalActorMap;                               		// 0x005C (0x003C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FPointer                                    CachedAnchorPoly;                                 		// 0x0098 (0x0004) [0x0000000000001000]              ( CPF_Native )
public:
};

// Class Engine.NavMeshGoal_GenericFilterContainer
// 0x0014 (0x0064 - 0x0050)
class UNavMeshGoal_GenericFilterContainer : public UNavMeshPathGoalEvaluator
{
public:
	TArray< class UNavMeshGoal_Filter* >               GoalFilters;                                      		// 0x0050 (0x000C) [0x0000000004402008]              ( CPF_ExportObject | CPF_Transient | CPF_NeedCtorLink | CPF_EditInline )
	struct FPointer                                    SuccessfulGoal;                                   		// 0x005C (0x0004) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
	class UNavigationHandle*                           MyNavigationHandle;                               		// 0x0060 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.NavMeshGoal_Null
// 0x0004 (0x0054 - 0x0050)
class UNavMeshGoal_Null : public UNavMeshPathGoalEvaluator
{
public:
	struct FPointer                                    PartialGoal;                                      		// 0x0050 (0x0004) [0x0000000000001000]              ( CPF_Native )
public:
};

// Class Engine.NavMeshGoal_PolyEncompassesAI
// 0x000C (0x005C - 0x0050)
class UNavMeshGoal_PolyEncompassesAI : public UNavMeshPathGoalEvaluator
{
public:
	struct FVector                                     OverrideExtentToCheck;                            		// 0x0050 (0x000C) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.NavMeshGoal_Random
// 0x000C (0x005C - 0x0050)
class UNavMeshGoal_Random : public UNavMeshPathGoalEvaluator
{
public:
	int                                                MinDist;                                          		// 0x0050 (0x0004) [0x0000000000000000]              
	float                                              BestRating;                                       		// 0x0054 (0x0004) [0x0000000000000000]              
	struct FPointer                                    PartialGoal;                                      		// 0x0058 (0x0004) [0x0000000000001000]              ( CPF_Native )
public:
};

// Class Engine.NavMeshGoal_WithinDistanceEnvelope
// 0x0018 (0x0068 - 0x0050)
class UNavMeshGoal_WithinDistanceEnvelope : public UNavMeshPathGoalEvaluator
{
public:
	float                                              MaxDistance;                                      		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MinDistance;                                      		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MinTraversalDist;                                 		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     EnvelopeTestPoint;                                		// 0x005C (0x000C) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.PathConstraint
// 0x0008 (0x0044 - 0x003C)
class UPathConstraint : public UObject
{
public:
	int                                                CacheIdx;                                         		// 0x003C (0x0004) [0x0000000000000002]              ( CPF_Const )
	class UPathConstraint*                             NextConstraint;                                   		// 0x0040 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.Path_AlongLine
// 0x000C (0x0050 - 0x0044)
class UPath_AlongLine : public UPathConstraint
{
public:
	struct FVector                                     Direction;                                        		// 0x0044 (0x000C) [0x0000000000000000]              
public:
};

// Class Engine.Path_AvoidInEscapableNodes
// 0x0010 (0x0054 - 0x0044)
class UPath_AvoidInEscapableNodes : public UPathConstraint
{
public:
	int                                                Radius;                                           		// 0x0044 (0x0004) [0x0000000000000000]              
	int                                                Height;                                           		// 0x0048 (0x0004) [0x0000000000000000]              
	int                                                MaxFallSpeed;                                     		// 0x004C (0x0004) [0x0000000000000000]              
	int                                                MoveFlags;                                        		// 0x0050 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.Path_MinDistBetweenSpecsOfType
// 0x0014 (0x0058 - 0x0044)
class UPath_MinDistBetweenSpecsOfType : public UPathConstraint
{
public:
	float                                              MinDistBetweenSpecTypes;                          		// 0x0044 (0x0004) [0x0000000000000000]              
	struct FVector                                     InitLocation;                                     		// 0x0048 (0x000C) [0x0000000000000000]              
	class UClass*                                      ReachSpecClass;                                   		// 0x0054 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.Path_TowardGoal
// 0x0004 (0x0048 - 0x0044)
class UPath_TowardGoal : public UPathConstraint
{
public:
	class AActor*                                      GoalActor;                                        		// 0x0044 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.Path_TowardPoint
// 0x000C (0x0050 - 0x0044)
class UPath_TowardPoint : public UPathConstraint
{
public:
	struct FVector                                     GoalPoint;                                        		// 0x0044 (0x000C) [0x0000000000000000]              
public:
};

// Class Engine.Path_WithinDistanceEnvelope
// 0x001C (0x0060 - 0x0044)
class UPath_WithinDistanceEnvelope : public UPathConstraint
{
public:
	float                                              MaxDistance;                                      		// 0x0044 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MinDistance;                                      		// 0x0048 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bSoft : 1;                                        		// 0x004C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bOnlyThrowOutNodesThatLeaveEnvelope : 1;          		// 0x004C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	float                                              SoftStartPenalty;                                 		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     EnvelopeTestPoint;                                		// 0x0054 (0x000C) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.Path_WithinTraversalDist
// 0x000C (0x0050 - 0x0044)
class UPath_WithinTraversalDist : public UPathConstraint
{
public:
	float                                              MaxTraversalDist;                                 		// 0x0044 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bSoft : 1;                                        		// 0x0048 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              SoftStartPenalty;                                 		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.PathGoalEvaluator
// 0x0010 (0x004C - 0x003C)
class UPathGoalEvaluator : public UObject
{
public:
	class UPathGoalEvaluator*                          NextEvaluator;                                    		// 0x003C (0x0004) [0x0000000000000000]              
	class ANavigationPoint*                            GeneratedGoal;                                    		// 0x0040 (0x0004) [0x0000000000000000]              
	int                                                MaxPathVisits;                                    		// 0x0044 (0x0004) [0x0000000000000000]              
	int                                                CacheIdx;                                         		// 0x0048 (0x0004) [0x0000000000000002]              ( CPF_Const )
public:
};

// Class Engine.Goal_AtActor
// 0x000C (0x0058 - 0x004C)
class UGoal_AtActor : public UPathGoalEvaluator
{
public:
	class AActor*                                      GoalActor;                                        		// 0x004C (0x0004) [0x0000000000000000]              
	float                                              GoalDist;                                         		// 0x0050 (0x0004) [0x0000000000000000]              
	unsigned long                                      bKeepPartial : 1;                                 		// 0x0054 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class Engine.Goal_Null
// 0x0000 (0x004C - 0x004C)
class UGoal_Null : public UPathGoalEvaluator
{
public:
public:
};

// Class Engine.SkeletalMeshActor
// 0x0040 (0x0218 - 0x01D8)
class ASkeletalMeshActor : public AActor
{
public:
	unsigned long                                      bDamageAppliesImpulse : 1;                        		// 0x01D8 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bShouldDoAnimNotifies : 1;                        		// 0x01D8 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bForceSaveInCheckpoint : 1;                       		// 0x01D8 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bCollideActors_OldValue : 1;                      		// 0x01D8 (0x0004) [0x0000000020000000] [0x00000008] ( CPF_Deprecated )
	unsigned long                                      bShouldShadowParentAllAttachedActors : 1;         		// 0x01D8 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	class USkeletalMeshComponent*                      SkeletalMeshComponent;                            		// 0x01DC (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class ULightEnvironmentComponent*                  LightEnvironment;                                 		// 0x01E0 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             FacialAudioComp;                                  		// 0x01E4 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	class USkeletalMesh*                               ReplicatedMesh;                                   		// 0x01E8 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	class UMaterialInterface*                          ReplicatedMaterial0;                              		// 0x01EC (0x0004) [0x0000000000000020]              ( CPF_Net )
	class UMaterialInterface*                          ReplicatedMaterial1;                              		// 0x01F0 (0x0004) [0x0000000000000020]              ( CPF_Net )
	TArray< struct FSkelMeshActorControlTarget >       ControlTargets;                                   		// 0x01F4 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class UInterpGroup* >                      InterpGroupList;                                  		// 0x0200 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FName                                       SavedAnimSeqName;                                 		// 0x020C (0x0008) [0x0000000000002000]              ( CPF_Transient )
	float                                              SavedCurrentTime;                                 		// 0x0214 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.SkeletalMeshActorBasedOnExtremeContent
// 0x0018 (0x0230 - 0x0218)
class ASkeletalMeshActorBasedOnExtremeContent : public ASkeletalMeshActor
{
public:
	TArray< struct FSkelMaterialSetterDatum >          ExtremeContent;                                   		// 0x0218 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FSkelMaterialSetterDatum >          NonExtremeContent;                                		// 0x0224 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SkeletalMeshActorSpawnable
// 0x0000 (0x0218 - 0x0218)
class ASkeletalMeshActorSpawnable : public ASkeletalMeshActor
{
public:
public:
};

// Class Engine.SkeletalMeshCinematicActor
// 0x0000 (0x0218 - 0x0218)
class ASkeletalMeshCinematicActor : public ASkeletalMeshActor
{
public:
public:
};

// Class Engine.SkeletalMeshActorMAT
// 0x000C (0x0224 - 0x0218)
class ASkeletalMeshActorMAT : public ASkeletalMeshCinematicActor
{
public:
	TArray< class UAnimNodeSlot* >                     SlotNodes;                                        		// 0x0218 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class Engine.HeadTrackingComponent
// 0x009F (0x00F4 - 0x0055)
class UHeadTrackingComponent : public UActorComponent
{
public:
	TArray< struct FName >                             TrackControllerName;                              		// 0x0058 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              LookAtActorRadius;                                		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bDisableBeyondLimit : 1;                          		// 0x0068 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              MaxLookAtTime;                                    		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MinLookAtTime;                                    		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxInterestTime;                                  		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class UClass* >                            ActorClassesToLookAt;                             		// 0x0078 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FName >                             TargetBoneNames;                                  		// 0x0084 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned char                                      UnknownData00[ 0x3C ];                            		// 0x0090 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.HeadTrackingComponent.CurrentActorMap
	class USkeletalMeshComponent*                      SkeletalMeshComp;                                 		// 0x00CC (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	TArray< class USkelControlLookAt* >                TrackControls;                                    		// 0x00D0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FVector                                     RootMeshLocation;                                 		// 0x00DC (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FRotator                                    RootMeshRotation;                                 		// 0x00E8 (0x000C) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.AnimationCompressionAlgorithm
// 0x0012 (0x004E - 0x003C)
class UAnimationCompressionAlgorithm : public UObject
{
public:
	struct FString                                     Description;                                      		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned long                                      bNeedsSkeleton : 1;                               		// 0x0048 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned char                                      TranslationCompressionFormat;                     		// 0x004C (0x0001) [0x0000000000000000]              
	unsigned char                                      RotationCompressionFormat;                        		// 0x004D (0x0001) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.AnimationCompressionAlgorithm_Automatic
// 0x000A (0x0058 - 0x004E)
class UAnimationCompressionAlgorithm_Automatic : public UAnimationCompressionAlgorithm
{
public:
	float                                              MaxEndEffectorError;                              		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bTryFixedBitwiseCompression : 1;                  		// 0x0054 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bTryPerTrackBitwiseCompression : 1;               		// 0x0054 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bTryLinearKeyRemovalCompression : 1;              		// 0x0054 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bTryIntervalKeyRemoval : 1;                       		// 0x0054 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bRunCurrentDefaultCompressor : 1;                 		// 0x0054 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bAutoReplaceIfExistingErrorTooGreat : 1;          		// 0x0054 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bRaiseMaxErrorToExisting : 1;                     		// 0x0054 (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
public:
};

// Class Engine.AnimationCompressionAlgorithm_BitwiseCompressOnly
// 0x0002 (0x0050 - 0x004E)
class UAnimationCompressionAlgorithm_BitwiseCompressOnly : public UAnimationCompressionAlgorithm
{
public:
public:
};

// Class Engine.AnimationCompressionAlgorithm_LeastDestructive
// 0x0002 (0x0050 - 0x004E)
class UAnimationCompressionAlgorithm_LeastDestructive : public UAnimationCompressionAlgorithm
{
public:
public:
};

// Class Engine.AnimationCompressionAlgorithm_RemoveEverySecondKey
// 0x000A (0x0058 - 0x004E)
class UAnimationCompressionAlgorithm_RemoveEverySecondKey : public UAnimationCompressionAlgorithm
{
public:
	int                                                MinKeys;                                          		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bStartAtSecondKey : 1;                            		// 0x0054 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.AnimationCompressionAlgorithm_RemoveLinearKeys
// 0x001E (0x006C - 0x004E)
class UAnimationCompressionAlgorithm_RemoveLinearKeys : public UAnimationCompressionAlgorithm
{
public:
	float                                              MaxPosDiff;                                       		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxAngleDiff;                                     		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxEffectorDiff;                                  		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MinEffectorDiff;                                  		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EffectorDiffSocket;                               		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ParentKeyScale;                                   		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bRetarget : 1;                                    		// 0x0068 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bActuallyFilterLinearKeys : 1;                    		// 0x0068 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
public:
};

// Class Engine.AnimationCompressionAlgorithm_PerTrackCompression
// 0x0050 (0x00BC - 0x006C)
class UAnimationCompressionAlgorithm_PerTrackCompression : public UAnimationCompressionAlgorithm_RemoveLinearKeys
{
public:
	float                                              MaxZeroingThreshold;                              		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxPosDiffBitwise;                                		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxAngleDiffBitwise;                              		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< unsigned char >                            AllowedRotationFormats;                           		// 0x0078 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< unsigned char >                            AllowedTranslationFormats;                        		// 0x0084 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      bResampleAnimation : 1;                           		// 0x0090 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bUseAdaptiveError : 1;                            		// 0x0090 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bUseOverrideForEndEffectors : 1;                  		// 0x0090 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bUseAdaptiveError2 : 1;                           		// 0x0090 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	float                                              ResampledFramerate;                               		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                MinKeysForResampling;                             		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                TrackHeightBias;                                  		// 0x009C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ParentingDivisor;                                 		// 0x00A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ParentingDivisorExponent;                         		// 0x00A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RotationErrorSourceRatio;                         		// 0x00A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TranslationErrorSourceRatio;                      		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxErrorPerTrackRatio;                            		// 0x00B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              PerturbationProbeSize;                            		// 0x00B4 (0x0004) [0x0000000000000000]              
	struct FPointer                                    PerReductionCachedData;                           		// 0x00B8 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.AnimationCompressionAlgorithm_RemoveTrivialKeys
// 0x000A (0x0058 - 0x004E)
class UAnimationCompressionAlgorithm_RemoveTrivialKeys : public UAnimationCompressionAlgorithm
{
public:
	float                                              MaxPosDiff;                                       		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxAngleDiff;                                     		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.AnimationCompressionAlgorithm_RevertToRaw
// 0x0002 (0x0050 - 0x004E)
class UAnimationCompressionAlgorithm_RevertToRaw : public UAnimationCompressionAlgorithm
{
public:
public:
};

// Class Engine.AnimMetaData
// 0x0000 (0x003C - 0x003C)
class UAnimMetaData : public UObject
{
public:
public:
};

// Class Engine.AnimMetaData_SkelControl
// 0x0018 (0x0054 - 0x003C)
class UAnimMetaData_SkelControl : public UAnimMetaData
{
public:
	TArray< struct FName >                             SkelControlNameList;                              		// 0x003C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      bFullControlOverController : 1;                   		// 0x0048 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	struct FName                                       SkelControlName;                                  		// 0x004C (0x0008) [0x0000000020000000]              ( CPF_Deprecated )
public:
};

// Class Engine.AnimMetaData_SkelControlKeyFrame
// 0x000C (0x0060 - 0x0054)
class UAnimMetaData_SkelControlKeyFrame : public UAnimMetaData_SkelControl
{
public:
	TArray< struct FTimeModifier >                     KeyFrames;                                        		// 0x0054 (0x000C) [0x0000000004400001]              ( CPF_Edit | CPF_NeedCtorLink | CPF_EditInline )
public:
};

// Class Engine.AnimNotify
// 0x0004 (0x0040 - 0x003C)
class UAnimNotify : public UObject
{
public:
	struct FColor                                      NotifyColor;                                      		// 0x003C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.AnimNotify_CameraEffect
// 0x0004 (0x0044 - 0x0040)
class UAnimNotify_CameraEffect : public UAnimNotify
{
public:
	class UClass*                                      CameraLensEffect;                                 		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.AnimNotify_ClothingMaxDistanceScale
// 0x0010 (0x0050 - 0x0040)
class UAnimNotify_ClothingMaxDistanceScale : public UAnimNotify
{
public:
	float                                              StartScale;                                       		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EndScale;                                         		// 0x0044 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      ScaleMode;                                        		// 0x0048 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              Duration;                                         		// 0x004C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.AnimNotify_Footstep
// 0x0004 (0x0044 - 0x0040)
class UAnimNotify_Footstep : public UAnimNotify
{
public:
	int                                                FootDown;                                         		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.AnimNotify_ForceField
// 0x0018 (0x0058 - 0x0040)
class UAnimNotify_ForceField : public UAnimNotify
{
public:
	class UNxForceFieldComponent*                      ForceFieldComponent;                              		// 0x0040 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	unsigned long                                      bAttach : 1;                                      		// 0x0044 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	struct FName                                       SocketName;                                       		// 0x0048 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       BoneName;                                         		// 0x0050 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.AnimNotify_Kismet
// 0x0008 (0x0048 - 0x0040)
class UAnimNotify_Kismet : public UAnimNotify
{
public:
	struct FName                                       NotifyName;                                       		// 0x0040 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.AnimNotify_PlayParticleEffect
// 0x0025 (0x0065 - 0x0040)
class UAnimNotify_PlayParticleEffect : public UAnimNotify
{
public:
	class UParticleSystem*                             PSTemplate;                                       		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bIsExtremeContent : 1;                            		// 0x0044 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bAttach : 1;                                      		// 0x0044 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bPreview : 1;                                     		// 0x0044 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bSkipIfOwnerIsHidden : 1;                         		// 0x0044 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	class UParticleSystem*                             PSNonExtremeContentTemplate;                      		// 0x0048 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       SocketName;                                       		// 0x004C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       BoneName;                                         		// 0x0054 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       BoneSocketModuleActorName;                        		// 0x005C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      DepthPriorityGroup;                               		// 0x0064 (0x0001) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.AnimNotify_Rumble
// 0x0010 (0x0050 - 0x0040)
class UAnimNotify_Rumble : public UAnimNotify
{
public:
	class UClass*                                      PredefinedWaveForm;                               		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UForceFeedbackWaveform*                      WaveForm;                                         		// 0x0044 (0x0004) [0x0000000004000001]              ( CPF_Edit | CPF_EditInline )
	unsigned long                                      bCheckForBasedPlayer : 1;                         		// 0x0048 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              EffectRadius;                                     		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.AnimNotify_Script
// 0x0018 (0x0058 - 0x0040)
class UAnimNotify_Script : public UAnimNotify
{
public:
	struct FName                                       NotifyName;                                       		// 0x0040 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       NotifyTickName;                                   		// 0x0048 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       NotifyEndName;                                    		// 0x0050 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.AnimNotify_Scripted
// 0x0000 (0x0040 - 0x0040)
class UAnimNotify_Scripted : public UAnimNotify
{
public:
public:
};

// Class Engine.AnimNotify_PawnMaterialParam
// 0x000C (0x004C - 0x0040)
class UAnimNotify_PawnMaterialParam : public UAnimNotify_Scripted
{
public:
	TArray< struct FScalarParameterInterpStruct >      ScalarParameterInterpArray;                       		// 0x0040 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.AnimNotify_ViewShake
// 0x0050 (0x0090 - 0x0040)
class UAnimNotify_ViewShake : public UAnimNotify_Scripted
{
public:
	float                                              Duration;                                         		// 0x0040 (0x0004) [0x0000000000020000]              ( CPF_EditConst )
	struct FVector                                     RotAmplitude;                                     		// 0x0044 (0x000C) [0x0000000000020000]              ( CPF_EditConst )
	struct FVector                                     RotFrequency;                                     		// 0x0050 (0x000C) [0x0000000000020000]              ( CPF_EditConst )
	struct FVector                                     LocAmplitude;                                     		// 0x005C (0x000C) [0x0000000000020000]              ( CPF_EditConst )
	struct FVector                                     LocFrequency;                                     		// 0x0068 (0x000C) [0x0000000000020000]              ( CPF_EditConst )
	float                                              FOVAmplitude;                                     		// 0x0074 (0x0004) [0x0000000000020000]              ( CPF_EditConst )
	float                                              FOVFrequency;                                     		// 0x0078 (0x0004) [0x0000000000020000]              ( CPF_EditConst )
	unsigned long                                      bDoControllerVibration : 1;                       		// 0x007C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bUseBoneLocation : 1;                             		// 0x007C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	float                                              ShakeRadius;                                      		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       BoneName;                                         		// 0x0084 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	class UCameraShake*                                ShakeParams;                                      		// 0x008C (0x0004) [0x0000000004400009]              ( CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
public:
};

// Class Engine.AnimNotify_Sound
// 0x001C (0x005C - 0x0040)
class UAnimNotify_Sound : public UAnimNotify
{
public:
	class USoundCue*                                   SoundCue;                                         		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bFollowActor : 1;                                 		// 0x0044 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bIgnoreIfActorHidden : 1;                         		// 0x0044 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	struct FName                                       BoneName;                                         		// 0x0048 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              PercentToPlay;                                    		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              VolumeMultiplier;                                 		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              PitchMultiplier;                                  		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.AnimNotify_Trails
// 0x0058 (0x0098 - 0x0040)
class UAnimNotify_Trails : public UAnimNotify
{
public:
	class UParticleSystem*                             PSTemplate;                                       		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USkeletalMesh*                               SampledSkeletalMesh;                              		// 0x0044 (0x0004) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
	unsigned long                                      bIsExtremeContent : 1;                            		// 0x0048 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bPreview : 1;                                     		// 0x0048 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bSkipIfOwnerIsHidden : 1;                         		// 0x0048 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bResampleRequired : 1;                            		// 0x0048 (0x0004) [0x0000000000000000] [0x00000008] 
	struct FName                                       FirstEdgeSocketName;                              		// 0x004C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       ControlPointSocketName;                           		// 0x0054 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       SecondEdgeSocketName;                             		// 0x005C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              LastStartTime;                                    		// 0x0064 (0x0004) [0x0000000000000000]              
	float                                              EndTime;                                          		// 0x0068 (0x0004) [0x0000000000000000]              
	float                                              SampleTimeStep;                                   		// 0x006C (0x0004) [0x0000000020000000]              ( CPF_Deprecated )
	TArray< struct FTrailSamplePoint >                 TrailSampleData;                                  		// 0x0070 (0x000C) [0x0000000020400000]              ( CPF_NeedCtorLink | CPF_Deprecated )
	float                                              SamplesPerSecond;                                 		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FTrailSample >                      TrailSampledData;                                 		// 0x0080 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              CurrentTime;                                      		// 0x008C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              TimeStep;                                         		// 0x0090 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UAnimNodeSequence*                           AnimNodeSeq;                                      		// 0x0094 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.AnimObject
// 0x0024 (0x0060 - 0x003C)
class UAnimObject : public UObject
{
public:
	int                                                DrawWidth;                                        		// 0x003C (0x0004) [0x0000000000000000]              
	int                                                DrawHeight;                                       		// 0x0040 (0x0004) [0x0000000000000000]              
	int                                                NodePosX;                                         		// 0x0044 (0x0004) [0x0000000000000000]              
	int                                                NodePosY;                                         		// 0x0048 (0x0004) [0x0000000000000000]              
	int                                                OutDrawY;                                         		// 0x004C (0x0004) [0x0000000000000000]              
	struct FString                                     CategoryDesc;                                     		// 0x0050 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class USkeletalMeshComponent*                      SkelComponent;                                    		// 0x005C (0x0004) [0x000000000428200A]              ( CPF_Const | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.AnimNode
// 0x0080 (0x00E0 - 0x0060)
class UAnimNode : public UAnimObject
{
public:
	unsigned long                                      bRelevant : 1;                                    		// 0x0060 (0x0004) [0x0000000000002002] [0x00000001] ( CPF_Const | CPF_Transient )
	unsigned long                                      bJustBecameRelevant : 1;                          		// 0x0060 (0x0004) [0x0000000000002002] [0x00000002] ( CPF_Const | CPF_Transient )
	unsigned long                                      bTickDuringPausedAnims : 1;                       		// 0x0060 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bEditorOnly : 1;                                  		// 0x0060 (0x0004) [0x0000000000000002] [0x00000008] ( CPF_Const )
	unsigned long                                      bDisableCaching : 1;                              		// 0x0060 (0x0004) [0x0000000000002002] [0x00000010] ( CPF_Const | CPF_Transient )
	unsigned long                                      bCallScriptEventOnInit : 1;                       		// 0x0060 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bCallScriptEventOnBecomeRelevant : 1;             		// 0x0060 (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bCallScriptEventOnCeaseRelevant : 1;              		// 0x0060 (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	int                                                NodeTickTag;                                      		// 0x0064 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                NodeInitTag;                                      		// 0x0068 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                NodeEndEventTick;                                 		// 0x006C (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                TickArrayIndex;                                   		// 0x0070 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                NodeCachedAtomsTag;                               		// 0x0074 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              NodeTotalWeight;                                  		// 0x0078 (0x0004) [0x0000000000000002]              ( CPF_Const )
	TArray< class UAnimNodeBlendBase* >                ParentNodes;                                      		// 0x007C (0x000C) [0x0000000000600000]              ( CPF_NeedCtorLink )
	struct FName                                       NodeName;                                         		// 0x0088 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FBoneAtom >                         CachedBoneAtoms;                                  		// 0x0090 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned char                                      CachedNumDesiredBones;                            		// 0x009C (0x0001) [0x0000000000002000]              ( CPF_Transient )
	struct FBoneAtom                                   CachedRootMotionDelta;                            		// 0x00A0 (0x0020) [0x0000000000002000]              ( CPF_Transient )
	int                                                bCachedHasRootMotion;                             		// 0x00C0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FCurveKey >                         CachedCurveKeys;                                  		// 0x00C4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                SearchTag;                                        		// 0x00D0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FCurveKey >                         LastUpdatedAnimMorphKeys;                         		// 0x00D4 (0x000C) [0x0000000000422001]              ( CPF_Edit | CPF_Transient | CPF_EditConst | CPF_NeedCtorLink )
public:
};

// Class Engine.AnimNodeBlendBase
// 0x0011 (0x00F1 - 0x00E0)
class UAnimNodeBlendBase : public UAnimNode
{
public:
	TArray< struct FAnimBlendChild >                   Children;                                         		// 0x00E0 (0x000C) [0x0000000004400048]              ( CPF_ExportObject | CPF_EditConstArray | CPF_NeedCtorLink | CPF_EditInline )
	unsigned long                                      bFixNumChildren : 1;                              		// 0x00EC (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned char                                      BlendType;                                        		// 0x00F0 (0x0001) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.AnimNode_MultiBlendPerBone
// 0x0014 (0x0105 - 0x00F1)
class UAnimNode_MultiBlendPerBone : public UAnimNodeBlendBase
{
public:
	class APawn*                                       PawnOwner;                                        		// 0x00F4 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	TArray< struct FPerBoneMaskInfo >                  MaskList;                                         		// 0x00F8 (0x000C) [0x0000000004400041]              ( CPF_Edit | CPF_EditConstArray | CPF_NeedCtorLink | CPF_EditInline )
	unsigned char                                      RotationBlendType;                                		// 0x0104 (0x0001) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.AnimNodeAimOffset
// 0x004B (0x013C - 0x00F1)
class UAnimNodeAimOffset : public UAnimNodeBlendBase
{
public:
	struct FVector2D                                   Aim;                                              		// 0x00F4 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FVector2D                                   AngleOffset;                                      		// 0x00FC (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bForceAimDir : 1;                                 		// 0x0104 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bBakeFromAnimations : 1;                          		// 0x0104 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bPassThroughWhenNotRendered : 1;                  		// 0x0104 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bSynchronizeNodesInEditor : 1;                    		// 0x0104 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	int                                                PassThroughAtOrAboveLOD;                          		// 0x0108 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      ForcedAimDir;                                     		// 0x010C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	TArray< unsigned char >                            RequiredBones;                                    		// 0x0110 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< unsigned char >                            AimCpntIndexLUT;                                  		// 0x011C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UAnimNodeAimOffset*                          TemplateNode;                                     		// 0x0128 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FAimOffsetProfile >                 Profiles;                                         		// 0x012C (0x000C) [0x0000000000400041]              ( CPF_Edit | CPF_EditConstArray | CPF_NeedCtorLink )
	int                                                CurrentProfileIndex;                              		// 0x0138 (0x0004) [0x0000000000020003]              ( CPF_Edit | CPF_Const | CPF_EditConst )
public:
};

// Class Engine.AnimNodeBlend
// 0x0013 (0x0104 - 0x00F1)
class UAnimNodeBlend : public UAnimNodeBlendBase
{
public:
	float                                              Child2Weight;                                     		// 0x00F4 (0x0004) [0x0000000000000000]              
	float                                              Child2WeightTarget;                               		// 0x00F8 (0x0004) [0x0000000000000000]              
	float                                              BlendTimeToGo;                                    		// 0x00FC (0x0004) [0x0000000000000000]              
	unsigned long                                      bSkipBlendWhenNotRendered : 1;                    		// 0x0100 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.AnimNodeAdditiveBlending
// 0x0004 (0x0108 - 0x0104)
class UAnimNodeAdditiveBlending : public UAnimNodeBlend
{
public:
	unsigned long                                      bPassThroughWhenNotRendered : 1;                  		// 0x0104 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.AnimNodeBlendPerBone
// 0x0028 (0x012C - 0x0104)
class UAnimNodeBlendPerBone : public UAnimNodeBlend
{
public:
	unsigned long                                      bForceLocalSpaceBlend : 1;                        		// 0x0104 (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	TArray< struct FName >                             BranchStartBoneName;                              		// 0x0108 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< float >                                    Child2PerBoneWeight;                              		// 0x0114 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< unsigned char >                            LocalToCompReqBones;                              		// 0x0120 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.AnimNodeCrossfader
// 0x0010 (0x0114 - 0x0104)
class UAnimNodeCrossfader : public UAnimNodeBlend
{
public:
	struct FName                                       DefaultAnimSeqName;                               		// 0x0104 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bDontBlendOutOneShot : 1;                         		// 0x010C (0x0004) [0x0000000000000002] [0x00000001] ( CPF_Const )
	float                                              PendingBlendOutTimeOneShot;                       		// 0x0110 (0x0004) [0x0000000000000002]              ( CPF_Const )
public:
};

// Class Engine.AnimNodePlayCustomAnim
// 0x0008 (0x010C - 0x0104)
class UAnimNodePlayCustomAnim : public UAnimNodeBlend
{
public:
	unsigned long                                      bIsPlayingCustomAnim : 1;                         		// 0x0104 (0x0004) [0x0000000000000000] [0x00000001] 
	float                                              CustomPendingBlendOutTime;                        		// 0x0108 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.AnimNodeBlendDirectional
// 0x001F (0x0110 - 0x00F1)
class UAnimNodeBlendDirectional : public UAnimNodeBlendBase
{
public:
	float                                              DirDegreesPerSecond;                              		// 0x00F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DirAngle;                                         		// 0x00F8 (0x0004) [0x0000000000000000]              
	int                                                SingleAnimAtOrAboveLOD;                           		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRotator                                    RotationOffset;                                   		// 0x0100 (0x000C) [0x0000000000000000]              
	unsigned long                                      bUseAcceleration : 1;                             		// 0x010C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.AnimNodeBlendList
// 0x0023 (0x0114 - 0x00F1)
class UAnimNodeBlendList : public UAnimNodeBlendBase
{
public:
	TArray< float >                                    TargetWeight;                                     		// 0x00F4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              BlendTimeToGo;                                    		// 0x0100 (0x0004) [0x0000000000000000]              
	int                                                ActiveChildIndex;                                 		// 0x0104 (0x0004) [0x0000000000000000]              
	unsigned long                                      bPlayActiveChild : 1;                             		// 0x0108 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bForceChildFullWeightWhenBecomingRelevant : 1;    		// 0x0108 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bSkipBlendWhenNotRendered : 1;                    		// 0x0108 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	float                                              SliderPosition;                                   		// 0x010C (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                EditorActiveChildIndex;                           		// 0x0110 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.AnimNodeBlendByBase
// 0x0018 (0x012C - 0x0114)
class UAnimNodeBlendByBase : public UAnimNodeBlendList
{
public:
	unsigned char                                      Type;                                             		// 0x0114 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       ActorTag;                                         		// 0x0118 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	class UClass*                                      ActorClass;                                       		// 0x0120 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BlendTime;                                        		// 0x0124 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class AActor*                                      CachedBase;                                       		// 0x0128 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.AnimNodeBlendByPhysics
// 0x0000 (0x0114 - 0x0114)
class UAnimNodeBlendByPhysics : public UAnimNodeBlendList
{
public:
public:
};

// Class Engine.AnimNodeBlendByPosture
// 0x0000 (0x0114 - 0x0114)
class UAnimNodeBlendByPosture : public UAnimNodeBlendList
{
public:
public:
};

// Class Engine.AnimNodeBlendByProperty
// 0x0038 (0x014C - 0x0114)
class UAnimNodeBlendByProperty : public UAnimNodeBlendList
{
public:
	struct FName                                       PropertyName;                                     		// 0x0114 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bUseOwnersBase : 1;                               		// 0x011C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bForceUpdate : 1;                                 		// 0x011C (0x0004) [0x0000000000002002] [0x00000002] ( CPF_Const | CPF_Transient )
	unsigned long                                      bUseSpecificBlendTimes : 1;                       		// 0x011C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bSynchronizeNodesInEditor : 1;                    		// 0x011C (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	struct FName                                       CachedPropertyName;                               		// 0x0120 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	struct FPointer                                    CachedFloatProperty;                              		// 0x0128 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FPointer                                    CachedBoolProperty;                               		// 0x012C (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FPointer                                    CachedByteProperty;                               		// 0x0130 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	class AActor*                                      CachedOwner;                                      		// 0x0134 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              BlendTime;                                        		// 0x0138 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FloatPropMin;                                     		// 0x013C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FloatPropMax;                                     		// 0x0140 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BlendToChild1Time;                                		// 0x0144 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BlendToChild2Time;                                		// 0x0148 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.AnimNodeBlendBySpeed
// 0x0030 (0x0144 - 0x0114)
class UAnimNodeBlendBySpeed : public UAnimNodeBlendList
{
public:
	float                                              Speed;                                            		// 0x0114 (0x0004) [0x0000000000000000]              
	int                                                LastChannel;                                      		// 0x0118 (0x0004) [0x0000000000000000]              
	float                                              BlendUpTime;                                      		// 0x011C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BlendDownTime;                                    		// 0x0120 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BlendDownPerc;                                    		// 0x0124 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< float >                                    Constraints;                                      		// 0x0128 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      bUseAcceleration : 1;                             		// 0x0134 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              BlendUpDelay;                                     		// 0x0138 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BlendDownDelay;                                   		// 0x013C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BlendDelayRemaining;                              		// 0x0140 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.AnimNodeRandom
// 0x0018 (0x012C - 0x0114)
class UAnimNodeRandom : public UAnimNodeBlendList
{
public:
	TArray< struct FRandomAnimInfo >                   RandomInfo;                                       		// 0x0114 (0x000C) [0x0000000004400041]              ( CPF_Edit | CPF_EditConstArray | CPF_NeedCtorLink | CPF_EditInline )
	class UAnimNodeSequence*                           PlayingSeqNode;                                   		// 0x0120 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                PendingChildIndex;                                		// 0x0124 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bPickedPendingChildIndex : 1;                     		// 0x0128 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class Engine.AnimNodeBlendMultiBone
// 0x001B (0x010C - 0x00F1)
class UAnimNodeBlendMultiBone : public UAnimNodeBlendBase
{
public:
	TArray< struct FChildBoneBlendInfo >               BlendTargetList;                                  		// 0x00F4 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< unsigned char >                            SourceRequiredBones;                              		// 0x0100 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class Engine.AnimNodeMirror
// 0x0007 (0x00F8 - 0x00F1)
class UAnimNodeMirror : public UAnimNodeBlendBase
{
public:
	unsigned long                                      bEnableMirroring : 1;                             		// 0x00F4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.AnimNodeScalePlayRate
// 0x0007 (0x00F8 - 0x00F1)
class UAnimNodeScalePlayRate : public UAnimNodeBlendBase
{
public:
	float                                              ScaleByValue;                                     		// 0x00F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.AnimNodeScaleRateBySpeed
// 0x0004 (0x00FC - 0x00F8)
class UAnimNodeScaleRateBySpeed : public UAnimNodeScalePlayRate
{
public:
	float                                              BaseSpeed;                                        		// 0x00F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.AnimNodeSlot
// 0x0023 (0x0114 - 0x00F1)
class UAnimNodeSlot : public UAnimNodeBlendBase
{
public:
	unsigned long                                      bIsPlayingCustomAnim : 1;                         		// 0x00F4 (0x0004) [0x0000000000000002] [0x00000001] ( CPF_Const )
	unsigned long                                      bEarlyAnimEndNotify : 1;                          		// 0x00F4 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bSkipBlendWhenNotRendered : 1;                    		// 0x00F4 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bAdditiveAnimationsOverrideSource : 1;            		// 0x00F4 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bIsBeingUsedByInterpGroup : 1;                    		// 0x00F4 (0x0004) [0x0000000000002002] [0x00000010] ( CPF_Const | CPF_Transient )
	float                                              PendingBlendOutTime;                              		// 0x00F8 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                CustomChildIndex;                                 		// 0x00FC (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                TargetChildIndex;                                 		// 0x0100 (0x0004) [0x0000000000000002]              ( CPF_Const )
	TArray< float >                                    TargetWeight;                                     		// 0x0104 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              BlendTimeToGo;                                    		// 0x0110 (0x0004) [0x0000000000000002]              ( CPF_Const )
public:
};

// Class Engine.AnimNodeSynch
// 0x000F (0x0100 - 0x00F1)
class UAnimNodeSynch : public UAnimNodeBlendBase
{
public:
	TArray< struct FSynchGroup >                       Groups;                                           		// 0x00F4 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.AnimTree
// 0x010B (0x01FC - 0x00F1)
class UAnimTree : public UAnimNodeBlendBase
{
public:
	class UAnimTree*                                   AnimTreeTemplate;                                 		// 0x00F4 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned long                                      bEnablePooling : 1;                               		// 0x00F8 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bUseSavedPose : 1;                                		// 0x00F8 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bBeingEdited : 1;                                 		// 0x00F8 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bParentNodeArrayBuilt : 1;                        		// 0x00F8 (0x0004) [0x0000000000200000] [0x00000008] 
	unsigned long                                      bRebuildAnimTickArray : 1;                        		// 0x00F8 (0x0004) [0x0000000000000000] [0x00000010] 
	TArray< struct FAnimGroup >                        AnimGroups;                                       		// 0x00FC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FName >                             PrioritizedSkelBranches;                          		// 0x0108 (0x000C) [0x0000000020400000]              ( CPF_NeedCtorLink | CPF_Deprecated )
	TArray< struct FName >                             ComposePrePassBoneNames;                          		// 0x0114 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FName >                             ComposePostPassBoneNames;                         		// 0x0120 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class UMorphNodeBase* >                    RootMorphNodes;                                   		// 0x012C (0x000C) [0x0000000004400008]              ( CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
	TArray< struct FSkelControlListHead >              SkelControlLists;                                 		// 0x0138 (0x000C) [0x0000000004400008]              ( CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
	TArray< struct FBoneAtom >                         SavedPose;                                        		// 0x0144 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                MorphConnDrawY;                                   		// 0x0150 (0x0004) [0x0000000000000000]              
	float                                              PreviewPlayRate;                                  		// 0x0154 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USkeletalMesh*                               PreviewSkelMesh;                                  		// 0x0158 (0x0004) [0x0000000020000000]              ( CPF_Deprecated )
	class USkeletalMesh*                               SocketSkelMesh;                                   		// 0x015C (0x0004) [0x0000000020000000]              ( CPF_Deprecated )
	class UStaticMesh*                                 SocketStaticMesh;                                 		// 0x0160 (0x0004) [0x0000000020000000]              ( CPF_Deprecated )
	float                                              SocketMeshScale;                                  		// 0x0164 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       SocketName;                                       		// 0x0168 (0x0008) [0x0000000020000000]              ( CPF_Deprecated )
	TArray< class UAnimSet* >                          PreviewAnimSets;                                  		// 0x0170 (0x000C) [0x0000000020400000]              ( CPF_NeedCtorLink | CPF_Deprecated )
	TArray< class UMorphTargetSet* >                   PreviewMorphSets;                                 		// 0x017C (0x000C) [0x0000000020400000]              ( CPF_NeedCtorLink | CPF_Deprecated )
	TArray< struct FPreviewSkelMeshStruct >            PreviewMeshList;                                  		// 0x0188 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                PreviewMeshIndex;                                 		// 0x0194 (0x0004) [0x0000000000000000]              
	TArray< struct FPreviewSocketStruct >              PreviewSocketList;                                		// 0x0198 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                PreviewSocketIndex;                               		// 0x01A4 (0x0004) [0x0000000000000000]              
	TArray< struct FPreviewAnimSetsStruct >            PreviewAnimSetList;                               		// 0x01A8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                PreviewAnimSetListIndex;                          		// 0x01B4 (0x0004) [0x0000000000000000]              
	int                                                PreviewAnimSetIndex;                              		// 0x01B8 (0x0004) [0x0000000000000000]              
	struct FVector                                     PreviewCamPos;                                    		// 0x01BC (0x000C) [0x0000000000000000]              
	struct FRotator                                    PreviewCamRot;                                    		// 0x01C8 (0x000C) [0x0000000000000000]              
	struct FVector                                     PreviewFloorPos;                                  		// 0x01D4 (0x000C) [0x0000000000000000]              
	int                                                PreviewFloorYaw;                                  		// 0x01E0 (0x0004) [0x0000000000000000]              
	TArray< class UAnimNodeFrame* >                    AnimNodeFrames;                                   		// 0x01E4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< class UAnimNode* >                         AnimTickArray;                                    		// 0x01F0 (0x000C) [0x0000000000600000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.AnimNodeSequence
// 0x0060 (0x0140 - 0x00E0)
class UAnimNodeSequence : public UAnimNode
{
public:
	struct FName                                       AnimSeqName;                                      		// 0x00E0 (0x0008) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              Rate;                                             		// 0x00E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bPlaying : 1;                                     		// 0x00EC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bLooping : 1;                                     		// 0x00EC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bCauseActorAnimEnd : 1;                           		// 0x00EC (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bCauseActorAnimPlay : 1;                          		// 0x00EC (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bZeroRootRotation : 1;                            		// 0x00EC (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bZeroRootTranslation : 1;                         		// 0x00EC (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bDisableWarningWhenAnimNotFound : 1;              		// 0x00EC (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bNoNotifies : 1;                                  		// 0x00EC (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bForceRefposeWhenNotPlaying : 1;                  		// 0x00EC (0x0004) [0x0000000000000001] [0x00000100] ( CPF_Edit )
	unsigned long                                      bIsIssuingNotifies : 1;                           		// 0x00EC (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bForceAlwaysSlave : 1;                            		// 0x00EC (0x0004) [0x0000000000000001] [0x00000400] ( CPF_Edit )
	unsigned long                                      bSynchronize : 1;                                 		// 0x00EC (0x0004) [0x0000000000000003] [0x00000800] ( CPF_Edit | CPF_Const )
	unsigned long                                      bReverseSync : 1;                                 		// 0x00EC (0x0004) [0x0000000000000003] [0x00001000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bShowTimeLineSlider : 1;                          		// 0x00EC (0x0004) [0x0000000000000001] [0x00002000] ( CPF_Edit )
	unsigned long                                      bLoopCameraAnim : 1;                              		// 0x00EC (0x0004) [0x0000000000000001] [0x00004000] ( CPF_Edit )
	unsigned long                                      bRandomizeCameraAnimLoopStartTime : 1;            		// 0x00EC (0x0004) [0x0000000000000001] [0x00008000] ( CPF_Edit )
	unsigned long                                      bEditorOnlyAddRefPoseToAdditiveAnimation : 1;     		// 0x00EC (0x0004) [0x0000000000000002] [0x00010000] ( CPF_Const )
	float                                              CurrentTime;                                      		// 0x00F0 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              PreviousTime;                                     		// 0x00F4 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              EndTime;                                          		// 0x00F8 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	class UAnimSequence*                               AnimSeq;                                          		// 0x00FC (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                AnimLinkupIndex;                                  		// 0x0100 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              NotifyWeightThreshold;                            		// 0x0104 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       SynchGroupName;                                   		// 0x0108 (0x0008) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              SynchPosOffset;                                   		// 0x0110 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UCameraAnim*                                 CameraAnim;                                       		// 0x0114 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UCameraAnimInst*                             ActiveCameraAnimInstance;                         		// 0x0118 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              CameraAnimScale;                                  		// 0x011C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CameraAnimPlayRate;                               		// 0x0120 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CameraAnimBlendInTime;                            		// 0x0124 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CameraAnimBlendOutTime;                           		// 0x0128 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      RootBoneOption[ 0x3 ];                            		// 0x012C (0x0003) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned char                                      RootRotationOption[ 0x3 ];                        		// 0x012F (0x0003) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	TArray< class USkelControlBase* >                  MetaDataSkelControlList;                          		// 0x0134 (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class Engine.AnimNodeSequenceBlendBase
// 0x000C (0x014C - 0x0140)
class UAnimNodeSequenceBlendBase : public UAnimNodeSequence
{
public:
	TArray< struct FAnimBlendInfo >                    Anims;                                            		// 0x0140 (0x000C) [0x0000000004400049]              ( CPF_Edit | CPF_ExportObject | CPF_EditConstArray | CPF_NeedCtorLink | CPF_EditInline )
public:
};

// Class Engine.AnimNodeSequenceBlendByAim
// 0x0070 (0x01BC - 0x014C)
class UAnimNodeSequenceBlendByAim : public UAnimNodeSequenceBlendBase
{
public:
	struct FVector2D                                   Aim;                                              		// 0x014C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FVector2D                                   PreviousAim;                                      		// 0x0154 (0x0008) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FVector2D                                   HorizontalRange;                                  		// 0x015C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FVector2D                                   VerticalRange;                                    		// 0x0164 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FVector2D                                   AngleOffset;                                      		// 0x016C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       AnimName_LU;                                      		// 0x0174 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       AnimName_LC;                                      		// 0x017C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       AnimName_LD;                                      		// 0x0184 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       AnimName_CU;                                      		// 0x018C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       AnimName_CC;                                      		// 0x0194 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       AnimName_CD;                                      		// 0x019C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       AnimName_RU;                                      		// 0x01A4 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       AnimName_RC;                                      		// 0x01AC (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       AnimName_RD;                                      		// 0x01B4 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.AnimNodeFrame
// 0x002C (0x008C - 0x0060)
class UAnimNodeFrame : public UAnimObject
{
public:
	int                                                SizeX;                                            		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                SizeY;                                            		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                BorderWidth;                                      		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bDrawBox : 1;                                     		// 0x006C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bFilled : 1;                                      		// 0x006C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bTileFill : 1;                                    		// 0x006C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	struct FColor                                      BorderColor;                                      		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      FillColor;                                        		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UTexture2D*                                  FillTexture;                                      		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterial*                                   FillMaterial;                                     		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     ObjComment;                                       		// 0x0080 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.MorphNodeBase
// 0x000C (0x006C - 0x0060)
class UMorphNodeBase : public UAnimObject
{
public:
	struct FName                                       NodeName;                                         		// 0x0060 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bDrawSlider : 1;                                  		// 0x0068 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class Engine.MorphNodeMultiPose
// 0x0024 (0x0090 - 0x006C)
class UMorphNodeMultiPose : public UMorphNodeBase
{
public:
	TArray< class UMorphTarget* >                      Targets;                                          		// 0x006C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FName >                             MorphNames;                                       		// 0x0078 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< float >                                    Weights;                                          		// 0x0084 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.MorphNodePose
// 0x0010 (0x007C - 0x006C)
class UMorphNodePose : public UMorphNodeBase
{
public:
	class UMorphTarget*                                Target;                                           		// 0x006C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FName                                       MorphName;                                        		// 0x0070 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              Weight;                                           		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MorphNodeWeightBase
// 0x000C (0x0078 - 0x006C)
class UMorphNodeWeightBase : public UMorphNodeBase
{
public:
	TArray< struct FMorphNodeConn >                    NodeConns;                                        		// 0x006C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MorphNodeWeight
// 0x0004 (0x007C - 0x0078)
class UMorphNodeWeight : public UMorphNodeWeightBase
{
public:
	float                                              NodeWeight;                                       		// 0x0078 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.MorphNodeWeightByBoneAngle
// 0x003C (0x00B4 - 0x0078)
class UMorphNodeWeightByBoneAngle : public UMorphNodeWeightBase
{
public:
	float                                              Angle;                                            		// 0x0078 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              NodeWeight;                                       		// 0x007C (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FName                                       BaseBoneName;                                     		// 0x0080 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      BaseBoneAxis;                                     		// 0x0088 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      AngleBoneAxis;                                    		// 0x0089 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bInvertBaseBoneAxis : 1;                          		// 0x008C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bInvertAngleBoneAxis : 1;                         		// 0x008C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bControlMaterialParameter : 1;                    		// 0x008C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	struct FName                                       AngleBoneName;                                    		// 0x0090 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	int                                                MaterialSlotId;                                   		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       ScalarParameterName;                              		// 0x009C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInstanceConstant*                   MaterialInstanceConstant;                         		// 0x00A4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FBoneAngleMorph >                   WeightArray;                                      		// 0x00A8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.MorphNodeWeightByBoneRotation
// 0x0034 (0x00AC - 0x0078)
class UMorphNodeWeightByBoneRotation : public UMorphNodeWeightBase
{
public:
	float                                              Angle;                                            		// 0x0078 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              NodeWeight;                                       		// 0x007C (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FName                                       BoneName;                                         		// 0x0080 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      BoneAxis;                                         		// 0x0088 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bInvertBoneAxis : 1;                              		// 0x008C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bControlMaterialParameter : 1;                    		// 0x008C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	TArray< struct FBoneAngleMorph >                   WeightArray;                                      		// 0x0090 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                MaterialSlotId;                                   		// 0x009C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       ScalarParameterName;                              		// 0x00A0 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInstanceConstant*                   MaterialInstanceConstant;                         		// 0x00A8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.SkelControlBase
// 0x005C (0x00BC - 0x0060)
class USkelControlBase : public UAnimObject
{
public:
	struct FName                                       ControlName;                                      		// 0x0060 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              ControlStrength;                                  		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BlendInTime;                                      		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BlendOutTime;                                     		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      BlendType;                                        		// 0x0074 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bPostPhysicsController : 1;                       		// 0x0078 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bSetStrengthFromAnimNode : 1;                     		// 0x0078 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bInitializedCachedNodeList : 1;                   		// 0x0078 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bControlledByAnimMetada : 1;                      		// 0x0078 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bInvertMetadataWeight : 1;                        		// 0x0078 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bPropagateSetActive : 1;                          		// 0x0078 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bIgnoreWhenNotRendered : 1;                       		// 0x0078 (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bShouldTickInScript : 1;                          		// 0x0078 (0x0004) [0x0000000000000000] [0x00000080] 
	unsigned long                                      bShouldTickOwner : 1;                             		// 0x0078 (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      bEnableEaseInOut : 1;                             		// 0x0078 (0x0004) [0x0000000020020001] [0x00000200] ( CPF_Edit | CPF_EditConst | CPF_Deprecated )
	float                                              StrengthTarget;                                   		// 0x007C (0x0004) [0x0000000000000000]              
	float                                              BlendTimeToGo;                                    		// 0x0080 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FName >                             StrengthAnimNodeNameList;                         		// 0x0084 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class UAnimNode* >                         CachedNodeList;                                   		// 0x0090 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              AnimMetadataWeight;                               		// 0x009C (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                AnimMetaDataUpdateTag;                            		// 0x00A0 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              BoneScale;                                        		// 0x00A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                ControlTickTag;                                   		// 0x00A8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                IgnoreAtOrAboveLOD;                               		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USkelControlBase*                            NextControl;                                      		// 0x00B0 (0x0004) [0x0000000000000000]              
	int                                                ControlPosX;                                      		// 0x00B4 (0x0004) [0x0000000020000000]              ( CPF_Deprecated )
	int                                                ControlPosY;                                      		// 0x00B8 (0x0004) [0x0000000020000000]              ( CPF_Deprecated )
public:
};

// Class Engine.SkelControl_CCD_IK
// 0x0048 (0x0104 - 0x00BC)
class USkelControl_CCD_IK : public USkelControlBase
{
public:
	struct FVector                                     EffectorLocation;                                 		// 0x00BC (0x000C) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      EffectorLocationSpace;                            		// 0x00C8 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       EffectorSpaceBoneName;                            		// 0x00CC (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     EffectorTranslationFromBone;                      		// 0x00D4 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	int                                                NumBones;                                         		// 0x00E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                MaxPerBoneIterations;                             		// 0x00E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                IterationsCount;                                  		// 0x00E8 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              Precision;                                        		// 0x00EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bStartFromTail : 1;                               		// 0x00F0 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bNoTurnOptimization : 1;                          		// 0x00F0 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	TArray< float >                                    AngleConstraint;                                  		// 0x00F4 (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
	float                                              MaxAngleSteps;                                    		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SkelControl_Multiply
// 0x0004 (0x00C0 - 0x00BC)
class USkelControl_Multiply : public USkelControlBase
{
public:
	float                                              Multiplier;                                       		// 0x00BC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SkelControl_TwistBone
// 0x000C (0x00C8 - 0x00BC)
class USkelControl_TwistBone : public USkelControlBase
{
public:
	struct FName                                       SourceBoneName;                                   		// 0x00BC (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              TwistAngleScale;                                  		// 0x00C4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SkelControlLimb
// 0x0058 (0x0114 - 0x00BC)
class USkelControlLimb : public USkelControlBase
{
public:
	struct FVector                                     EffectorLocation;                                 		// 0x00BC (0x000C) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      EffectorLocationSpace;                            		// 0x00C8 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      JointTargetLocationSpace;                         		// 0x00C9 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      JointOffsetSpace;                                 		// 0x00CA (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      BoneAxis;                                         		// 0x00CB (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      JointAxis;                                        		// 0x00CC (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       EffectorSpaceBoneName;                            		// 0x00D0 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     JointTargetLocation;                              		// 0x00D8 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       JointTargetSpaceBoneName;                         		// 0x00E4 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     JointOffset;                                      		// 0x00EC (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       JointOffsetBoneName;                              		// 0x00F8 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bInvertBoneAxis : 1;                              		// 0x0100 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bInvertJointAxis : 1;                             		// 0x0100 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bRotateJoint : 1;                                 		// 0x0100 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bMaintainEffectorRelRot : 1;                      		// 0x0100 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bTakeRotationFromEffectorSpace : 1;               		// 0x0100 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bAllowStretching : 1;                             		// 0x0100 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	struct FVector2D                                   StretchLimits;                                    		// 0x0104 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       StretchRollBoneName;                              		// 0x010C (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SkelControlFootPlacement
// 0x0024 (0x0138 - 0x0114)
class USkelControlFootPlacement : public USkelControlLimb
{
public:
	float                                              FootOffset;                                       		// 0x0114 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      FootUpAxis;                                       		// 0x0118 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FRotator                                    FootRotOffset;                                    		// 0x011C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bInvertFootUpAxis : 1;                            		// 0x0128 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bOrientFootToGround : 1;                          		// 0x0128 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bOnlyEnableForUpAdjustment : 1;                   		// 0x0128 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	float                                              MaxUpAdjustment;                                  		// 0x012C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxDownAdjustment;                                		// 0x0130 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxFootOrientAdjust;                              		// 0x0134 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SkelControlLookAt
// 0x009C (0x0158 - 0x00BC)
class USkelControlLookAt : public USkelControlBase
{
public:
	struct FVector                                     TargetLocation;                                   		// 0x00BC (0x000C) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      TargetLocationSpace;                              		// 0x00C8 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      LookAtAxis;                                       		// 0x00C9 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      UpAxis;                                           		// 0x00CA (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      AllowRotationSpace;                               		// 0x00CB (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       TargetSpaceBoneName;                              		// 0x00CC (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bInvertLookAtAxis : 1;                            		// 0x00D4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bDefineUpAxis : 1;                                		// 0x00D4 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bInvertUpAxis : 1;                                		// 0x00D4 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bEnableLimit : 1;                                 		// 0x00D4 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bLimitBasedOnRefPose : 1;                         		// 0x00D4 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bDisableBeyondLimit : 1;                          		// 0x00D4 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bNotifyBeyondLimit : 1;                           		// 0x00D4 (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bShowLimit : 1;                                   		// 0x00D4 (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bAllowRotationX : 1;                              		// 0x00D4 (0x0004) [0x0000000000000001] [0x00000100] ( CPF_Edit )
	unsigned long                                      bAllowRotationY : 1;                              		// 0x00D4 (0x0004) [0x0000000000000001] [0x00000200] ( CPF_Edit )
	unsigned long                                      bAllowRotationZ : 1;                              		// 0x00D4 (0x0004) [0x0000000000000001] [0x00000400] ( CPF_Edit )
	float                                              TargetLocationInterpSpeed;                        		// 0x00D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     DesiredTargetLocation;                            		// 0x00DC (0x000C) [0x0000000000000000]              
	struct FVector                                     ActorSpaceLookAtTarget;                           		// 0x00E8 (0x000C) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              MaxAngle;                                         		// 0x00F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OuterMaxAngle;                                    		// 0x00F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DeadZoneAngle;                                    		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector2D                                   RotationAngleRangeX;                              		// 0x0100 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FVector2D                                   RotationAngleRangeY;                              		// 0x0108 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FVector2D                                   RotationAngleRangeZ;                              		// 0x0110 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       AllowRotationOtherBoneName;                       		// 0x0118 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              LookAtAlpha;                                      		// 0x0120 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              LookAtAlphaTarget;                                		// 0x0124 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              LookAtAlphaBlendTimeToGo;                         		// 0x0128 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FVector                                     LimitLookDir;                                     		// 0x012C (0x000C) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FVector                                     BaseLookDir;                                      		// 0x0138 (0x000C) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FVector                                     BaseBonePos;                                      		// 0x0144 (0x000C) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              LastCalcTime;                                     		// 0x0150 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                ControlBoneIndex;                                 		// 0x0154 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
public:
};

// Class Engine.SkelControlSingleBone
// 0x0030 (0x00EC - 0x00BC)
class USkelControlSingleBone : public USkelControlBase
{
public:
	unsigned long                                      bApplyTranslation : 1;                            		// 0x00BC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bApplyRotation : 1;                               		// 0x00BC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bAddTranslation : 1;                              		// 0x00BC (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bAddRotation : 1;                                 		// 0x00BC (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bRemoveMeshRotation : 1;                          		// 0x00BC (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	struct FVector                                     BoneTranslation;                                  		// 0x00C0 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      BoneTranslationSpace;                             		// 0x00CC (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      BoneRotationSpace;                                		// 0x00CD (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       TranslationSpaceBoneName;                         		// 0x00D0 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FRotator                                    BoneRotation;                                     		// 0x00D8 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       RotationSpaceBoneName;                            		// 0x00E4 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SkelControlHandlebars
// 0x0014 (0x0100 - 0x00EC)
class USkelControlHandlebars : public USkelControlSingleBone
{
public:
	unsigned char                                      WheelRollAxis;                                    		// 0x00EC (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      HandlebarRotateAxis;                              		// 0x00ED (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       WheelBoneName;                                    		// 0x00F0 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bInvertRotation : 1;                              		// 0x00F8 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	int                                                SteerWheelBoneIndex;                              		// 0x00FC (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SkelControlWheel
// 0x0018 (0x0104 - 0x00EC)
class USkelControlWheel : public USkelControlSingleBone
{
public:
	float                                              WheelDisplacement;                                		// 0x00EC (0x0004) [0x0000000000002001]              ( CPF_Edit | CPF_Transient )
	float                                              WheelMaxRenderDisplacement;                       		// 0x00F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WheelRoll;                                        		// 0x00F4 (0x0004) [0x0000000000002001]              ( CPF_Edit | CPF_Transient )
	unsigned char                                      WheelRollAxis;                                    		// 0x00F8 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      WheelSteeringAxis;                                		// 0x00F9 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              WheelSteering;                                    		// 0x00FC (0x0004) [0x0000000000002001]              ( CPF_Edit | CPF_Transient )
	unsigned long                                      bInvertWheelRoll : 1;                             		// 0x0100 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bInvertWheelSteering : 1;                         		// 0x0100 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
public:
};

// Class Engine.SkelControlSpline
// 0x0014 (0x00D0 - 0x00BC)
class USkelControlSpline : public USkelControlBase
{
public:
	int                                                SplineLength;                                     		// 0x00BC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      SplineBoneAxis;                                   		// 0x00C0 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      BoneRotMode;                                      		// 0x00C1 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bInvertSplineBoneAxis : 1;                        		// 0x00C4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              EndSplineTension;                                 		// 0x00C8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              StartSplineTension;                               		// 0x00CC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SkelControlTrail
// 0x0074 (0x0130 - 0x00BC)
class USkelControlTrail : public USkelControlBase
{
public:
	int                                                ChainLength;                                      		// 0x00BC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      ChainBoneAxis;                                    		// 0x00C0 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bInvertChainBoneAxis : 1;                         		// 0x00C4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bLimitStretch : 1;                                		// 0x00C4 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bActorSpaceFakeVel : 1;                           		// 0x00C4 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bHadValidStrength : 1;                            		// 0x00C4 (0x0004) [0x0000000000000000] [0x00000008] 
	float                                              TrailRelaxation;                                  		// 0x00C8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              StretchLimit;                                     		// 0x00CC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     FakeVelocity;                                     		// 0x00D0 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              ThisTimstep;                                      		// 0x00DC (0x0004) [0x0000000000000000]              
	TArray< struct FVector >                           TrailBoneLocations;                               		// 0x00E0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x00EC (0x0004) MISSED OFFSET
	struct FMatrix                                     OldLocalToWorld;                                  		// 0x00F0 (0x0040) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.AnimSequence
// 0x00F0 (0x012C - 0x003C)
class UAnimSequence : public UObject
{
public:
	struct FName                                       SequenceName;                                     		// 0x003C (0x0008) [0x0000000000000000]              
	TArray< struct FAnimNotifyEvent >                  Notifies;                                         		// 0x0044 (0x000C) [0x0000000004400001]              ( CPF_Edit | CPF_NeedCtorLink | CPF_EditInline )
	TArray< class UAnimMetaData* >                     MetaData;                                         		// 0x0050 (0x000C) [0x0000000004400009]              ( CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
	TArray< struct FSkelControlModifier >              BoneControlModifiers;                             		// 0x005C (0x000C) [0x0000000024400000]              ( CPF_NeedCtorLink | CPF_EditInline | CPF_Deprecated )
	float                                              SequenceLength;                                   		// 0x0068 (0x0004) [0x0000000000000000]              
	int                                                NumFrames;                                        		// 0x006C (0x0004) [0x0000000000000000]              
	float                                              RateScale;                                        		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bNoLoopingInterpolation : 1;                      		// 0x0074 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bIsAdditive : 1;                                  		// 0x0074 (0x0004) [0x0000000000000002] [0x00000002] ( CPF_Const )
	unsigned long                                      bAdditiveBuiltLooping : 1;                        		// 0x0074 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bDoNotOverrideCompression : 1;                    		// 0x0074 (0x0004) [0x0000000000000003] [0x00000008] ( CPF_Edit | CPF_Const )
	unsigned long                                      bHasBeenUsed : 1;                                 		// 0x0074 (0x0004) [0x0000000000002002] [0x00000010] ( CPF_Const | CPF_Transient )
	unsigned long                                      bWasCompressedWithoutTranslations : 1;            		// 0x0074 (0x0004) [0x0000000000000000] [0x00000020] 
	TArray< struct FRawAnimSequenceTrack >             RawAnimData;                                      		// 0x0078 (0x000C) [0x0000000020400002]              ( CPF_Const | CPF_NeedCtorLink | CPF_Deprecated )
	TArray< struct FRawAnimSequenceTrack >             RawAnimationData;                                 		// 0x0084 (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< struct FTranslationTrack >                 TranslationData;                                  		// 0x0090 (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FRotationTrack >                    RotationData;                                     		// 0x009C (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FCurveTrack >                       CurveData;                                        		// 0x00A8 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	class UAnimationCompressionAlgorithm*              CompressionScheme;                                		// 0x00B4 (0x0004) [0x0000000004020001]              ( CPF_Edit | CPF_EditConst | CPF_EditInline )
	unsigned char                                      TranslationCompressionFormat;                     		// 0x00B8 (0x0001) [0x0000000000000002]              ( CPF_Const )
	unsigned char                                      RotationCompressionFormat;                        		// 0x00B9 (0x0001) [0x0000000000000002]              ( CPF_Const )
	unsigned char                                      KeyEncodingFormat;                                		// 0x00BA (0x0001) [0x0000000000000002]              ( CPF_Const )
	TArray< int >                                      CompressedTrackOffsets;                           		// 0x00BC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< unsigned char >                            CompressedByteStream;                             		// 0x00C8 (0x000C) [0x0000000000001000]              ( CPF_Native )
	struct FPointer                                    TranslationCodec;                                 		// 0x00D4 (0x0004) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
	struct FPointer                                    RotationCodec;                                    		// 0x00D8 (0x0004) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
	TArray< struct FBoneAtom >                         AdditiveRefPose;                                  		// 0x00DC (0x000C) [0x0000000020400002]              ( CPF_Const | CPF_NeedCtorLink | CPF_Deprecated )
	TArray< struct FRawAnimSequenceTrack >             AdditiveBasePose;                                 		// 0x00E8 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	struct FName                                       AdditiveRefName;                                  		// 0x00F4 (0x0008) [0x0000000000000002]              ( CPF_Const )
	TArray< class UAnimSequence* >                     AdditiveBasePoseAnimSeq;                          		// 0x00FC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< class UAnimSequence* >                     AdditiveTargetPoseAnimSeq;                        		// 0x0108 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< class UAnimSequence* >                     RelatedAdditiveAnimSeqs;                          		// 0x0114 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                EncodingPkgVersion;                               		// 0x0120 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                CompressCommandletVersion;                        		// 0x0124 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              UseScore;                                         		// 0x0128 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
public:
};

// Class Engine.AnimSet
// 0x00E0 (0x011C - 0x003C)
class UAnimSet : public UObject
{
public:
	unsigned long                                      bAnimRotationOnly : 1;                            		// 0x003C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	TArray< struct FName >                             TrackBoneNames;                                   		// 0x0040 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< class UAnimSequence* >                     Sequences;                                        		// 0x004C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned char                                      UnknownData00[ 0x3C ];                            		// 0x0058 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.AnimSet.SequenceCache
	TArray< struct FAnimSetMeshLinkup >                LinkupCache;                                      		// 0x0094 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned char                                      UnknownData01[ 0x3C ];                            		// 0x00A0 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.AnimSet.SkelMesh2LinkupCache
	TArray< unsigned char >                            BoneUseAnimTranslation;                           		// 0x00DC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< unsigned char >                            ForceUseMeshTranslation;                          		// 0x00E8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FName >                             UseTranslationBoneNames;                          		// 0x00F4 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FName >                             ForceMeshTranslationBoneNames;                    		// 0x0100 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FName                                       PreviewSkelMeshName;                              		// 0x010C (0x0008) [0x0000000000000000]              
	struct FName                                       BestRatioSkelMeshName;                            		// 0x0114 (0x0008) [0x0000000000000000]              
public:
};

// Class Engine.MorphTarget
// 0x0018 (0x0054 - 0x003C)
class UMorphTarget : public UObject
{
public:
	TArray< int >                                      MorphLODModels;                                   		// 0x003C (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	int                                                MaterialSlotId;                                   		// 0x0048 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       ScalarParameterName;                              		// 0x004C (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MorphTargetSet
// 0x001C (0x0058 - 0x003C)
class UMorphTargetSet : public UObject
{
public:
	TArray< class UMorphTarget* >                      Targets;                                          		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class USkeletalMesh*                               BaseSkelMesh;                                     		// 0x0048 (0x0004) [0x0000000000000000]              
	struct FArray_Mirror                               RawWedgePointIndices;                             		// 0x004C (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
public:
};

// Class Engine.MorphWeightSequence
// 0x0000 (0x003C - 0x003C)
class UMorphWeightSequence : public UObject
{
public:
public:
};

// Class Engine.DecalActorBase
// 0x0008 (0x01E0 - 0x01D8)
class ADecalActorBase : public AActor
{
public:
	struct FPointer                                    VfTable_IEditorLinkSelectionInterface;            		// 0x01D8 (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	class UDecalComponent*                             Decal;                                            		// 0x01DC (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.DecalActor
// 0x0000 (0x01E0 - 0x01E0)
class ADecalActor : public ADecalActorBase
{
public:
public:
};

// Class Engine.DecalActorMovable
// 0x0000 (0x01E0 - 0x01E0)
class ADecalActorMovable : public ADecalActorBase
{
public:
public:
};

// Class Engine.DecalManager
// 0x0030 (0x0208 - 0x01D8)
class ADecalManager : public AActor
{
public:
	class UDecalComponent*                             DecalTemplate;                                    		// 0x01D8 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	TArray< class UDecalComponent* >                   PoolDecals;                                       		// 0x01DC (0x000C) [0x0000000004480008]              ( CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	int                                                MaxActiveDecals;                                  		// 0x01E8 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              DecalLifeSpan;                                    		// 0x01EC (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              DecalDepthBias;                                   		// 0x01F0 (0x0004) [0x0000000000000000]              
	struct FVector2D                                   DecalBlendRange;                                  		// 0x01F4 (0x0008) [0x0000000000000000]              
	TArray< struct FActiveDecalInfo >                  ActiveDecals;                                     		// 0x01FC (0x000C) [0x0000000000480000]              ( CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.DecalComponent
// 0x015C (0x0340 - 0x01E4)
class UDecalComponent : public UPrimitiveComponent
{
public:
	class UMaterialInterface*                          DecalMaterial;                                    		// 0x01E4 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              Width;                                            		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Height;                                           		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TileX;                                            		// 0x01F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TileY;                                            		// 0x01F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OffsetX;                                          		// 0x01F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OffsetY;                                          		// 0x01FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DecalRotation;                                    		// 0x0200 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FieldOfView;                                      		// 0x0204 (0x0004) [0x0000000000000000]              
	float                                              NearPlane;                                        		// 0x0208 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FarPlane;                                         		// 0x020C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     Location;                                         		// 0x0210 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FRotator                                    Orientation;                                      		// 0x021C (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     HitLocation;                                      		// 0x0228 (0x000C) [0x0000000000000000]              
	struct FVector                                     HitNormal;                                        		// 0x0234 (0x000C) [0x0000000000000000]              
	struct FVector                                     HitTangent;                                       		// 0x0240 (0x000C) [0x0000000000000000]              
	struct FVector                                     HitBinormal;                                      		// 0x024C (0x000C) [0x0000000000000000]              
	unsigned long                                      bNoClip : 1;                                      		// 0x0258 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bStaticDecal : 1;                                 		// 0x0258 (0x0004) [0x0000000000000002] [0x00000002] ( CPF_Const )
	unsigned long                                      bProjectOnBackfaces : 1;                          		// 0x0258 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bProjectOnHidden : 1;                             		// 0x0258 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bProjectOnBSP : 1;                                		// 0x0258 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bProjectOnStaticMeshes : 1;                       		// 0x0258 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bProjectOnSkeletalMeshes : 1;                     		// 0x0258 (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bProjectOnTerrain : 1;                            		// 0x0258 (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bFlipBackfaceDirection : 1;                       		// 0x0258 (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      bMovableDecal : 1;                                		// 0x0258 (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bHasBeenAttached : 1;                             		// 0x0258 (0x0004) [0x0000000000002000] [0x00000400] ( CPF_Transient )
	unsigned long                                      bDecalMaterialSetAtRunTime : 1;                   		// 0x0258 (0x0004) [0x0000000000000001] [0x00000800] ( CPF_Edit )
	class UPrimitiveComponent*                         HitComponent;                                     		// 0x025C (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	struct FName                                       HitBone;                                          		// 0x0260 (0x0008) [0x0000000000002000]              ( CPF_Transient )
	int                                                HitNodeIndex;                                     		// 0x0268 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                HitLevelIndex;                                    		// 0x026C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                FracturedStaticMeshComponentIndex;                		// 0x0270 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< int >                                      HitNodeIndices;                                   		// 0x0274 (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FDecalReceiver >                    DecalReceivers;                                   		// 0x0280 (0x000C) [0x0000000001680002]              ( CPF_Const | CPF_Component | CPF_NeedCtorLink )
	TArray< struct FPointer >                          StaticReceivers;                                  		// 0x028C (0x000C) [0x0000000001203002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FPointer                                    ReleaseResourcesFence;                            		// 0x0298 (0x0004) [0x0000000000203002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FPlane >                            Planes;                                           		// 0x029C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              DepthBias;                                        		// 0x02A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SlopeScaleDepthBias;                              		// 0x02AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                SortOrder;                                        		// 0x02B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BackfaceAngle;                                    		// 0x02B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector2D                                   BlendRange;                                       		// 0x02B8 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              StreamingDistanceMultiplier;                      		// 0x02C0 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned char                                      DecalTransform;                                   		// 0x02C4 (0x0001) [0x0000000000000002]              ( CPF_Const )
	unsigned char                                      FilterMode;                                       		// 0x02C5 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	TArray< class AActor* >                            Filter;                                           		// 0x02C8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class UPrimitiveComponent* >               ReceiverImages;                                   		// 0x02D4 (0x000C) [0x0000000004480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	int                                                AGRandomRotation;                                 		// 0x02E0 (0x0004) [0x0000000000000000]              
	struct FVector                                     ParentRelativeLocation;                           		// 0x02E4 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FRotator                                    ParentRelativeOrientation;                        		// 0x02F0 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x02FC (0x0004) MISSED OFFSET
	struct FMatrix                                     ParentRelLocRotMatrix;                            		// 0x0300 (0x0040) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
public:
};

// Class Engine.ActorFactoryDecal
// 0x0004 (0x0060 - 0x005C)
class UActorFactoryDecal : public UActorFactory
{
public:
	class UMaterialInterface*                          DecalMaterial;                                    		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ActorFactoryDecalMovable
// 0x0000 (0x0060 - 0x0060)
class UActorFactoryDecalMovable : public UActorFactoryDecal
{
public:
public:
};

// Class Engine.Material
// 0x052C (0x06C0 - 0x0194)
class UMaterial : public UMaterialInterface
{
public:
	class UPhysicalMaterial*                           PhysMaterial;                                     		// 0x0194 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UClass*                                      PhysicalMaterial;                                 		// 0x0198 (0x0004) [0x0000000000000000]              
	class UTexture2D*                                  PhysMaterialMask;                                 		// 0x019C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                PhysMaterialMaskUVChannel;                        		// 0x01A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UPhysicalMaterial*                           BlackPhysicalMaterial;                            		// 0x01A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UPhysicalMaterial*                           WhitePhysicalMaterial;                            		// 0x01A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColorMaterialInput                         DiffuseColor;                                     		// 0x01AC (0x0034) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScalarMaterialInput                        DiffusePower;                                     		// 0x01E0 (0x0034) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FColorMaterialInput                         SpecularColor;                                    		// 0x0214 (0x0034) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScalarMaterialInput                        SpecularPower;                                    		// 0x0248 (0x0034) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FVectorMaterialInput                        Normal;                                           		// 0x027C (0x003C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FColorMaterialInput                         EmissiveColor;                                    		// 0x02B8 (0x0034) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScalarMaterialInput                        Opacity;                                          		// 0x02EC (0x0034) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScalarMaterialInput                        OpacityMask;                                      		// 0x0320 (0x0034) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              OpacityMaskClipValue;                             		// 0x0354 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ShadowDepthBias;                                  		// 0x0358 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector2MaterialInput                       Distortion;                                       		// 0x035C (0x0038) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned char                                      BlendMode;                                        		// 0x0394 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      LightingModel;                                    		// 0x0395 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      D3D11TessellationMode;                            		// 0x0396 (0x0001) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FColorMaterialInput                         CustomLighting;                                   		// 0x0398 (0x0034) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FColorMaterialInput                         CustomSkylightDiffuse;                            		// 0x03CC (0x0034) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FVectorMaterialInput                        AnisotropicDirection;                             		// 0x0400 (0x003C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScalarMaterialInput                        TwoSidedLightingMask;                             		// 0x043C (0x0034) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FColorMaterialInput                         TwoSidedLightingColor;                            		// 0x0470 (0x0034) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FVectorMaterialInput                        WorldPositionOffset;                              		// 0x04A4 (0x003C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FVectorMaterialInput                        WorldDisplacement;                                		// 0x04E0 (0x003C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScalarMaterialInput                        TessellationMultiplier;                           		// 0x051C (0x0034) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FColorMaterialInput                         SubsurfaceInscatteringColor;                      		// 0x0550 (0x0034) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FColorMaterialInput                         SubsurfaceAbsorptionColor;                        		// 0x0584 (0x0034) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScalarMaterialInput                        SubsurfaceScatteringRadius;                       		// 0x05B8 (0x0034) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned long                                      EnableSubsurfaceScattering : 1;                   		// 0x05EC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      EnableSeparateTranslucency : 1;                   		// 0x05EC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bEnableMaskedAntialiasing : 1;                    		// 0x05EC (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      TwoSided : 1;                                     		// 0x05EC (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      TwoSidedSeparatePass : 1;                         		// 0x05EC (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bDisableDepthTest : 1;                            		// 0x05EC (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bSceneTextureRenderBehindTranslucency : 1;        		// 0x05EC (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bAllowFog : 1;                                    		// 0x05EC (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bTranslucencyReceiveDominantShadowsFromStatic : 1;		// 0x05EC (0x0004) [0x0000000000000001] [0x00000100] ( CPF_Edit )
	unsigned long                                      bTranslucencyInheritDominantShadowsFromOpaque : 1;		// 0x05EC (0x0004) [0x0000000000000001] [0x00000200] ( CPF_Edit )
	unsigned long                                      bAllowTranslucencyDoF : 1;                        		// 0x05EC (0x0004) [0x0000000000000001] [0x00000400] ( CPF_Edit )
	unsigned long                                      bUseOneLayerDistortion : 1;                       		// 0x05EC (0x0004) [0x0000000000000001] [0x00000800] ( CPF_Edit )
	unsigned long                                      bUseLitTranslucencyDepthPass : 1;                 		// 0x05EC (0x0004) [0x0000000000000001] [0x00001000] ( CPF_Edit )
	unsigned long                                      bUseLitTranslucencyPostRenderDepthPass : 1;       		// 0x05EC (0x0004) [0x0000000000000001] [0x00002000] ( CPF_Edit )
	unsigned long                                      bCastLitTranslucencyShadowAsMasked : 1;           		// 0x05EC (0x0004) [0x0000000000000001] [0x00004000] ( CPF_Edit )
	unsigned long                                      bUsedAsLightFunction : 1;                         		// 0x05EC (0x0004) [0x0000000000000003] [0x00008000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUsedWithFogVolumes : 1;                          		// 0x05EC (0x0004) [0x0000000000000003] [0x00010000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUsedAsSpecialEngineMaterial : 1;                 		// 0x05EC (0x0004) [0x0000000000200002] [0x00020000] ( CPF_Const )
	unsigned long                                      bUsedWithSkeletalMesh : 1;                        		// 0x05EC (0x0004) [0x0000000000000003] [0x00040000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUsedWithTerrain : 1;                             		// 0x05EC (0x0004) [0x0000000000000003] [0x00080000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUsedWithLandscape : 1;                           		// 0x05EC (0x0004) [0x0000000000000003] [0x00100000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUsedWithFracturedMeshes : 1;                     		// 0x05EC (0x0004) [0x0000000000000003] [0x00200000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUsedWithParticleSystem : 1;                      		// 0x05EC (0x0004) [0x0000000000000002] [0x00400000] ( CPF_Const )
	unsigned long                                      bUsedWithParticleSprites : 1;                     		// 0x05EC (0x0004) [0x0000000000000003] [0x00800000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUsedWithBeamTrails : 1;                          		// 0x05EC (0x0004) [0x0000000000000003] [0x01000000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUsedWithParticleSubUV : 1;                       		// 0x05EC (0x0004) [0x0000000000000003] [0x02000000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUsedWithSpeedTree : 1;                           		// 0x05EC (0x0004) [0x0000000000000003] [0x04000000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUsedWithStaticLighting : 1;                      		// 0x05EC (0x0004) [0x0000000000000003] [0x08000000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUsedWithLensFlare : 1;                           		// 0x05EC (0x0004) [0x0000000000000003] [0x10000000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUsedWithGammaCorrection : 1;                     		// 0x05EC (0x0004) [0x0000000000000003] [0x20000000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUsedWithInstancedMeshParticles : 1;              		// 0x05EC (0x0004) [0x0000000000000003] [0x40000000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUsedWithFluidSurfaces : 1;                       		// 0x05EC (0x0004) [0x0000000000000003] [0x80000000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUsedWithDecals : 1;                              		// 0x05F0 (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUsedWithMaterialEffect : 1;                      		// 0x05F0 (0x0004) [0x0000000000000003] [0x00000002] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUsedWithMorphTargets : 1;                        		// 0x05F0 (0x0004) [0x0000000000000003] [0x00000004] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUsedWithRadialBlur : 1;                          		// 0x05F0 (0x0004) [0x0000000000000003] [0x00000008] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUsedWithInstancedMeshes : 1;                     		// 0x05F0 (0x0004) [0x0000000000000003] [0x00000010] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUsedWithSplineMeshes : 1;                        		// 0x05F0 (0x0004) [0x0000000000000003] [0x00000020] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUsedWithAPEXMeshes : 1;                          		// 0x05F0 (0x0004) [0x0000000000000003] [0x00000040] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUsedWithScreenDoorFade : 1;                      		// 0x05F0 (0x0004) [0x0000000000000003] [0x00000080] ( CPF_Edit | CPF_Const )
	unsigned long                                      bEnableCrackFreeDisplacement : 1;                 		// 0x05F0 (0x0004) [0x0000000000000003] [0x00000100] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUseImageBasedReflections : 1;                    		// 0x05F0 (0x0004) [0x0000000000000001] [0x00000200] ( CPF_Edit )
	unsigned long                                      Wireframe : 1;                                    		// 0x05F0 (0x0004) [0x0000000000000001] [0x00000400] ( CPF_Edit )
	unsigned long                                      bPerPixelCameraVector : 1;                        		// 0x05F0 (0x0004) [0x0000000000000001] [0x00000800] ( CPF_Edit )
	unsigned long                                      bAllowLightmapSpecular : 1;                       		// 0x05F0 (0x0004) [0x0000000000000001] [0x00001000] ( CPF_Edit )
	unsigned long                                      bIsFallbackMaterial : 1;                          		// 0x05F0 (0x0004) [0x0000000020000000] [0x00002000] ( CPF_Deprecated )
	unsigned long                                      bUsesDistortion : 1;                              		// 0x05F0 (0x0004) [0x0000000000000000] [0x00004000] 
	unsigned long                                      bIsMasked : 1;                                    		// 0x05F0 (0x0004) [0x0000000000000000] [0x00008000] 
	unsigned long                                      bIsPreviewMaterial : 1;                           		// 0x05F0 (0x0004) [0x0000000000202000] [0x00010000] ( CPF_Transient )
	float                                              ImageReflectionNormalDampening;                   		// 0x05F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FPointer                                    MaterialResources[ 0x2 ];                         		// 0x05F8 (0x0008) [0x0000000000201002]              ( CPF_Const | CPF_Native )
	struct FPointer                                    DefaultMaterialInstances[ 0x3 ];                  		// 0x0600 (0x000C) [0x0000000000201002]              ( CPF_Const | CPF_Native )
	int                                                EditorX;                                          		// 0x060C (0x0004) [0x0000000000000000]              
	int                                                EditorY;                                          		// 0x0610 (0x0004) [0x0000000000000000]              
	int                                                EditorPitch;                                      		// 0x0614 (0x0004) [0x0000000000000000]              
	int                                                EditorYaw;                                        		// 0x0618 (0x0004) [0x0000000000000000]              
	TArray< class UMaterialExpression* >               Expressions;                                      		// 0x061C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< class UMaterialExpressionComment* >        EditorComments;                                   		// 0x0628 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FMaterialFunctionInfo >             MaterialFunctionInfos;                            		// 0x0634 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned char                                      UnknownData00[ 0x3C ];                            		// 0x0640 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.Material.EditorParameters
	TArray< class UTexture* >                          ReferencedTextures;                               		// 0x067C (0x000C) [0x0000000020400002]              ( CPF_Const | CPF_NeedCtorLink | CPF_Deprecated )
	TArray< struct FGuid >                             ReferencedTextureGuids;                           		// 0x0688 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	struct FBeastMaterialPropertiesContainer           BeastMaterialProperties;                          		// 0x0694 (0x002C) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
public:
};

// Class Engine.DecalMaterial
// 0x0000 (0x06C0 - 0x06C0)
class UDecalMaterial : public UMaterial
{
public:
public:
};

// Class Engine.FogVolumeDensityInfo
// 0x000C (0x01E4 - 0x01D8)
class AFogVolumeDensityInfo : public AInfo
{
public:
	class UFogVolumeDensityComponent*                  DensityComponent;                                 		// 0x01D8 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UStaticMeshComponent*                        AutomaticMeshComponent;                           		// 0x01DC (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	unsigned long                                      bEnabled : 1;                                     		// 0x01E0 (0x0004) [0x0000000000000020] [0x00000001] ( CPF_Net )
public:
};

// Class Engine.FogVolumeConeDensityInfo
// 0x0000 (0x01E4 - 0x01E4)
class AFogVolumeConeDensityInfo : public AFogVolumeDensityInfo
{
public:
public:
};

// Class Engine.FogVolumeConstantDensityInfo
// 0x0000 (0x01E4 - 0x01E4)
class AFogVolumeConstantDensityInfo : public AFogVolumeDensityInfo
{
public:
public:
};

// Class Engine.FogVolumeLinearHalfspaceDensityInfo
// 0x0000 (0x01E4 - 0x01E4)
class AFogVolumeLinearHalfspaceDensityInfo : public AFogVolumeDensityInfo
{
public:
public:
};

// Class Engine.FogVolumeSphericalDensityInfo
// 0x0000 (0x01E4 - 0x01E4)
class AFogVolumeSphericalDensityInfo : public AFogVolumeDensityInfo
{
public:
public:
};

// Class Engine.ExponentialHeightFogComponent
// 0x002F (0x0084 - 0x0055)
class UExponentialHeightFogComponent : public UActorComponent
{
public:
	unsigned long                                      bEnabled : 1;                                     		// 0x0058 (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	float                                              FogHeight;                                        		// 0x005C (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              FogDensity;                                       		// 0x0060 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              FogHeightFalloff;                                 		// 0x0064 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              FogMaxOpacity;                                    		// 0x0068 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              StartDistance;                                    		// 0x006C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              LightTerminatorAngle;                             		// 0x0070 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              OppositeLightBrightness;                          		// 0x0074 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FColor                                      OppositeLightColor;                               		// 0x0078 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              LightInscatteringBrightness;                      		// 0x007C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FColor                                      LightInscatteringColor;                           		// 0x0080 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
public:
};

// Class Engine.FogVolumeDensityComponent
// 0x0043 (0x0098 - 0x0055)
class UFogVolumeDensityComponent : public UActorComponent
{
public:
	class UMaterialInterface*                          FogMaterial;                                      		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          DefaultFogVolumeMaterial;                         		// 0x005C (0x0004) [0x0000000000000000]              
	unsigned long                                      bEnabled : 1;                                     		// 0x0060 (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	unsigned long                                      bAffectsTranslucency : 1;                         		// 0x0060 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bOnlyAffectsTranslucency : 1;                     		// 0x0060 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	struct FLinearColor                                SimpleLightColor;                                 		// 0x0064 (0x0010) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearColor                                ApproxFogLightColor;                              		// 0x0074 (0x0010) [0x0000000000000001]              ( CPF_Edit )
	float                                              StartDistance;                                    		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxDistance;                                      		// 0x0088 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class AActor* >                            FogVolumeActors;                                  		// 0x008C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.FogVolumeConeDensityComponent
// 0x0028 (0x00C0 - 0x0098)
class UFogVolumeConeDensityComponent : public UFogVolumeDensityComponent
{
public:
	float                                              MaxDensity;                                       		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     ConeVertex;                                       		// 0x009C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              ConeRadius;                                       		// 0x00A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     ConeAxis;                                         		// 0x00AC (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              ConeMaxAngle;                                     		// 0x00B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UDrawLightConeComponent*                     PreviewCone;                                      		// 0x00BC (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.FogVolumeConstantDensityComponent
// 0x0004 (0x009C - 0x0098)
class UFogVolumeConstantDensityComponent : public UFogVolumeDensityComponent
{
public:
	float                                              Density;                                          		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.FogVolumeLinearHalfspaceDensityComponent
// 0x0018 (0x00B0 - 0x0098)
class UFogVolumeLinearHalfspaceDensityComponent : public UFogVolumeDensityComponent
{
public:
	float                                              PlaneDistanceFactor;                              		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x009C (0x0004) MISSED OFFSET
	struct FPlane                                      HalfspacePlane;                                   		// 0x00A0 (0x0010) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.FogVolumeSphericalDensityComponent
// 0x0018 (0x00B0 - 0x0098)
class UFogVolumeSphericalDensityComponent : public UFogVolumeDensityComponent
{
public:
	float                                              MaxDensity;                                       		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     SphereCenter;                                     		// 0x009C (0x000C) [0x0000000000000000]              
	float                                              SphereRadius;                                     		// 0x00A8 (0x0004) [0x0000000000000000]              
	class UDrawLightRadiusComponent*                   PreviewSphereRadius;                              		// 0x00AC (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.ActorFactoryFogVolumeConstantDensityInfo
// 0x0008 (0x0064 - 0x005C)
class UActorFactoryFogVolumeConstantDensityInfo : public UActorFactory
{
public:
	class UMaterialInterface*                          SelectedMaterial;                                 		// 0x005C (0x0004) [0x0000000000000000]              
	unsigned long                                      bNothingSelected : 1;                             		// 0x0060 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class Engine.ActorFactoryFogVolumeLinearHalfspaceDensityInfo
// 0x0000 (0x0064 - 0x0064)
class UActorFactoryFogVolumeLinearHalfspaceDensityInfo : public UActorFactoryFogVolumeConstantDensityInfo
{
public:
public:
};

// Class Engine.ActorFactoryFogVolumeSphericalDensityInfo
// 0x0000 (0x0064 - 0x0064)
class UActorFactoryFogVolumeSphericalDensityInfo : public UActorFactoryFogVolumeConstantDensityInfo
{
public:
public:
};

// Class Engine.ApexDestructibleActor
// 0x0040 (0x0218 - 0x01D8)
class AApexDestructibleActor : public AActor
{
public:
	class UDynamicLightEnvironmentComponent*           LightEnvironment;                                 		// 0x01D8 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	unsigned long                                      bFractureMaterialOverride : 1;                    		// 0x01DC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	TArray< class UFractureMaterial* >                 FractureMaterials;                                		// 0x01E0 (0x000C) [0x0000000000400043]              ( CPF_Edit | CPF_Const | CPF_EditConstArray | CPF_NeedCtorLink )
	class UApexStaticDestructibleComponent*            StaticDestructibleComponent;                      		// 0x01EC (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	int                                                LOD;                                              		// 0x01F0 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	TArray< unsigned char >                            VisibilityFactors;                                		// 0x01F4 (0x000C) [0x0000000000500000]              ( CPF_NeedCtorLink )
	TArray< class USoundCue* >                         FractureSounds;                                   		// 0x0200 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< class UParticleSystem* >                   FractureParticleEffects;                          		// 0x020C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class Engine.FracturedStaticMeshActor
// 0x0068 (0x0240 - 0x01D8)
class AFracturedStaticMeshActor : public AActor
{
public:
	int                                                MaxPartsToSpawnAtOnce;                            		// 0x01D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UFracturedStaticMeshComponent*               FracturedStaticMeshComponent;                     		// 0x01DC (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	class UFracturedSkinnedMeshComponent*              SkinnedComponent;                                 		// 0x01E0 (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
	TArray< int >                                      ChunkHealth;                                      		// 0x01E4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned long                                      bHasShownMissingSoundWarning : 1;                 		// 0x01F0 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bBreakChunksOnActorTouch : 1;                     		// 0x01F0 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bShouldSaveForCheckpoint : 1;                     		// 0x01F0 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	TArray< class UClass* >                            FracturedByDamageType;                            		// 0x01F4 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              ChunkHealthScale;                                 		// 0x0200 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class UParticleSystem* >                   OverrideFragmentDestroyEffects;                   		// 0x0204 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              FractureCullMinDistance;                          		// 0x0210 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FractureCullMaxDistance;                          		// 0x0214 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FDeferredPartToSpawn >              DeferredPartsToSpawn;                             		// 0x0218 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FPhysEffectInfo                             PartImpactEffect;                                 		// 0x0224 (0x0010) [0x0000000000000000]              
	class USoundCue*                                   ExplosionFractureSound;                           		// 0x0234 (0x0004) [0x0000000000000000]              
	class USoundCue*                                   SingleChunkFractureSound;                         		// 0x0238 (0x0004) [0x0000000000000000]              
	class UMaterialInterface*                          MI_LoseChunkPreviousMaterial;                     		// 0x023C (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.FracturedStaticMeshPart
// 0x0030 (0x0270 - 0x0240)
class AFracturedStaticMeshPart : public AFracturedStaticMeshActor
{
public:
	float                                              DestroyPartRadiusFactor;                          		// 0x0240 (0x0004) [0x0000000000000000]              
	class AFracturedStaticMeshActor*                   BaseFracturedMeshActor;                           		// 0x0244 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bHasBeenRecycled : 1;                             		// 0x0248 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bChangeRBChannelWhenAsleep : 1;                   		// 0x0248 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bCompositeThatExplodesOnImpact : 1;               		// 0x0248 (0x0004) [0x0000000000000000] [0x00000004] 
	float                                              LastSpawnTime;                                    		// 0x024C (0x0004) [0x0000000000000000]              
	int                                                PartPoolIndex;                                    		// 0x0250 (0x0004) [0x0000000000000000]              
	float                                              FracPartGravScale;                                		// 0x0254 (0x0004) [0x0000000000000000]              
	unsigned char                                      AsleepRBChannel;                                  		// 0x0258 (0x0001) [0x0000000000000000]              
	struct FVector                                     OldVelocity;                                      		// 0x025C (0x000C) [0x0000000000000000]              
	float                                              CurrentVibrationLevel;                            		// 0x0268 (0x0004) [0x0000000000000000]              
	float                                              LastImpactSoundTime;                              		// 0x026C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.FractureManager
// 0x0038 (0x0210 - 0x01D8)
class AFractureManager : public AActor
{
public:
	int                                                FSMPartPoolSize;                                  		// 0x01D8 (0x0004) [0x0000000000000000]              
	unsigned long                                      bEnableAntiVibration : 1;                         		// 0x01DC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bEnableSpawnChunkEffectForRadialDamage : 1;       		// 0x01DC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	float                                              DestroyVibrationLevel;                            		// 0x01E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DestroyMinAngVel;                                 		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ExplosionVelScale;                                		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class AFracturedStaticMeshPart* >          PartPool;                                         		// 0x01EC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< int >                                      FreeParts;                                        		// 0x01F8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< class AFracturedStaticMeshActor* >         ActorsWithDeferredPartsToSpawn;                   		// 0x0204 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class Engine.ImageReflection
// 0x000C (0x01E4 - 0x01D8)
class AImageReflection : public AActor
{
public:
	unsigned long                                      bEnabled : 1;                                     		// 0x01D8 (0x0004) [0x0000000000000020] [0x00000001] ( CPF_Net )
	class UImageReflectionComponent*                   ReflectionComponent;                              		// 0x01DC (0x0004) [0x0000000024080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline | CPF_Deprecated )
	class UImageBasedReflectionComponent*              ImageReflectionComponent;                         		// 0x01E0 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.ImageReflectionSceneCapture
// 0x0008 (0x01EC - 0x01E4)
class AImageReflectionSceneCapture : public AImageReflection
{
public:
	float                                              DepthRange;                                       		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ColorRange;                                       		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ImageReflectionShadowPlane
// 0x0008 (0x01E0 - 0x01D8)
class AImageReflectionShadowPlane : public AActor
{
public:
	unsigned long                                      bEnabled : 1;                                     		// 0x01D8 (0x0004) [0x0000000000000020] [0x00000001] ( CPF_Net )
	class UImageReflectionShadowPlaneComponent*        ReflectionShadowComponent;                        		// 0x01DC (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.ImageReflectionComponent
// 0x0007 (0x005C - 0x0055)
class UImageReflectionComponent : public UActorComponent
{
public:
	class UTexture2D*                                  ReflectionTexture;                                		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ImageReflectionShadowPlaneComponent
// 0x001C (0x0200 - 0x01E4)
class UImageReflectionShadowPlaneComponent : public UPrimitiveComponent
{
public:
	unsigned long                                      bEnabled : 1;                                     		// 0x01E4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned char                                      UnknownData00[ 0x8 ];                             		// 0x01E8 (0x0008) MISSED OFFSET
	struct FPlane                                      ReflectionPlane;                                  		// 0x01F0 (0x0010) [0x0000000000000000]              
public:
};

// Class Engine.ApexComponentBase
// 0x0014 (0x0204 - 0x01F0)
class UApexComponentBase : public UMeshComponent
{
public:
	struct FPointer                                    ComponentBaseResources;                           		// 0x01F0 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FRenderCommandFence_Mirror                  ReleaseResourcesFence;                            		// 0x01F4 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	class UApexAsset*                                  Asset;                                            		// 0x01F8 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FColor                                      WireframeColor;                                   		// 0x01FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bAssetChanged : 1;                                		// 0x0200 (0x0004) [0x0000000000000002] [0x00000001] ( CPF_Const )
public:
};

// Class Engine.ApexDynamicComponent
// 0x0004 (0x0208 - 0x0204)
class UApexDynamicComponent : public UApexComponentBase
{
public:
	struct FPointer                                    ComponentDynamicResources;                        		// 0x0204 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.ApexStaticComponent
// 0x0000 (0x0204 - 0x0204)
class UApexStaticComponent : public UApexComponentBase
{
public:
public:
};

// Class Engine.ApexStaticDestructibleComponent
// 0x0014 (0x0218 - 0x0204)
class UApexStaticDestructibleComponent : public UApexStaticComponent
{
public:
	float                                              SleepEnergyThreshold;                             		// 0x0204 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SleepDamping;                                     		// 0x0208 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FPointer                                    ApexDestructibleActor;                            		// 0x020C (0x0004) [0x0000000000201000]              ( CPF_Native )
	struct FPointer                                    ApexDestructiblePreview;                          		// 0x0210 (0x0004) [0x0000000000201000]              ( CPF_Native )
	unsigned long                                      bIsThumbnailComponent : 1;                        		// 0x0214 (0x0004) [0x0000000000001000] [0x00000001] ( CPF_Native )
public:
};

// Class Engine.FracturedBaseComponent
// 0x0020 (0x028C - 0x026C)
class UFracturedBaseComponent : public UStaticMeshComponent
{
public:
	struct FPointer                                    ComponentBaseResources;                           		// 0x026C (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FRenderCommandFence_Mirror                  ReleaseResourcesFence;                            		// 0x0270 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< unsigned char >                            VisibleFragments;                                 		// 0x0274 (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	unsigned long                                      bVisibilityHasChanged : 1;                        		// 0x0280 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bVisibilityReset : 1;                             		// 0x0280 (0x0004) [0x0000000000002002] [0x00000002] ( CPF_Const | CPF_Transient )
	unsigned long                                      bInitialVisibilityValue : 1;                      		// 0x0280 (0x0004) [0x0000000000000002] [0x00000004] ( CPF_Const )
	unsigned long                                      bUseDynamicIndexBuffer : 1;                       		// 0x0280 (0x0004) [0x0000000000000002] [0x00000008] ( CPF_Const )
	unsigned long                                      bUseDynamicIBWithHiddenFragments : 1;             		// 0x0280 (0x0004) [0x0000000000000002] [0x00000010] ( CPF_Const )
	int                                                NumResourceIndices;                               		// 0x0284 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                bResetStaticMesh;                                 		// 0x0288 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
public:
};

// Class Engine.FracturedSkinnedMeshComponent
// 0x0020 (0x02AC - 0x028C)
class UFracturedSkinnedMeshComponent : public UFracturedBaseComponent
{
public:
	struct FPointer                                    ComponentSkinResources;                           		// 0x028C (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FMatrix >                           FragmentTransforms;                               		// 0x0290 (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	TArray< class UFracturedStaticMeshComponent* >     DependentComponents;                              		// 0x029C (0x000C) [0x000000000448200A]              ( CPF_Const | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	unsigned long                                      bBecameVisible : 1;                               		// 0x02A8 (0x0004) [0x0000000000002002] [0x00000001] ( CPF_Const | CPF_Transient )
	unsigned long                                      bFragmentTransformsChanged : 1;                   		// 0x02A8 (0x0004) [0x0000000000002002] [0x00000002] ( CPF_Const | CPF_Transient )
public:
};

// Class Engine.FracturedStaticMeshComponent
// 0x0040 (0x02CC - 0x028C)
class UFracturedStaticMeshComponent : public UFracturedBaseComponent
{
public:
	TArray< unsigned char >                            FragmentNeighborsVisible;                         		// 0x028C (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	struct FBox                                        VisibleBox;                                       		// 0x0298 (0x001C) [0x0000000000000002]              ( CPF_Const )
	unsigned long                                      bUseSkinnedRendering : 1;                         		// 0x02B4 (0x0004) [0x0000000000000002] [0x00000001] ( CPF_Const )
	unsigned long                                      bUseVisibleVertsForBounds : 1;                    		// 0x02B4 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bTopFragmentsRootNonDestroyable : 1;              		// 0x02B4 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bBottomFragmentsRootNonDestroyable : 1;           		// 0x02B4 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	float                                              TopBottomFragmentDistThreshold;                   		// 0x02B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          LoseChunkOutsideMaterialOverride;                 		// 0x02BC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FragmentBoundsMaxZ;                               		// 0x02C0 (0x0004) [0x0000000000000000]              
	float                                              FragmentBoundsMinZ;                               		// 0x02C4 (0x0004) [0x0000000000000000]              
	class UFracturedSkinnedMeshComponent*              SkinnedComponent;                                 		// 0x02C8 (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.ImageBasedReflectionComponent
// 0x0018 (0x0284 - 0x026C)
class UImageBasedReflectionComponent : public UStaticMeshComponent
{
public:
	unsigned long                                      bEnabled : 1;                                     		// 0x026C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bTwoSided : 1;                                    		// 0x026C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	class UTexture2D*                                  ReflectionTexture;                                		// 0x0270 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearColor                                ReflectionColor;                                  		// 0x0274 (0x0010) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.InstancedStaticMeshComponent
// 0x0058 (0x02C4 - 0x026C)
class UInstancedStaticMeshComponent : public UStaticMeshComponent
{
public:
	TArray< struct FInstancedStaticMeshInstanceData >  PerInstanceData;                                  		// 0x026C (0x000C) [0x0000000020400000]              ( CPF_NeedCtorLink | CPF_Deprecated )
	TArray< struct FInstancedStaticMeshInstanceData >  PerInstanceSMData;                                		// 0x0278 (0x000C) [0x0000000000001000]              ( CPF_Native )
	int                                                NumPendingLightmaps;                              		// 0x0284 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                ComponentJoinKey;                                 		// 0x0288 (0x0004) [0x0000000000000000]              
	TArray< struct FInstancedStaticMeshMappingInfo >   CachedMappings;                                   		// 0x028C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                InstancingRandomSeed;                             		// 0x0298 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                InstanceStartCullDistance;                        		// 0x029C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                InstanceEndCullDistance;                          		// 0x02A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FBitArray_Mirror                            SelectedInstances;                                		// 0x02A4 (0x001C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	unsigned long                                      bDontResolveInstancedLightmaps : 1;               		// 0x02C0 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class Engine.SplineMeshComponent
// 0x0068 (0x02D4 - 0x026C)
class USplineMeshComponent : public UStaticMeshComponent
{
public:
	struct FSplineMeshParams                           SplineParams;                                     		// 0x026C (0x0058) [0x0000000000000000]              
	struct FVector                                     SplineXDir;                                       		// 0x02C4 (0x000C) [0x0000000000000000]              
	unsigned long                                      bSmoothInterpRollScale : 1;                       		// 0x02D0 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class Engine.ApexAsset
// 0x003C (0x0078 - 0x003C)
class UApexAsset : public UObject
{
public:
	struct FString                                     OriginalApexName;                                 		// 0x003C (0x000C) [0x0000000004400002]              ( CPF_Const | CPF_NeedCtorLink | CPF_EditInline )
	TArray< class UApexComponentBase* >                ApexComponents;                                   		// 0x0048 (0x000C) [0x000000000408300A]              ( CPF_Const | CPF_ExportObject | CPF_Native | CPF_Transient | CPF_Component | CPF_EditInline )
	TArray< class UApexAsset* >                        NamedReferences;                                  		// 0x0054 (0x000C) [0x0000000014400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink | CPF_EditInline | CPF_EditInlineUse )
	struct FString                                     SourceFilePath;                                   		// 0x0060 (0x000C) [0x0000000000420003]              ( CPF_Edit | CPF_Const | CPF_EditConst | CPF_NeedCtorLink )
	struct FString                                     SourceFileTimestamp;                              		// 0x006C (0x000C) [0x0000000000420003]              ( CPF_Edit | CPF_Const | CPF_EditConst | CPF_NeedCtorLink )
public:
};

// Class Engine.ApexClothingAsset
// 0x0050 (0x00C8 - 0x0078)
class UApexClothingAsset : public UApexAsset
{
public:
	struct FPointer                                    MApexAsset;                                       		// 0x0078 (0x0004) [0x0000000000001000]              ( CPF_Native )
	TArray< class UMaterialInterface* >                Materials;                                        		// 0x007C (0x000C) [0x0000000000400043]              ( CPF_Edit | CPF_Const | CPF_EditConstArray | CPF_NeedCtorLink )
	class UApexGenericAsset*                           ApexClothingLibrary;                              		// 0x0088 (0x0004) [0x0000000020000002]              ( CPF_Const | CPF_Deprecated )
	unsigned long                                      bUseHardwareCloth : 1;                            		// 0x008C (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	unsigned long                                      bFallbackSkinning : 1;                            		// 0x008C (0x0004) [0x0000000000000003] [0x00000002] ( CPF_Edit | CPF_Const )
	unsigned long                                      bSlowStart : 1;                                   		// 0x008C (0x0004) [0x0000000000000003] [0x00000004] ( CPF_Edit | CPF_Const )
	unsigned long                                      bRecomputeNormals : 1;                            		// 0x008C (0x0004) [0x0000000000000003] [0x00000008] ( CPF_Edit | CPF_Const )
	unsigned long                                      bResetAfterTeleport : 1;                          		// 0x008C (0x0004) [0x0000000000000003] [0x00000010] ( CPF_Edit | CPF_Const )
	unsigned long                                      bHasUniqueAssetMaterialNames : 1;                 		// 0x008C (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      IgnoreInitialTrigger : 1;                         		// 0x008C (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	int                                                UVChannelForTangentUpdate;                        		// 0x0090 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              MaxDistanceBlendTime;                             		// 0x0094 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              ContinuousRotationThreshold;                      		// 0x0098 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              ContinuousDistanceThreshold;                      		// 0x009C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              LodWeightsMaxDistance;                            		// 0x00A0 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              LodWeightsDistanceWeight;                         		// 0x00A4 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              LodWeightsBias;                                   		// 0x00A8 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              LodWeightsBenefitsBias;                           		// 0x00AC (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              LODDecayTime;                                     		// 0x00B0 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	class USoundCue*                                   SoundOnMove;                                      		// 0x00B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   SoundOnRest;                                      		// 0x00B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   SoundWhileMoving;                                 		// 0x00BC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SpeedThresholdOnMove;                             		// 0x00C0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SpeedThresholdOnRest;                             		// 0x00C4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ApexDestructibleAsset
// 0x0118 (0x0190 - 0x0078)
class UApexDestructibleAsset : public UApexAsset
{
public:
	struct FPointer                                    MApexAsset;                                       		// 0x0078 (0x0004) [0x0000000000001000]              ( CPF_Native )
	TArray< class UMaterialInterface* >                Materials;                                        		// 0x007C (0x000C) [0x0000000000400043]              ( CPF_Edit | CPF_Const | CPF_EditConstArray | CPF_NeedCtorLink )
	TArray< class UFractureMaterial* >                 FractureMaterials;                                		// 0x0088 (0x000C) [0x0000000000400043]              ( CPF_Edit | CPF_Const | CPF_EditConstArray | CPF_NeedCtorLink )
	class UPhysicalMaterial*                           DefaultPhysMaterial;                              		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FPointer                                    MDestructibleThumbnailComponent;                  		// 0x0098 (0x0004) [0x0000000000001000]              ( CPF_Native )
	unsigned long                                      bHasUniqueAssetMaterialNames : 1;                 		// 0x009C (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bDynamic : 1;                                     		// 0x009C (0x0004) [0x0000000020000000] [0x00000002] ( CPF_Deprecated )
	struct FString                                     CrumbleEmitterName;                               		// 0x00A0 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     DustEmitterName;                                  		// 0x00AC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FNxDestructibleParameters                   DestructibleParameters;                           		// 0x00B8 (0x00D8) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.ApexGenericAsset
// 0x0010 (0x0088 - 0x0078)
class UApexGenericAsset : public UApexAsset
{
public:
	struct FPointer                                    MApexAsset;                                       		// 0x0078 (0x0004) [0x0000000000001000]              ( CPF_Native )
	TArray< class UMaterialInterface* >                Materials;                                        		// 0x007C (0x000C) [0x0000000000400043]              ( CPF_Edit | CPF_Const | CPF_EditConstArray | CPF_NeedCtorLink )
public:
};

// Class Engine.InterpFilter
// 0x000C (0x0048 - 0x003C)
class UInterpFilter : public UObject
{
public:
	struct FString                                     Caption;                                          		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.InterpFilter_Classes
// 0x0010 (0x0058 - 0x0048)
class UInterpFilter_Classes : public UInterpFilter
{
public:
	class UClass*                                      ClassToFilterBy;                                  		// 0x0048 (0x0004) [0x0000000000000000]              
	TArray< class UClass* >                            TrackClasses;                                     		// 0x004C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.InterpFilter_Custom
// 0x000C (0x0054 - 0x0048)
class UInterpFilter_Custom : public UInterpFilter
{
public:
	TArray< class UInterpGroup* >                      GroupsToInclude;                                  		// 0x0048 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.InterpGroup
// 0x002C (0x0068 - 0x003C)
class UInterpGroup : public UObject
{
public:
	struct FPointer                                    VfTable_FInterpEdInputInterface;                  		// 0x003C (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	TArray< class UInterpTrack* >                      InterpTracks;                                     		// 0x0040 (0x000C) [0x0000000000400008]              ( CPF_ExportObject | CPF_NeedCtorLink )
	struct FName                                       GroupName;                                        		// 0x004C (0x0008) [0x0000000000000000]              
	struct FColor                                      GroupColor;                                       		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class UAnimSet* >                          GroupAnimSets;                                    		// 0x0058 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      bCollapsed : 1;                                   		// 0x0064 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bVisible : 1;                                     		// 0x0064 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bIsFolder : 1;                                    		// 0x0064 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bIsParented : 1;                                  		// 0x0064 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bIsSelected : 1;                                  		// 0x0064 (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
public:
};

// Class Engine.InterpGroupAI
// 0x0010 (0x0078 - 0x0068)
class UInterpGroupAI : public UInterpGroup
{
public:
	class UClass*                                      PreviewPawnClass;                                 		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       StageMarkGroup;                                   		// 0x006C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      SnapToRootBoneLocationWhenFinished : 1;           		// 0x0074 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bNoEncroachmentCheck : 1;                         		// 0x0074 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bDisableWorldCollision : 1;                       		// 0x0074 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bIgnoreLegacyHeightAdjust : 1;                    		// 0x0074 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bRecreatePreviewPawn : 1;                         		// 0x0074 (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	unsigned long                                      bRefreshStageMarkGroup : 1;                       		// 0x0074 (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
public:
};

// Class Engine.InterpGroupCamera
// 0x003C (0x00A4 - 0x0068)
class UInterpGroupCamera : public UInterpGroup
{
public:
	class UCameraAnim*                                 CameraAnimInst;                                   		// 0x0068 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FCameraPreviewInfo                          Target;                                           		// 0x006C (0x0034) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              CompressTolerance;                                		// 0x00A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.InterpGroupDirector
// 0x0000 (0x0068 - 0x0068)
class UInterpGroupDirector : public UInterpGroup
{
public:
public:
};

// Class Engine.InterpGroupInst
// 0x0014 (0x0050 - 0x003C)
class UInterpGroupInst : public UObject
{
public:
	class UInterpGroup*                                Group;                                            		// 0x003C (0x0004) [0x0000000000000000]              
	class AActor*                                      GroupActor;                                       		// 0x0040 (0x0004) [0x0000000000000000]              
	TArray< class UInterpTrackInst* >                  TrackInst;                                        		// 0x0044 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.InterpGroupInstAI
// 0x0014 (0x0064 - 0x0050)
class UInterpGroupInstAI : public UInterpGroupInst
{
public:
	class UInterpGroupAI*                              AIGroup;                                          		// 0x0050 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      SavedPhysics;                                     		// 0x0054 (0x0001) [0x0000000000000000]              
	unsigned long                                      bSavedNoEncroachCheck : 1;                        		// 0x0058 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bSavedCollideActors : 1;                          		// 0x0058 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bSavedBlockActors : 1;                            		// 0x0058 (0x0004) [0x0000000000000000] [0x00000004] 
	class APawn*                                       PreviewPawn;                                      		// 0x005C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class AActor*                                      StageMarkActor;                                   		// 0x0060 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.InterpGroupInstCamera
// 0x0000 (0x0050 - 0x0050)
class UInterpGroupInstCamera : public UInterpGroupInst
{
public:
public:
};

// Class Engine.InterpGroupInstDirector
// 0x0000 (0x0050 - 0x0050)
class UInterpGroupInstDirector : public UInterpGroupInst
{
public:
public:
};

// Class Engine.InterpTrackBoolProp
// 0x0014 (0x0094 - 0x0080)
class UInterpTrackBoolProp : public UInterpTrack
{
public:
	TArray< struct FBoolTrackKey >                     BoolTrack;                                        		// 0x0080 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FName                                       PropertyName;                                     		// 0x008C (0x0008) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
public:
};

// Class Engine.InterpTrackDirector
// 0x0010 (0x0090 - 0x0080)
class UInterpTrackDirector : public UInterpTrack
{
public:
	TArray< struct FDirectorTrackCut >                 CutTrack;                                         		// 0x0080 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned long                                      bSimulateCameraCutsOnClients : 1;                 		// 0x008C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.InterpTrackEvent
// 0x0010 (0x0090 - 0x0080)
class UInterpTrackEvent : public UInterpTrack
{
public:
	TArray< struct FEventTrackKey >                    EventTrack;                                       		// 0x0080 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned long                                      bFireEventsWhenForwards : 1;                      		// 0x008C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bFireEventsWhenBackwards : 1;                     		// 0x008C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bFireEventsWhenJumpingForwards : 1;               		// 0x008C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
public:
};

// Class Engine.InterpTrackFaceFX
// 0x0028 (0x00A8 - 0x0080)
class UInterpTrackFaceFX : public UInterpTrack
{
public:
	TArray< class UFaceFXAnimSet* >                    FaceFXAnimSets;                                   		// 0x0080 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FFaceFXTrackKey >                   FaceFXSeqs;                                       		// 0x008C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class UFaceFXAsset*                                CachedActorFXAsset;                               		// 0x0098 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FFaceFXSoundCueKey >                FaceFXSoundCueKeys;                               		// 0x009C (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
public:
};

// Class Engine.InterpTrackFloatBase
// 0x0014 (0x0094 - 0x0080)
class UInterpTrackFloatBase : public UInterpTrack
{
public:
	struct FInterpCurveFloat                           FloatTrack;                                       		// 0x0080 (0x0010) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              CurveTension;                                     		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.InterpTrackAnimControl
// 0x0024 (0x00B8 - 0x0094)
class UInterpTrackAnimControl : public UInterpTrackFloatBase
{
public:
	TArray< class UAnimSet* >                          AnimSets;                                         		// 0x0094 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FName                                       SlotName;                                         		// 0x00A0 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FAnimControlTrackKey >              AnimSeqs;                                         		// 0x00A8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned long                                      bEnableRootMotion : 1;                            		// 0x00B4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bSkipAnimNotifiers : 1;                           		// 0x00B4 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
public:
};

// Class Engine.InterpTrackFade
// 0x0004 (0x0098 - 0x0094)
class UInterpTrackFade : public UInterpTrackFloatBase
{
public:
	unsigned long                                      bPersistFade : 1;                                 		// 0x0094 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.InterpTrackFloatMaterialParam
// 0x001C (0x00B0 - 0x0094)
class UInterpTrackFloatMaterialParam : public UInterpTrackFloatBase
{
public:
	TArray< struct FMaterialReferenceList >            Materials;                                        		// 0x0094 (0x000C) [0x0000000000480003]              ( CPF_Edit | CPF_Const | CPF_Component | CPF_NeedCtorLink )
	class UMaterialInterface*                          Material;                                         		// 0x00A0 (0x0004) [0x0000000020000002]              ( CPF_Const | CPF_Deprecated )
	struct FName                                       ParamName;                                        		// 0x00A4 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bNeedsMaterialRefsUpdate : 1;                     		// 0x00AC (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class Engine.InterpTrackFloatParticleParam
// 0x0008 (0x009C - 0x0094)
class UInterpTrackFloatParticleParam : public UInterpTrackFloatBase
{
public:
	struct FName                                       ParamName;                                        		// 0x0094 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.InterpTrackFloatProp
// 0x0008 (0x009C - 0x0094)
class UInterpTrackFloatProp : public UInterpTrackFloatBase
{
public:
	struct FName                                       PropertyName;                                     		// 0x0094 (0x0008) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
public:
};

// Class Engine.InterpTrackMorphWeight
// 0x0008 (0x009C - 0x0094)
class UInterpTrackMorphWeight : public UInterpTrackFloatBase
{
public:
	struct FName                                       MorphNodeName;                                    		// 0x0094 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.InterpTrackMoveAxis
// 0x0010 (0x00A4 - 0x0094)
class UInterpTrackMoveAxis : public UInterpTrackFloatBase
{
public:
	unsigned char                                      MoveAxis;                                         		// 0x0094 (0x0001) [0x0000000000000000]              
	struct FInterpLookupTrack                          LookupTrack;                                      		// 0x0098 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.InterpTrackSkelControlScale
// 0x0008 (0x009C - 0x0094)
class UInterpTrackSkelControlScale : public UInterpTrackFloatBase
{
public:
	struct FName                                       SkelControlName;                                  		// 0x0094 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.InterpTrackSkelControlStrength
// 0x0008 (0x009C - 0x0094)
class UInterpTrackSkelControlStrength : public UInterpTrackFloatBase
{
public:
	struct FName                                       SkelControlName;                                  		// 0x0094 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.InterpTrackSlomo
// 0x0000 (0x0094 - 0x0094)
class UInterpTrackSlomo : public UInterpTrackFloatBase
{
public:
public:
};

// Class Engine.InterpTrackHeadTracking
// 0x0044 (0x00C4 - 0x0080)
class UInterpTrackHeadTracking : public UInterpTrack
{
public:
	TArray< struct FHeadTrackingKey >                  HeadTrackingTrack;                                		// 0x0080 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FName >                             TrackControllerName;                              		// 0x008C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              LookAtActorRadius;                                		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bDisableBeyondLimit : 1;                          		// 0x009C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bLookAtPawns : 1;                                 		// 0x009C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	float                                              MaxLookAtTime;                                    		// 0x00A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MinLookAtTime;                                    		// 0x00A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxInterestTime;                                  		// 0x00A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class UClass* >                            ActorClassesToLookAt;                             		// 0x00AC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FName >                             TargetBoneNames;                                  		// 0x00B8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.InterpTrackLinearColorBase
// 0x0014 (0x0094 - 0x0080)
class UInterpTrackLinearColorBase : public UInterpTrack
{
public:
	struct FInterpCurveLinearColor                     LinearColorTrack;                                 		// 0x0080 (0x0010) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              CurveTension;                                     		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.InterpTrackLinearColorProp
// 0x0008 (0x009C - 0x0094)
class UInterpTrackLinearColorProp : public UInterpTrackLinearColorBase
{
public:
	struct FName                                       PropertyName;                                     		// 0x0094 (0x0008) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
public:
};

// Class Engine.InterpTrackMove
// 0x0042 (0x00C2 - 0x0080)
class UInterpTrackMove : public UInterpTrack
{
public:
	struct FInterpCurveVector                          PosTrack;                                         		// 0x0080 (0x0010) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FInterpCurveVector                          EulerTrack;                                       		// 0x0090 (0x0010) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FInterpLookupTrack                          LookupTrack;                                      		// 0x00A0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FName                                       LookAtGroupName;                                  		// 0x00AC (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              LinCurveTension;                                  		// 0x00B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AngCurveTension;                                  		// 0x00B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bUseQuatInterpolation : 1;                        		// 0x00BC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bShowArrowAtKeys : 1;                             		// 0x00BC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bDisableMovement : 1;                             		// 0x00BC (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bShowTranslationOnCurveEd : 1;                    		// 0x00BC (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bShowRotationOnCurveEd : 1;                       		// 0x00BC (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bHide3DTrack : 1;                                 		// 0x00BC (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned char                                      MoveFrame;                                        		// 0x00C0 (0x0001) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
	unsigned char                                      RotMode;                                          		// 0x00C1 (0x0001) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.InterpTrackParticleReplay
// 0x0014 (0x0094 - 0x0080)
class UInterpTrackParticleReplay : public UInterpTrack
{
public:
	TArray< struct FParticleReplayTrackKey >           TrackKeys;                                        		// 0x0080 (0x000C) [0x0000000004400000]              ( CPF_NeedCtorLink | CPF_EditInline )
	unsigned long                                      bIsCapturingReplay : 1;                           		// 0x008C (0x0004) [0x0000000000002002] [0x00000001] ( CPF_Const | CPF_Transient )
	float                                              FixedTimeStep;                                    		// 0x0090 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
public:
};

// Class Engine.InterpTrackToggle
// 0x0010 (0x0090 - 0x0080)
class UInterpTrackToggle : public UInterpTrack
{
public:
	TArray< struct FToggleTrackKey >                   ToggleTrack;                                      		// 0x0080 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned long                                      bActivateSystemEachUpdate : 1;                    		// 0x008C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bActivateWithJustAttachedFlag : 1;                		// 0x008C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bFireEventsWhenForwards : 1;                      		// 0x008C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bFireEventsWhenBackwards : 1;                     		// 0x008C (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bFireEventsWhenJumpingForwards : 1;               		// 0x008C (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
public:
};

// Class Engine.InterpTrackVectorBase
// 0x0014 (0x0094 - 0x0080)
class UInterpTrackVectorBase : public UInterpTrack
{
public:
	struct FInterpCurveVector                          VectorTrack;                                      		// 0x0080 (0x0010) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              CurveTension;                                     		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.InterpTrackAudioMaster
// 0x0000 (0x0094 - 0x0094)
class UInterpTrackAudioMaster : public UInterpTrackVectorBase
{
public:
public:
};

// Class Engine.InterpTrackColorProp
// 0x0008 (0x009C - 0x0094)
class UInterpTrackColorProp : public UInterpTrackVectorBase
{
public:
	struct FName                                       PropertyName;                                     		// 0x0094 (0x0008) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
public:
};

// Class Engine.InterpTrackColorScale
// 0x0000 (0x0094 - 0x0094)
class UInterpTrackColorScale : public UInterpTrackVectorBase
{
public:
public:
};

// Class Engine.InterpTrackSound
// 0x0010 (0x00A4 - 0x0094)
class UInterpTrackSound : public UInterpTrackVectorBase
{
public:
	TArray< struct FSoundTrackKey >                    Sounds;                                           		// 0x0094 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned long                                      bPlayOnReverse : 1;                               		// 0x00A0 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bContinueSoundOnMatineeEnd : 1;                   		// 0x00A0 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bSuppressSubtitles : 1;                           		// 0x00A0 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bTreatAsDialogue : 1;                             		// 0x00A0 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
public:
};

// Class Engine.InterpTrackVectorMaterialParam
// 0x001C (0x00B0 - 0x0094)
class UInterpTrackVectorMaterialParam : public UInterpTrackVectorBase
{
public:
	TArray< struct FMaterialReferenceList >            Materials;                                        		// 0x0094 (0x000C) [0x0000000000480003]              ( CPF_Edit | CPF_Const | CPF_Component | CPF_NeedCtorLink )
	class UMaterialInterface*                          Material;                                         		// 0x00A0 (0x0004) [0x0000000020000002]              ( CPF_Const | CPF_Deprecated )
	struct FName                                       ParamName;                                        		// 0x00A4 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bNeedsMaterialRefsUpdate : 1;                     		// 0x00AC (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class Engine.InterpTrackVectorProp
// 0x0008 (0x009C - 0x0094)
class UInterpTrackVectorProp : public UInterpTrackVectorBase
{
public:
	struct FName                                       PropertyName;                                     		// 0x0094 (0x0008) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
public:
};

// Class Engine.InterpTrackVisibility
// 0x0010 (0x0090 - 0x0080)
class UInterpTrackVisibility : public UInterpTrack
{
public:
	TArray< struct FVisibilityTrackKey >               VisibilityTrack;                                  		// 0x0080 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned long                                      bFireEventsWhenForwards : 1;                      		// 0x008C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bFireEventsWhenBackwards : 1;                     		// 0x008C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bFireEventsWhenJumpingForwards : 1;               		// 0x008C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
public:
};

// Class Engine.InterpTrackInst
// 0x0000 (0x003C - 0x003C)
class UInterpTrackInst : public UObject
{
public:
public:
};

// Class Engine.InterpTrackInstAnimControl
// 0x001C (0x0058 - 0x003C)
class UInterpTrackInstAnimControl : public UInterpTrackInst
{
public:
	float                                              LastUpdatePosition;                               		// 0x003C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     InitPosition;                                     		// 0x0040 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FRotator                                    InitRotation;                                     		// 0x004C (0x000C) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.InterpTrackInstAudioMaster
// 0x0000 (0x003C - 0x003C)
class UInterpTrackInstAudioMaster : public UInterpTrackInst
{
public:
public:
};

// Class Engine.InterpTrackInstColorScale
// 0x0000 (0x003C - 0x003C)
class UInterpTrackInstColorScale : public UInterpTrackInst
{
public:
public:
};

// Class Engine.InterpTrackInstDirector
// 0x0008 (0x0044 - 0x003C)
class UInterpTrackInstDirector : public UInterpTrackInst
{
public:
	class AActor*                                      OldViewTarget;                                    		// 0x003C (0x0004) [0x0000000000000000]              
	struct FRenderingPerformanceOverrides              OldRenderingOverrides;                            		// 0x0040 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.InterpTrackInstEvent
// 0x0004 (0x0040 - 0x003C)
class UInterpTrackInstEvent : public UInterpTrackInst
{
public:
	float                                              LastUpdatePosition;                               		// 0x003C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.InterpTrackInstFaceFX
// 0x0008 (0x0044 - 0x003C)
class UInterpTrackInstFaceFX : public UInterpTrackInst
{
public:
	unsigned long                                      bFirstUpdate : 1;                                 		// 0x003C (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	float                                              LastUpdatePosition;                               		// 0x0040 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.InterpTrackInstFade
// 0x0000 (0x003C - 0x003C)
class UInterpTrackInstFade : public UInterpTrackInst
{
public:
public:
};

// Class Engine.InterpTrackInstFloatMaterialParam
// 0x0010 (0x004C - 0x003C)
class UInterpTrackInstFloatMaterialParam : public UInterpTrackInst
{
public:
	TArray< struct FFloatMaterialParamMICData >        MICInfos;                                         		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class UInterpTrackFloatMaterialParam*              InstancedTrack;                                   		// 0x0048 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.InterpTrackInstFloatParticleParam
// 0x0004 (0x0040 - 0x003C)
class UInterpTrackInstFloatParticleParam : public UInterpTrackInst
{
public:
	float                                              ResetFloat;                                       		// 0x003C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.InterpTrackInstHeadTracking
// 0x0054 (0x0090 - 0x003C)
class UInterpTrackInstHeadTracking : public UInterpTrackInst
{
public:
	unsigned char                                      Action;                                           		// 0x003C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      UnknownData00[ 0x3C ];                            		// 0x0040 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.InterpTrackInstHeadTracking.CurrentActorMap
	class USkeletalMeshComponent*                      Mesh;                                             		// 0x007C (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	TArray< class USkelControlLookAt* >                TrackControls;                                    		// 0x0080 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              LastUpdatePosition;                               		// 0x008C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.InterpTrackInstMorphWeight
// 0x0000 (0x003C - 0x003C)
class UInterpTrackInstMorphWeight : public UInterpTrackInst
{
public:
public:
};

// Class Engine.InterpTrackInstMove
// 0x0074 (0x00B0 - 0x003C)
class UInterpTrackInstMove : public UInterpTrackInst
{
public:
	struct FVector                                     ResetLocation;                                    		// 0x003C (0x000C) [0x0000000000000000]              
	struct FRotator                                    ResetRotation;                                    		// 0x0048 (0x000C) [0x0000000000000000]              
	unsigned char                                      UnknownData00[ 0xC ];                             		// 0x0054 (0x000C) MISSED OFFSET
	struct FMatrix                                     InitialTM;                                        		// 0x0060 (0x0040) [0x0000000000000000]              
	struct FQuat                                       InitialQuat;                                      		// 0x00A0 (0x0010) [0x0000000000000000]              
public:
};

// Class Engine.InterpTrackInstParticleReplay
// 0x0004 (0x0040 - 0x003C)
class UInterpTrackInstParticleReplay : public UInterpTrackInst
{
public:
	float                                              LastUpdatePosition;                               		// 0x003C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.InterpTrackInstProperty
// 0x0008 (0x0044 - 0x003C)
class UInterpTrackInstProperty : public UInterpTrackInst
{
public:
	class UFunction*                                   PropertyUpdateCallback;                           		// 0x003C (0x0004) [0x0000000000000000]              
	class UObject*                                     PropertyOuterObjectInst;                          		// 0x0040 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.InterpTrackInstBoolProp
// 0x000C (0x0050 - 0x0044)
class UInterpTrackInstBoolProp : public UInterpTrackInstProperty
{
public:
	struct FPointer                                    BoolProp;                                         		// 0x0044 (0x0004) [0x0000000000000000]              
	int                                                BitMask;                                          		// 0x0048 (0x0004) [0x0000000000000000]              
	unsigned long                                      ResetBool : 1;                                    		// 0x004C (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class Engine.InterpTrackInstColorProp
// 0x0008 (0x004C - 0x0044)
class UInterpTrackInstColorProp : public UInterpTrackInstProperty
{
public:
	struct FPointer                                    ColorProp;                                        		// 0x0044 (0x0004) [0x0000000000000000]              
	struct FColor                                      ResetColor;                                       		// 0x0048 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.InterpTrackInstFloatProp
// 0x0008 (0x004C - 0x0044)
class UInterpTrackInstFloatProp : public UInterpTrackInstProperty
{
public:
	struct FPointer                                    FloatProp;                                        		// 0x0044 (0x0004) [0x0000000000000000]              
	float                                              ResetFloat;                                       		// 0x0048 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.InterpTrackInstLinearColorProp
// 0x0014 (0x0058 - 0x0044)
class UInterpTrackInstLinearColorProp : public UInterpTrackInstProperty
{
public:
	struct FPointer                                    ColorProp;                                        		// 0x0044 (0x0004) [0x0000000000000000]              
	struct FLinearColor                                ResetColor;                                       		// 0x0048 (0x0010) [0x0000000000000000]              
public:
};

// Class Engine.InterpTrackInstVectorProp
// 0x0010 (0x0054 - 0x0044)
class UInterpTrackInstVectorProp : public UInterpTrackInstProperty
{
public:
	struct FPointer                                    VectorProp;                                       		// 0x0044 (0x0004) [0x0000000000000000]              
	struct FVector                                     ResetVector;                                      		// 0x0048 (0x000C) [0x0000000000000000]              
public:
};

// Class Engine.InterpTrackInstSkelControlScale
// 0x0000 (0x003C - 0x003C)
class UInterpTrackInstSkelControlScale : public UInterpTrackInst
{
public:
public:
};

// Class Engine.InterpTrackInstSkelControlStrength
// 0x0004 (0x0040 - 0x003C)
class UInterpTrackInstSkelControlStrength : public UInterpTrackInst
{
public:
	unsigned long                                      bSavedControlledByAnimMetaData : 1;               		// 0x003C (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class Engine.InterpTrackInstSlomo
// 0x0004 (0x0040 - 0x003C)
class UInterpTrackInstSlomo : public UInterpTrackInst
{
public:
	float                                              OldTimeDilation;                                  		// 0x003C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.InterpTrackInstSound
// 0x0008 (0x0044 - 0x003C)
class UInterpTrackInstSound : public UInterpTrackInst
{
public:
	float                                              LastUpdatePosition;                               		// 0x003C (0x0004) [0x0000000000000000]              
	class UAudioComponent*                             PlayAudioComp;                                    		// 0x0040 (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.InterpTrackInstToggle
// 0x000C (0x0048 - 0x003C)
class UInterpTrackInstToggle : public UInterpTrackInst
{
public:
	unsigned char                                      Action;                                           		// 0x003C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              LastUpdatePosition;                               		// 0x0040 (0x0004) [0x0000000000000000]              
	unsigned long                                      bSavedActiveState : 1;                            		// 0x0044 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class Engine.InterpTrackInstVectorMaterialParam
// 0x0010 (0x004C - 0x003C)
class UInterpTrackInstVectorMaterialParam : public UInterpTrackInst
{
public:
	TArray< struct FVectorMaterialParamMICData >       MICInfos;                                         		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class UInterpTrackVectorMaterialParam*             InstancedTrack;                                   		// 0x0048 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.InterpTrackInstVisibility
// 0x0008 (0x0044 - 0x003C)
class UInterpTrackInstVisibility : public UInterpTrackInst
{
public:
	unsigned char                                      Action;                                           		// 0x003C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              LastUpdatePosition;                               		// 0x0040 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.MaterialExpression
// 0x0044 (0x0080 - 0x003C)
class UMaterialExpression : public UObject
{
public:
	int                                                EditorX;                                          		// 0x003C (0x0004) [0x0000000020000000]              ( CPF_Deprecated )
	int                                                EditorY;                                          		// 0x0040 (0x0004) [0x0000000020000000]              ( CPF_Deprecated )
	int                                                MaterialExpressionEditorX;                        		// 0x0044 (0x0004) [0x0000000000000000]              
	int                                                MaterialExpressionEditorY;                        		// 0x0048 (0x0004) [0x0000000000000000]              
	unsigned long                                      bRealtimePreview : 1;                             		// 0x004C (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bNeedToUpdatePreview : 1;                         		// 0x004C (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bIsParameterExpression : 1;                       		// 0x004C (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bShowOutputNameOnPin : 1;                         		// 0x004C (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bHidePreviewWindow : 1;                           		// 0x004C (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bShowInputs : 1;                                  		// 0x004C (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bShowOutputs : 1;                                 		// 0x004C (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bUsedByStaticParameterSet : 1;                    		// 0x004C (0x0004) [0x0000000000000000] [0x00000080] 
	class UMaterial*                                   Material;                                         		// 0x0050 (0x0004) [0x0000000000000002]              ( CPF_Const )
	class UMaterialFunction*                           Function;                                         		// 0x0054 (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FString                                     Desc;                                             		// 0x0058 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FColor                                      BorderColor;                                      		// 0x0064 (0x0004) [0x0000000000000000]              
	TArray< struct FName >                             MenuCategories;                                   		// 0x0068 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FExpressionOutput >                 Outputs;                                          		// 0x0074 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionAbs
// 0x002C (0x00AC - 0x0080)
class UMaterialExpressionAbs : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                            		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionAdd
// 0x0058 (0x00D8 - 0x0080)
class UMaterialExpressionAdd : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            B;                                                		// 0x00AC (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionAppendVector
// 0x0058 (0x00D8 - 0x0080)
class UMaterialExpressionAppendVector : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            B;                                                		// 0x00AC (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionBumpOffset
// 0x0060 (0x00E0 - 0x0080)
class UMaterialExpressionBumpOffset : public UMaterialExpression
{
public:
	struct FExpressionInput                            Coordinate;                                       		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            Height;                                           		// 0x00AC (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              HeightRatio;                                      		// 0x00D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ReferencePlane;                                   		// 0x00DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionCameraVector
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionCameraVector : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialExpressionCameraWorldPosition
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionCameraWorldPosition : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialExpressionCeil
// 0x002C (0x00AC - 0x0080)
class UMaterialExpressionCeil : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                            		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionClamp
// 0x0084 (0x0104 - 0x0080)
class UMaterialExpressionClamp : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                            		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            Min;                                              		// 0x00AC (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            Max;                                              		// 0x00D8 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionComment
// 0x001C (0x009C - 0x0080)
class UMaterialExpressionComment : public UMaterialExpression
{
public:
	int                                                PosX;                                             		// 0x0080 (0x0004) [0x0000000000000000]              
	int                                                PosY;                                             		// 0x0084 (0x0004) [0x0000000000000000]              
	int                                                SizeX;                                            		// 0x0088 (0x0004) [0x0000000000000000]              
	int                                                SizeY;                                            		// 0x008C (0x0004) [0x0000000000000000]              
	struct FString                                     Text;                                             		// 0x0090 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionComponentMask
// 0x0030 (0x00B0 - 0x0080)
class UMaterialExpressionComponentMask : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                            		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned long                                      R : 1;                                            		// 0x00AC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      G : 1;                                            		// 0x00AC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      B : 1;                                            		// 0x00AC (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      A : 1;                                            		// 0x00AC (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionConstant
// 0x0004 (0x0084 - 0x0080)
class UMaterialExpressionConstant : public UMaterialExpression
{
public:
	float                                              R;                                                		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionConstant2Vector
// 0x0008 (0x0088 - 0x0080)
class UMaterialExpressionConstant2Vector : public UMaterialExpression
{
public:
	float                                              R;                                                		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              G;                                                		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionConstant3Vector
// 0x000C (0x008C - 0x0080)
class UMaterialExpressionConstant3Vector : public UMaterialExpression
{
public:
	float                                              R;                                                		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              G;                                                		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              B;                                                		// 0x0088 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionConstant4Vector
// 0x0010 (0x0090 - 0x0080)
class UMaterialExpressionConstant4Vector : public UMaterialExpression
{
public:
	float                                              R;                                                		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              G;                                                		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              B;                                                		// 0x0088 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              A;                                                		// 0x008C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionConstantBiasScale
// 0x0034 (0x00B4 - 0x0080)
class UMaterialExpressionConstantBiasScale : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                            		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              Bias;                                             		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Scale;                                            		// 0x00B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionConstantClamp
// 0x0034 (0x00B4 - 0x0080)
class UMaterialExpressionConstantClamp : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                            		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              Min;                                              		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Max;                                              		// 0x00B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionCosine
// 0x0030 (0x00B0 - 0x0080)
class UMaterialExpressionCosine : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                            		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              Period;                                           		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionCrossProduct
// 0x0058 (0x00D8 - 0x0080)
class UMaterialExpressionCrossProduct : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            B;                                                		// 0x00AC (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionCustom
// 0x0028 (0x00A8 - 0x0080)
class UMaterialExpressionCustom : public UMaterialExpression
{
public:
	struct FString                                     Code;                                             		// 0x0080 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned char                                      outputType;                                       		// 0x008C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     Description;                                      		// 0x0090 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FCustomInput >                      Inputs;                                           		// 0x009C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionCustomTexture
// 0x0004 (0x0084 - 0x0080)
class UMaterialExpressionCustomTexture : public UMaterialExpression
{
public:
	class UTexture*                                    Texture;                                          		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionDepthBiasedAlpha
// 0x0060 (0x00E0 - 0x0080)
class UMaterialExpressionDepthBiasedAlpha : public UMaterialExpression
{
public:
	unsigned long                                      bNormalize : 1;                                   		// 0x0080 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              BiasScale;                                        		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FExpressionInput                            Alpha;                                            		// 0x0088 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            Bias;                                             		// 0x00B4 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionDepthBiasedBlend
// 0x008C (0x010C - 0x0080)
class UMaterialExpressionDepthBiasedBlend : public UMaterialExpression
{
public:
	unsigned long                                      bNormalize : 1;                                   		// 0x0080 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              BiasScale;                                        		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FExpressionInput                            RGB;                                              		// 0x0088 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            Alpha;                                            		// 0x00B4 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            Bias;                                             		// 0x00E0 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionDepthOfFieldFunction
// 0x0030 (0x00B0 - 0x0080)
class UMaterialExpressionDepthOfFieldFunction : public UMaterialExpression
{
public:
	unsigned char                                      FunctionValue;                                    		// 0x0080 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FExpressionInput                            Depth;                                            		// 0x0084 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionDeriveNormalZ
// 0x002C (0x00AC - 0x0080)
class UMaterialExpressionDeriveNormalZ : public UMaterialExpression
{
public:
	struct FExpressionInput                            InXY;                                             		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionDesaturation
// 0x0068 (0x00E8 - 0x0080)
class UMaterialExpressionDesaturation : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                            		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            Percent;                                          		// 0x00AC (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FLinearColor                                LuminanceFactors;                                 		// 0x00D8 (0x0010) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionDestColor
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionDestColor : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialExpressionDestDepth
// 0x0004 (0x0084 - 0x0080)
class UMaterialExpressionDestDepth : public UMaterialExpression
{
public:
	unsigned long                                      bNormalize : 1;                                   		// 0x0080 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionDistance
// 0x0058 (0x00D8 - 0x0080)
class UMaterialExpressionDistance : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            B;                                                		// 0x00AC (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionDivide
// 0x0058 (0x00D8 - 0x0080)
class UMaterialExpressionDivide : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            B;                                                		// 0x00AC (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionDotProduct
// 0x0058 (0x00D8 - 0x0080)
class UMaterialExpressionDotProduct : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            B;                                                		// 0x00AC (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionDynamicParameter
// 0x000C (0x008C - 0x0080)
class UMaterialExpressionDynamicParameter : public UMaterialExpression
{
public:
	TArray< struct FString >                           ParamNames;                                       		// 0x0080 (0x000C) [0x0000000000400041]              ( CPF_Edit | CPF_EditConstArray | CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionMeshEmitterDynamicParameter
// 0x0000 (0x008C - 0x008C)
class UMaterialExpressionMeshEmitterDynamicParameter : public UMaterialExpressionDynamicParameter
{
public:
public:
};

// Class Engine.MaterialExpressionFloor
// 0x002C (0x00AC - 0x0080)
class UMaterialExpressionFloor : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                            		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionFluidNormal
// 0x002C (0x00AC - 0x0080)
class UMaterialExpressionFluidNormal : public UMaterialExpression
{
public:
	struct FExpressionInput                            Coordinates;                                      		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionFmod
// 0x0058 (0x00D8 - 0x0080)
class UMaterialExpressionFmod : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            B;                                                		// 0x00AC (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionFoliageImpulseDirection
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionFoliageImpulseDirection : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialExpressionFoliageNormalizedRotationAxisAndAngle
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionFoliageNormalizedRotationAxisAndAngle : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialExpressionFontSample
// 0x0008 (0x0088 - 0x0080)
class UMaterialExpressionFontSample : public UMaterialExpression
{
public:
	class UFont*                                       Font;                                             		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                FontTexturePage;                                  		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionFontSampleParameter
// 0x0020 (0x00A8 - 0x0088)
class UMaterialExpressionFontSampleParameter : public UMaterialExpressionFontSample
{
public:
	struct FName                                       ParameterName;                                    		// 0x0088 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FGuid                                       ExpressionGUID;                                   		// 0x0090 (0x0010) [0x0000000000000002]              ( CPF_Const )
	struct FName                                       Group;                                            		// 0x00A0 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionFrac
// 0x002C (0x00AC - 0x0080)
class UMaterialExpressionFrac : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                            		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionFresnel
// 0x0030 (0x00B0 - 0x0080)
class UMaterialExpressionFresnel : public UMaterialExpression
{
public:
	float                                              Exponent;                                         		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FExpressionInput                            Normal;                                           		// 0x0084 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionFunctionInput
// 0x0078 (0x00F8 - 0x0080)
class UMaterialExpressionFunctionInput : public UMaterialExpression
{
public:
	struct FExpressionInput                            Preview;                                          		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     InputName;                                        		// 0x00AC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     Description;                                      		// 0x00B8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FGuid                                       Id;                                               		// 0x00C4 (0x0010) [0x0000000000000002]              ( CPF_Const )
	unsigned char                                      InputType;                                        		// 0x00D4 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      UnknownData00[ 0xB ];                             		// 0x00D5 (0x000B) MISSED OFFSET
	struct FVector4                                    PreviewValue;                                     		// 0x00E0 (0x0010) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bUsePreviewValueAsDefault : 1;                    		// 0x00F0 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bCompilingFunctionPreview : 1;                    		// 0x00F0 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	int                                                SortPriority;                                     		// 0x00F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionFunctionOutput
// 0x005C (0x00DC - 0x0080)
class UMaterialExpressionFunctionOutput : public UMaterialExpression
{
public:
	struct FString                                     OutputName;                                       		// 0x0080 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     Description;                                      		// 0x008C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                SortPriority;                                     		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FExpressionInput                            A;                                                		// 0x009C (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned long                                      bLastPreviewed : 1;                               		// 0x00C8 (0x0004) [0x0000000000000000] [0x00000001] 
	struct FGuid                                       Id;                                               		// 0x00CC (0x0010) [0x0000000000000002]              ( CPF_Const )
public:
};

// Class Engine.MaterialExpressionIf
// 0x00DC (0x015C - 0x0080)
class UMaterialExpressionIf : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            B;                                                		// 0x00AC (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            AGreaterThanB;                                    		// 0x00D8 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            AEqualsB;                                         		// 0x0104 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            ALessThanB;                                       		// 0x0130 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionLandscapeLayerBlend
// 0x001C (0x009C - 0x0080)
class UMaterialExpressionLandscapeLayerBlend : public UMaterialExpression
{
public:
	TArray< struct FLayerBlendInput >                  Layers;                                           		// 0x0080 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FGuid                                       ExpressionGUID;                                   		// 0x008C (0x0010) [0x0000000000000002]              ( CPF_Const )
public:
};

// Class Engine.MaterialExpressionLensFlareIntensity
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionLensFlareIntensity : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialExpressionLensFlareOcclusion
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionLensFlareOcclusion : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialExpressionLensFlareRadialDistance
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionLensFlareRadialDistance : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialExpressionLensFlareRayDistance
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionLensFlareRayDistance : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialExpressionLensFlareSourceDistance
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionLensFlareSourceDistance : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialExpressionLightmapUVs
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionLightmapUVs : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialExpressionLightmassReplace
// 0x0058 (0x00D8 - 0x0080)
class UMaterialExpressionLightmassReplace : public UMaterialExpression
{
public:
	struct FExpressionInput                            Realtime;                                         		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            Lightmass;                                        		// 0x00AC (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionLightVector
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionLightVector : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialExpressionLinearInterpolate
// 0x0084 (0x0104 - 0x0080)
class UMaterialExpressionLinearInterpolate : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            B;                                                		// 0x00AC (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            Alpha;                                            		// 0x00D8 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionMaterialFunctionCall
// 0x001C (0x009C - 0x0080)
class UMaterialExpressionMaterialFunctionCall : public UMaterialExpression
{
public:
	class UMaterialFunction*                           MaterialFunction;                                 		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FFunctionExpressionInput >          FunctionInputs;                                   		// 0x0084 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FFunctionExpressionOutput >         FunctionOutputs;                                  		// 0x0090 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionMeshEmitterVertexColor
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionMeshEmitterVertexColor : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialExpressionMultiply
// 0x0058 (0x00D8 - 0x0080)
class UMaterialExpressionMultiply : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            B;                                                		// 0x00AC (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionNormalize
// 0x002C (0x00AC - 0x0080)
class UMaterialExpressionNormalize : public UMaterialExpression
{
public:
	struct FExpressionInput                            VectorInput;                                      		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionObjectOrientation
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionObjectOrientation : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialExpressionObjectRadius
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionObjectRadius : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialExpressionObjectWorldPosition
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionObjectWorldPosition : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialExpressionOcclusionPercentage
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionOcclusionPercentage : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialExpressionOneMinus
// 0x002C (0x00AC - 0x0080)
class UMaterialExpressionOneMinus : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                            		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionPanner
// 0x0060 (0x00E0 - 0x0080)
class UMaterialExpressionPanner : public UMaterialExpression
{
public:
	struct FExpressionInput                            Coordinate;                                       		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            Time;                                             		// 0x00AC (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              SpeedX;                                           		// 0x00D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SpeedY;                                           		// 0x00DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionParameter
// 0x0020 (0x00A0 - 0x0080)
class UMaterialExpressionParameter : public UMaterialExpression
{
public:
	struct FName                                       ParameterName;                                    		// 0x0080 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FGuid                                       ExpressionGUID;                                   		// 0x0088 (0x0010) [0x0000000000000002]              ( CPF_Const )
	struct FName                                       Group;                                            		// 0x0098 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionScalarParameter
// 0x0004 (0x00A4 - 0x00A0)
class UMaterialExpressionScalarParameter : public UMaterialExpressionParameter
{
public:
	float                                              DefaultValue;                                     		// 0x00A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionStaticBoolParameter
// 0x0008 (0x00A8 - 0x00A0)
class UMaterialExpressionStaticBoolParameter : public UMaterialExpressionParameter
{
public:
	unsigned long                                      DefaultValue : 1;                                 		// 0x00A0 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      ExtendedCaptionDisplay : 1;                       		// 0x00A0 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	struct FPointer                                    InstanceOverride;                                 		// 0x00A4 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.MaterialExpressionStaticSwitchParameter
// 0x0058 (0x0100 - 0x00A8)
class UMaterialExpressionStaticSwitchParameter : public UMaterialExpressionStaticBoolParameter
{
public:
	struct FExpressionInput                            A;                                                		// 0x00A8 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            B;                                                		// 0x00D4 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionStaticComponentMaskParameter
// 0x0034 (0x00D4 - 0x00A0)
class UMaterialExpressionStaticComponentMaskParameter : public UMaterialExpressionParameter
{
public:
	struct FExpressionInput                            Input;                                            		// 0x00A0 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned long                                      DefaultR : 1;                                     		// 0x00CC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      DefaultG : 1;                                     		// 0x00CC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      DefaultB : 1;                                     		// 0x00CC (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      DefaultA : 1;                                     		// 0x00CC (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	struct FPointer                                    InstanceOverride;                                 		// 0x00D0 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.MaterialExpressionVectorParameter
// 0x0010 (0x00B0 - 0x00A0)
class UMaterialExpressionVectorParameter : public UMaterialExpressionParameter
{
public:
	struct FLinearColor                                DefaultValue;                                     		// 0x00A0 (0x0010) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionParticleMacroUV
// 0x0004 (0x0084 - 0x0080)
class UMaterialExpressionParticleMacroUV : public UMaterialExpression
{
public:
	unsigned long                                      bUseViewSpace : 1;                                		// 0x0080 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionPerInstanceRandom
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionPerInstanceRandom : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialExpressionPixelDepth
// 0x0004 (0x0084 - 0x0080)
class UMaterialExpressionPixelDepth : public UMaterialExpression
{
public:
	unsigned long                                      bNormalize : 1;                                   		// 0x0080 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionPower
// 0x0058 (0x00D8 - 0x0080)
class UMaterialExpressionPower : public UMaterialExpression
{
public:
	struct FExpressionInput                            Base;                                             		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            Exponent;                                         		// 0x00AC (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionReflectionVector
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionReflectionVector : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialExpressionRotateAboutAxis
// 0x0084 (0x0104 - 0x0080)
class UMaterialExpressionRotateAboutAxis : public UMaterialExpression
{
public:
	struct FExpressionInput                            NormalizedRotationAxisAndAngle;                   		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            PositionOnAxis;                                   		// 0x00AC (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            Position;                                         		// 0x00D8 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionRotator
// 0x0064 (0x00E4 - 0x0080)
class UMaterialExpressionRotator : public UMaterialExpression
{
public:
	struct FExpressionInput                            Coordinate;                                       		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            Time;                                             		// 0x00AC (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              CenterX;                                          		// 0x00D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CenterY;                                          		// 0x00DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Speed;                                            		// 0x00E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionSceneDepth
// 0x0030 (0x00B0 - 0x0080)
class UMaterialExpressionSceneDepth : public UMaterialExpression
{
public:
	struct FExpressionInput                            Coordinates;                                      		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned long                                      bNormalize : 1;                                   		// 0x00AC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionSceneTexture
// 0x0034 (0x00B4 - 0x0080)
class UMaterialExpressionSceneTexture : public UMaterialExpression
{
public:
	struct FExpressionInput                            Coordinates;                                      		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned char                                      SceneTextureType;                                 		// 0x00AC (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      ScreenAlign : 1;                                  		// 0x00B0 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionScreenPosition
// 0x0004 (0x0084 - 0x0080)
class UMaterialExpressionScreenPosition : public UMaterialExpression
{
public:
	unsigned long                                      ScreenAlign : 1;                                  		// 0x0080 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionSine
// 0x0030 (0x00B0 - 0x0080)
class UMaterialExpressionSine : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                            		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              Period;                                           		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionSphereMask
// 0x00B8 (0x0138 - 0x0080)
class UMaterialExpressionSphereMask : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            B;                                                		// 0x00AC (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            Radius;                                           		// 0x00D8 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            Hardness;                                         		// 0x0104 (0x002C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              AttenuationRadius;                                		// 0x0130 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              HardnessPercent;                                  		// 0x0134 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionSquareRoot
// 0x002C (0x00AC - 0x0080)
class UMaterialExpressionSquareRoot : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                            		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionStaticBool
// 0x0004 (0x0084 - 0x0080)
class UMaterialExpressionStaticBool : public UMaterialExpression
{
public:
	unsigned long                                      Value : 1;                                        		// 0x0080 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionStaticSwitch
// 0x0088 (0x0108 - 0x0080)
class UMaterialExpressionStaticSwitch : public UMaterialExpression
{
public:
	unsigned long                                      DefaultValue : 1;                                 		// 0x0080 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      ExtendedCaptionDisplay : 1;                       		// 0x0080 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	struct FExpressionInput                            A;                                                		// 0x0084 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            B;                                                		// 0x00B0 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            Value;                                            		// 0x00DC (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionSubtract
// 0x0058 (0x00D8 - 0x0080)
class UMaterialExpressionSubtract : public UMaterialExpression
{
public:
	struct FExpressionInput                            A;                                                		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            B;                                                		// 0x00AC (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionTerrainLayerCoords
// 0x0014 (0x0094 - 0x0080)
class UMaterialExpressionTerrainLayerCoords : public UMaterialExpression
{
public:
	unsigned char                                      MappingType;                                      		// 0x0080 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              MappingScale;                                     		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MappingRotation;                                  		// 0x0088 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MappingPanU;                                      		// 0x008C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MappingPanV;                                      		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionTerrainLayerSwitch
// 0x0078 (0x00F8 - 0x0080)
class UMaterialExpressionTerrainLayerSwitch : public UMaterialExpression
{
public:
	struct FPointer                                    InstanceOverride;                                 		// 0x0080 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FExpressionInput                            LayerUsed;                                        		// 0x0084 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            LayerNotUsed;                                     		// 0x00B0 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FName                                       ParameterName;                                    		// 0x00DC (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      PreviewUsed : 1;                                  		// 0x00E4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	struct FGuid                                       ExpressionGUID;                                   		// 0x00E8 (0x0010) [0x0000000000000002]              ( CPF_Const )
public:
};

// Class Engine.MaterialExpressionTerrainLayerWeight
// 0x0078 (0x00F8 - 0x0080)
class UMaterialExpressionTerrainLayerWeight : public UMaterialExpression
{
public:
	struct FPointer                                    InstanceOverride;                                 		// 0x0080 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FExpressionInput                            Base;                                             		// 0x0084 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            Layer;                                            		// 0x00B0 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FName                                       ParameterName;                                    		// 0x00DC (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              PreviewWeight;                                    		// 0x00E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FGuid                                       ExpressionGUID;                                   		// 0x00E8 (0x0010) [0x0000000000000002]              ( CPF_Const )
public:
};

// Class Engine.MaterialExpressionTextureCoordinate
// 0x0010 (0x0090 - 0x0080)
class UMaterialExpressionTextureCoordinate : public UMaterialExpression
{
public:
	int                                                CoordinateIndex;                                  		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              UTiling;                                          		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              VTiling;                                          		// 0x0088 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      UnMirrorU : 1;                                    		// 0x008C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      UnMirrorV : 1;                                    		// 0x008C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionTextureObject
// 0x0004 (0x0084 - 0x0080)
class UMaterialExpressionTextureObject : public UMaterialExpression
{
public:
	class UTexture*                                    Texture;                                          		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionTextureSample
// 0x005C (0x00DC - 0x0080)
class UMaterialExpressionTextureSample : public UMaterialExpression
{
public:
	class UTexture*                                    Texture;                                          		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FExpressionInput                            Coordinates;                                      		// 0x0084 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FExpressionInput                            TextureObject;                                    		// 0x00B0 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionDepthBiasBlend
// 0x0034 (0x0110 - 0x00DC)
class UMaterialExpressionDepthBiasBlend : public UMaterialExpressionTextureSample
{
public:
	unsigned long                                      bNormalize : 1;                                   		// 0x00DC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              BiasScale;                                        		// 0x00E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FExpressionInput                            Bias;                                             		// 0x00E4 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialExpressionFlipBookSample
// 0x0000 (0x00DC - 0x00DC)
class UMaterialExpressionFlipBookSample : public UMaterialExpressionTextureSample
{
public:
public:
};

// Class Engine.MaterialExpressionMeshSubUV
// 0x0000 (0x00DC - 0x00DC)
class UMaterialExpressionMeshSubUV : public UMaterialExpressionTextureSample
{
public:
public:
};

// Class Engine.MaterialExpressionMeshSubUVBlend
// 0x0000 (0x00DC - 0x00DC)
class UMaterialExpressionMeshSubUVBlend : public UMaterialExpressionMeshSubUV
{
public:
public:
};

// Class Engine.MaterialExpressionParticleSubUV
// 0x0000 (0x00DC - 0x00DC)
class UMaterialExpressionParticleSubUV : public UMaterialExpressionTextureSample
{
public:
public:
};

// Class Engine.MaterialExpressionTextureSampleParameter
// 0x0020 (0x00FC - 0x00DC)
class UMaterialExpressionTextureSampleParameter : public UMaterialExpressionTextureSample
{
public:
	struct FName                                       ParameterName;                                    		// 0x00DC (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FGuid                                       ExpressionGUID;                                   		// 0x00E4 (0x0010) [0x0000000000000002]              ( CPF_Const )
	struct FName                                       Group;                                            		// 0x00F4 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionTextureObjectParameter
// 0x0000 (0x00FC - 0x00FC)
class UMaterialExpressionTextureObjectParameter : public UMaterialExpressionTextureSampleParameter
{
public:
public:
};

// Class Engine.MaterialExpressionTextureSampleParameter2D
// 0x0000 (0x00FC - 0x00FC)
class UMaterialExpressionTextureSampleParameter2D : public UMaterialExpressionTextureSampleParameter
{
public:
public:
};

// Class Engine.MaterialExpressionAntialiasedTextureMask
// 0x0005 (0x0101 - 0x00FC)
class UMaterialExpressionAntialiasedTextureMask : public UMaterialExpressionTextureSampleParameter2D
{
public:
	float                                              Threshold;                                        		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      Channel;                                          		// 0x0100 (0x0001) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionTextureSampleParameterFlipbook
// 0x0000 (0x00FC - 0x00FC)
class UMaterialExpressionTextureSampleParameterFlipbook : public UMaterialExpressionTextureSampleParameter2D
{
public:
public:
};

// Class Engine.MaterialExpressionTextureSampleParameterMeshSubUV
// 0x0000 (0x00FC - 0x00FC)
class UMaterialExpressionTextureSampleParameterMeshSubUV : public UMaterialExpressionTextureSampleParameter2D
{
public:
public:
};

// Class Engine.MaterialExpressionTextureSampleParameterMeshSubUVBlend
// 0x0000 (0x00FC - 0x00FC)
class UMaterialExpressionTextureSampleParameterMeshSubUVBlend : public UMaterialExpressionTextureSampleParameterMeshSubUV
{
public:
public:
};

// Class Engine.MaterialExpressionTextureSampleParameterSubUV
// 0x0000 (0x00FC - 0x00FC)
class UMaterialExpressionTextureSampleParameterSubUV : public UMaterialExpressionTextureSampleParameter2D
{
public:
public:
};

// Class Engine.MaterialExpressionTextureSampleParameterCube
// 0x0000 (0x00FC - 0x00FC)
class UMaterialExpressionTextureSampleParameterCube : public UMaterialExpressionTextureSampleParameter
{
public:
public:
};

// Class Engine.MaterialExpressionTextureSampleParameterMovie
// 0x0000 (0x00FC - 0x00FC)
class UMaterialExpressionTextureSampleParameterMovie : public UMaterialExpressionTextureSampleParameter
{
public:
public:
};

// Class Engine.MaterialExpressionTextureSampleParameterNormal
// 0x0004 (0x0100 - 0x00FC)
class UMaterialExpressionTextureSampleParameterNormal : public UMaterialExpressionTextureSampleParameter
{
public:
	struct FPointer                                    InstanceOverride;                                 		// 0x00FC (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.MaterialExpressionTime
// 0x0004 (0x0084 - 0x0080)
class UMaterialExpressionTime : public UMaterialExpression
{
public:
	unsigned long                                      bIgnorePause : 1;                                 		// 0x0080 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.MaterialExpressionTransform
// 0x002E (0x00AE - 0x0080)
class UMaterialExpressionTransform : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                            		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned char                                      TransformSourceType;                              		// 0x00AC (0x0001) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned char                                      TransformType;                                    		// 0x00AD (0x0001) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
public:
};

// Class Engine.MaterialExpressionTransformPosition
// 0x002E (0x00AE - 0x0080)
class UMaterialExpressionTransformPosition : public UMaterialExpression
{
public:
	struct FExpressionInput                            Input;                                            		// 0x0080 (0x002C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned char                                      TransformSourceType;                              		// 0x00AC (0x0001) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned char                                      TransformType;                                    		// 0x00AD (0x0001) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
public:
};

// Class Engine.MaterialExpressionTwoSidedSign
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionTwoSidedSign : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialExpressionVertexColor
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionVertexColor : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialExpressionWindDirectionAndSpeed
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionWindDirectionAndSpeed : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialExpressionWorldNormal
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionWorldNormal : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialExpressionWorldPosition
// 0x0000 (0x0080 - 0x0080)
class UMaterialExpressionWorldPosition : public UMaterialExpression
{
public:
public:
};

// Class Engine.MaterialFunction
// 0x0048 (0x0084 - 0x003C)
class UMaterialFunction : public UObject
{
public:
	struct FGuid                                       StateId;                                          		// 0x003C (0x0010) [0x0000000000200000]              
	class UMaterialFunction*                           ParentFunction;                                   		// 0x004C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FString                                     Description;                                      		// 0x0050 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      bExposeToLibrary : 1;                             		// 0x005C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bReentrantFlag : 1;                               		// 0x005C (0x0004) [0x0000000000002002] [0x00000002] ( CPF_Const | CPF_Transient )
	TArray< struct FString >                           LibraryCategories;                                		// 0x0060 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class UMaterialExpression* >               FunctionExpressions;                              		// 0x006C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< class UMaterialExpressionComment* >        FunctionEditorComments;                           		// 0x0078 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialInstance
// 0x0090 (0x0224 - 0x0194)
class UMaterialInstance : public UMaterialInterface
{
public:
	class UPhysicalMaterial*                           PhysMaterial;                                     		// 0x0194 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          Parent;                                           		// 0x0198 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	class UTexture2D*                                  PhysMaterialMask;                                 		// 0x019C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                PhysMaterialMaskUVChannel;                        		// 0x01A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UPhysicalMaterial*                           BlackPhysicalMaterial;                            		// 0x01A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UPhysicalMaterial*                           WhitePhysicalMaterial;                            		// 0x01A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bHasStaticPermutationResource : 1;                		// 0x01AC (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bStaticPermutationDirty : 1;                      		// 0x01AC (0x0004) [0x0000000000003000] [0x00000002] ( CPF_Native | CPF_Transient )
	unsigned long                                      ReentrantFlag : 1;                                		// 0x01AC (0x0004) [0x0000000000001002] [0x00000004] ( CPF_Const | CPF_Native )
	unsigned long                                      bNeedsMaterialFlattening : 1;                     		// 0x01AC (0x0004) [0x0000000000002002] [0x00000008] ( CPF_Const | CPF_Transient )
	struct FPointer                                    StaticParameters[ 0x2 ];                          		// 0x01B0 (0x0008) [0x0000000000201002]              ( CPF_Const | CPF_Native )
	struct FPointer                                    StaticPermutationResources[ 0x2 ];                		// 0x01B8 (0x0008) [0x0000000000201002]              ( CPF_Const | CPF_Native )
	struct FPointer                                    Resources[ 0x3 ];                                 		// 0x01C0 (0x000C) [0x0000000000201002]              ( CPF_Const | CPF_Native )
	TArray< class UTexture* >                          ReferencedTextures;                               		// 0x01CC (0x000C) [0x0000000020400002]              ( CPF_Const | CPF_NeedCtorLink | CPF_Deprecated )
	TArray< struct FGuid >                             ReferencedTextureGuids;                           		// 0x01D8 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	struct FGuid                                       ParentLightingGuid;                               		// 0x01E4 (0x0010) [0x0000000000000002]              ( CPF_Const )
	struct FBeastMaterialInstancePropertiesContainer   BeastMaterialProperties;                          		// 0x01F4 (0x0030) [0x0000000000000000]              
public:
};

// Class Engine.MaterialInstanceConstant
// 0x0030 (0x0254 - 0x0224)
class UMaterialInstanceConstant : public UMaterialInstance
{
public:
	TArray< struct FFontParameterValue >               FontParameterValues;                              		// 0x0224 (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
	TArray< struct FScalarParameterValue >             ScalarParameterValues;                            		// 0x0230 (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
	TArray< struct FTextureParameterValue >            TextureParameterValues;                           		// 0x023C (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
	TArray< struct FVectorParameterValue >             VectorParameterValues;                            		// 0x0248 (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
public:
};

// Class Engine.MaterialInstanceTimeVarying
// 0x0044 (0x0268 - 0x0224)
class UMaterialInstanceTimeVarying : public UMaterialInstance
{
public:
	unsigned long                                      bAutoActivateAll : 1;                             		// 0x0224 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              Duration;                                         		// 0x0228 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FFontParameterValueOverTime >       FontParameterValues;                              		// 0x022C (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
	TArray< struct FScalarParameterValueOverTime >     ScalarParameterValues;                            		// 0x0238 (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
	TArray< struct FTextureParameterValueOverTime >    TextureParameterValues;                           		// 0x0244 (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
	TArray< struct FVectorParameterValueOverTime >     VectorParameterValues;                            		// 0x0250 (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
	TArray< struct FLinearColorParameterValueOverTime > LinearColorParameterValues;                       		// 0x025C (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
public:
};

// Class Engine.EmitterCameraLensEffectBase
// 0x0024 (0x0208 - 0x01E4)
class AEmitterCameraLensEffectBase : public AEmitter
{
public:
	class UParticleSystem*                             PS_CameraEffect;                                  		// 0x01E4 (0x0004) [0x0000000000000000]              
	class UParticleSystem*                             PS_CameraEffectNonExtremeContent;                 		// 0x01E8 (0x0004) [0x0000000000000000]              
	float                                              BaseFOV;                                          		// 0x01EC (0x0004) [0x0000000000000000]              
	float                                              DistFromCamera;                                   		// 0x01F0 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned long                                      bAllowMultipleInstances : 1;                      		// 0x01F4 (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	TArray< class UClass* >                            EmittersToTreatAsSame;                            		// 0x01F8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class ACamera*                                     BaseCamera;                                       		// 0x0204 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.ParticleEventManager
// 0x0000 (0x01D8 - 0x01D8)
class AParticleEventManager : public AActor
{
public:
public:
};

// Class Engine.ParticleSystemComponent
// 0x0118 (0x02FC - 0x01E4)
class UParticleSystemComponent : public UPrimitiveComponent
{
public:
	class UParticleSystem*                             Template;                                         		// 0x01E4 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	class UClass*                                      LightEnvironmentClass;                            		// 0x01E8 (0x0004) [0x0000000000000000]              
	class AActor*                                      LightEnvironmentSharedInstigator;                 		// 0x01EC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                MaxLightEnvironmentPooledReuses;                  		// 0x01F0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FPointer >                          EmitterInstances;                                 		// 0x01F4 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< class UStaticMeshComponent* >              SMComponents;                                     		// 0x0200 (0x000C) [0x000000000468200A]              ( CPF_Const | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	TArray< class UMaterialInterface* >                SMMaterialInterfaces;                             		// 0x020C (0x000C) [0x0000000000602002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	TArray< class USkeletalMeshComponent* >            SkelMeshComponents;                               		// 0x0218 (0x000C) [0x000000000468200A]              ( CPF_Const | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	TArray< struct FViewParticleEmitterInstanceMotionBlurInfo > ViewMBInfoArray;                                  		// 0x0224 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	unsigned long                                      bAutoActivate : 1;                                		// 0x0230 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bWasCompleted : 1;                                		// 0x0230 (0x0004) [0x0000000000002002] [0x00000002] ( CPF_Const | CPF_Transient )
	unsigned long                                      bSuppressSpawning : 1;                            		// 0x0230 (0x0004) [0x0000000000002002] [0x00000004] ( CPF_Const | CPF_Transient )
	unsigned long                                      bWasDeactivated : 1;                              		// 0x0230 (0x0004) [0x0000000000002002] [0x00000008] ( CPF_Const | CPF_Transient )
	unsigned long                                      bResetOnDetach : 1;                               		// 0x0230 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bUpdateOnDedicatedServer : 1;                     		// 0x0230 (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bJustAttached : 1;                                		// 0x0230 (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	unsigned long                                      bIsActive : 1;                                    		// 0x0230 (0x0004) [0x0000000000002000] [0x00000080] ( CPF_Transient )
	unsigned long                                      bHasBeenActivated : 1;                            		// 0x0230 (0x0004) [0x0000000000002000] [0x00000100] ( CPF_Transient )
	unsigned long                                      bWarmingUp : 1;                                   		// 0x0230 (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bIsCachedInPool : 1;                              		// 0x0230 (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      bOverrideLODMethod : 1;                           		// 0x0230 (0x0004) [0x0000000000000001] [0x00000800] ( CPF_Edit )
	unsigned long                                      bSkipUpdateDynamicDataDuringTick : 1;             		// 0x0230 (0x0004) [0x0000000000000000] [0x00001000] 
	unsigned long                                      bSkipBoundsUpdate : 1;                            		// 0x0230 (0x0004) [0x0000000000000000] [0x00002000] 
	unsigned long                                      bUpdateComponentInTick : 1;                       		// 0x0230 (0x0004) [0x0000000000000000] [0x00004000] 
	unsigned long                                      bDeferredBeamUpdate : 1;                          		// 0x0230 (0x0004) [0x0000000000000000] [0x00008000] 
	unsigned long                                      bForcedInActive : 1;                              		// 0x0230 (0x0004) [0x0000000000002000] [0x00010000] ( CPF_Transient )
	unsigned long                                      bIsWarmingUp : 1;                                 		// 0x0230 (0x0004) [0x0000000000002000] [0x00020000] ( CPF_Transient )
	unsigned long                                      bIsViewRelevanceDirty : 1;                        		// 0x0230 (0x0004) [0x0000000000002000] [0x00040000] ( CPF_Transient )
	unsigned long                                      bRecacheViewRelevance : 1;                        		// 0x0230 (0x0004) [0x0000000000002000] [0x00080000] ( CPF_Transient )
	unsigned long                                      bLODUpdatePending : 1;                            		// 0x0230 (0x0004) [0x0000000000002000] [0x00100000] ( CPF_Transient )
	unsigned long                                      bSkipSpawnCountCheck : 1;                         		// 0x0230 (0x0004) [0x0000000000002000] [0x00200000] ( CPF_Transient )
	int                                                iSortCS;                                          		// 0x0234 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FParticleSysParam >                 InstanceParameters;                               		// 0x0238 (0x000C) [0x0000000004400001]              ( CPF_Edit | CPF_NeedCtorLink | CPF_EditInline )
	struct FVector                                     OldPosition;                                      		// 0x0244 (0x000C) [0x0000000000000000]              
	struct FVector                                     PartSysVelocity;                                  		// 0x0250 (0x000C) [0x0000000000000000]              
	struct FVector                                     vCurrentStartingVelocity;                         		// 0x025C (0x000C) [0x0000000000000000]              
	float                                              WarmupTime;                                       		// 0x0268 (0x0004) [0x0000000000000000]              
	float                                              WarmupTickRate;                                   		// 0x026C (0x0004) [0x0000000000000000]              
	int                                                LODLevel;                                         		// 0x0270 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              SecondsBeforeInactive;                            		// 0x0274 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TimeSinceLastForceUpdateTransform;                		// 0x0278 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              MaxTimeBeforeForceUpdateTransform;                		// 0x027C (0x0004) [0x0000000000000000]              
	int                                                EditorLODLevel;                                   		// 0x0280 (0x0004) [0x0000000000000000]              
	int                                                EditorDetailMode;                                 		// 0x0284 (0x0004) [0x0000000000000000]              
	float                                              AccumTickTime;                                    		// 0x0288 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      LODMethod;                                        		// 0x028C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      ReplayState;                                      		// 0x028D (0x0001) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	TArray< struct FMaterialViewRelevance >            CachedViewRelevanceFlags;                         		// 0x0290 (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	TArray< class UParticleSystemReplay* >             ReplayClips;                                      		// 0x029C (0x000C) [0x0000000004400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink | CPF_EditInline )
	int                                                ReplayClipIDNumber;                               		// 0x02A8 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                ReplayFrameIndex;                                 		// 0x02AC (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              AccumLODDistanceCheckTime;                        		// 0x02B0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FParticleEventSpawnData >           SpawnEvents;                                      		// 0x02B4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FParticleEventDeathData >           DeathEvents;                                      		// 0x02C0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FParticleEventCollideData >         CollisionEvents;                                  		// 0x02CC (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FParticleEventKismetData >          KismetEvents;                                     		// 0x02D8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FPointer                                    ReleaseResourcesFence;                            		// 0x02E4 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	float                                              CustomTimeDilation;                               		// 0x02E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EmitterDelay;                                     		// 0x02EC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FScriptDelegate                             __OnSystemFinished__Delegate;                     		// 0x02F0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.DistributionFloatParticleParameter
// 0x0003 (0x0070 - 0x006D)
class UDistributionFloatParticleParameter : public UDistributionFloatParameterBase
{
public:
public:
};

// Class Engine.DistributionVectorParticleParameter
// 0x0001 (0x00A0 - 0x009F)
class UDistributionVectorParticleParameter : public UDistributionVectorParameterBase
{
public:
public:
};

// Class Engine.ParticleEmitter
// 0x0034 (0x0070 - 0x003C)
class UParticleEmitter : public UObject
{
public:
	struct FName                                       EmitterName;                                      		// 0x003C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	int                                                RenderPriority;                                   		// 0x0044 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                SubUVDataOffset;                                  		// 0x0048 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      EmitterRenderMode;                                		// 0x004C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      EmitterEditorColor;                               		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class UParticleLODLevel* >                 LODLevels;                                        		// 0x0054 (0x000C) [0x0000000004400008]              ( CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
	unsigned long                                      ConvertedModules : 1;                             		// 0x0060 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bCollapsed : 1;                                   		// 0x0060 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bIsSoloing : 1;                                   		// 0x0060 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bCookedOut : 1;                                   		// 0x0060 (0x0004) [0x0000000000000000] [0x00000008] 
	int                                                PeakActiveParticles;                              		// 0x0064 (0x0004) [0x0000000000000000]              
	int                                                InitialAllocationCount;                           		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MediumDetailSpawnRateScale;                       		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleSpriteEmitter
// 0x0000 (0x0070 - 0x0070)
class UParticleSpriteEmitter : public UParticleEmitter
{
public:
public:
};

// Class Engine.ParticleLODLevel
// 0x0064 (0x00A0 - 0x003C)
class UParticleLODLevel : public UObject
{
public:
	int                                                Level;                                            		// 0x003C (0x0004) [0x0000000000000002]              ( CPF_Const )
	unsigned long                                      bEnabled : 1;                                     		// 0x0040 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      ConvertedModules : 1;                             		// 0x0040 (0x0004) [0x0000000000000000] [0x00000002] 
	class UParticleModuleRequired*                     RequiredModule;                                   		// 0x0044 (0x0004) [0x0000000004400008]              ( CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
	TArray< class UParticleModule* >                   Modules;                                          		// 0x0048 (0x000C) [0x0000000004400008]              ( CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
	class UParticleModule*                             TypeDataModule;                                   		// 0x0054 (0x0004) [0x0000000000000008]              ( CPF_ExportObject )
	class UParticleModuleSpawn*                        SpawnModule;                                      		// 0x0058 (0x0004) [0x0000000000000008]              ( CPF_ExportObject )
	class UParticleModuleEventGenerator*               EventGenerator;                                   		// 0x005C (0x0004) [0x0000000000000008]              ( CPF_ExportObject )
	TArray< class UParticleModuleSpawnBase* >          SpawningModules;                                  		// 0x0060 (0x000C) [0x0000000000001000]              ( CPF_Native )
	TArray< class UParticleModule* >                   SpawnModules;                                     		// 0x006C (0x000C) [0x0000000000001000]              ( CPF_Native )
	TArray< class UParticleModule* >                   UpdateModules;                                    		// 0x0078 (0x000C) [0x0000000000001000]              ( CPF_Native )
	TArray< class UParticleModuleOrbit* >              OrbitModules;                                     		// 0x0084 (0x000C) [0x0000000000001000]              ( CPF_Native )
	TArray< class UParticleModuleEventReceiverBase* >  EventReceiverModules;                             		// 0x0090 (0x000C) [0x0000000000001000]              ( CPF_Native )
	int                                                PeakActiveParticles;                              		// 0x009C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.ParticleModule
// 0x000C (0x0048 - 0x003C)
class UParticleModule : public UObject
{
public:
	unsigned long                                      bSpawnModule : 1;                                 		// 0x003C (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bUpdateModule : 1;                                		// 0x003C (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bFinalUpdateModule : 1;                           		// 0x003C (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bCurvesAsColor : 1;                               		// 0x003C (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      b3DDrawMode : 1;                                  		// 0x003C (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bSupported3DDrawMode : 1;                         		// 0x003C (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bEnabled : 1;                                     		// 0x003C (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bEditable : 1;                                    		// 0x003C (0x0004) [0x0000000000000000] [0x00000080] 
	unsigned long                                      LODDuplicate : 1;                                 		// 0x003C (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      bSupportsRandomSeed : 1;                          		// 0x003C (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bRequiresLoopingNotification : 1;                 		// 0x003C (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned char                                      LODValidity;                                      		// 0x0040 (0x0001) [0x0000000000000002]              ( CPF_Const )
	struct FColor                                      ModuleEditorColor;                                		// 0x0044 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleAccelerationBase
// 0x0004 (0x004C - 0x0048)
class UParticleModuleAccelerationBase : public UParticleModule
{
public:
	unsigned long                                      bAlwaysInWorldSpace : 1;                          		// 0x0048 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleAcceleration
// 0x0020 (0x006C - 0x004C)
class UParticleModuleAcceleration : public UParticleModuleAccelerationBase
{
public:
	struct FRawDistributionVector                      Acceleration;                                     		// 0x004C (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      bApplyOwnerScale : 1;                             		// 0x0068 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleAccelerationOverLifetime
// 0x001C (0x0068 - 0x004C)
class UParticleModuleAccelerationOverLifetime : public UParticleModuleAccelerationBase
{
public:
	struct FRawDistributionVector                      AccelOverLife;                                    		// 0x004C (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleAttractorBase
// 0x0000 (0x0048 - 0x0048)
class UParticleModuleAttractorBase : public UParticleModule
{
public:
public:
};

// Class Engine.ParticleModuleAttractorLine
// 0x0050 (0x0098 - 0x0048)
class UParticleModuleAttractorLine : public UParticleModuleAttractorBase
{
public:
	struct FVector                                     EndPoint0;                                        		// 0x0048 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     EndPoint1;                                        		// 0x0054 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionFloat                       Range;                                            		// 0x0060 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       Strength;                                         		// 0x007C (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleAttractorParticle
// 0x004C (0x0094 - 0x0048)
class UParticleModuleAttractorParticle : public UParticleModuleAttractorBase
{
public:
	struct FName                                       EmitterName;                                      		// 0x0048 (0x0008) [0x0000000002000009]              ( CPF_Edit | CPF_ExportObject | CPF_NoClear )
	struct FRawDistributionFloat                       Range;                                            		// 0x0050 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      bStrengthByDistance : 1;                          		// 0x006C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bAffectBaseVelocity : 1;                          		// 0x006C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bRenewSource : 1;                                 		// 0x006C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bInheritSourceVel : 1;                            		// 0x006C (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	struct FRawDistributionFloat                       Strength;                                         		// 0x0070 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned char                                      SelectionMethod;                                  		// 0x008C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	int                                                LastSelIndex;                                     		// 0x0090 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.ParticleModuleAttractorPoint
// 0x0058 (0x00A0 - 0x0048)
class UParticleModuleAttractorPoint : public UParticleModuleAttractorBase
{
public:
	struct FRawDistributionVector                      Position;                                         		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       Range;                                            		// 0x0064 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       Strength;                                         		// 0x0080 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      StrengthByDistance : 1;                           		// 0x009C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bAffectBaseVelocity : 1;                          		// 0x009C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bOverrideVelocity : 1;                            		// 0x009C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bUseWorldSpacePosition : 1;                       		// 0x009C (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleBeamBase
// 0x0000 (0x0048 - 0x0048)
class UParticleModuleBeamBase : public UParticleModule
{
public:
public:
};

// Class Engine.ParticleModuleBeamModifier
// 0x0068 (0x00B0 - 0x0048)
class UParticleModuleBeamModifier : public UParticleModuleBeamBase
{
public:
	unsigned char                                      ModifierType;                                     		// 0x0048 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FBeamModifierOptions                        PositionOptions;                                  		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionVector                      Position;                                         		// 0x0050 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FBeamModifierOptions                        TangentOptions;                                   		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionVector                      Tangent;                                          		// 0x0070 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      bAbsoluteTangent : 1;                             		// 0x008C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	struct FBeamModifierOptions                        StrengthOptions;                                  		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionFloat                       Strength;                                         		// 0x0094 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleBeamNoise
// 0x00AC (0x00F4 - 0x0048)
class UParticleModuleBeamNoise : public UParticleModuleBeamBase
{
public:
	unsigned long                                      bLowFreq_Enabled : 1;                             		// 0x0048 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bNRScaleEmitterTime : 1;                          		// 0x0048 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bSmooth : 1;                                      		// 0x0048 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bNoiseLock : 1;                                   		// 0x0048 (0x0004) [0x0000000000000002] [0x00000008] ( CPF_Const )
	unsigned long                                      bOscillate : 1;                                   		// 0x0048 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bUseNoiseTangents : 1;                            		// 0x0048 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bTargetNoise : 1;                                 		// 0x0048 (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bApplyNoiseScale : 1;                             		// 0x0048 (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	int                                                Frequency;                                        		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                Frequency_LowRange;                               		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionVector                      NoiseRange;                                       		// 0x0054 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       NoiseRangeScale;                                  		// 0x0070 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionVector                      NoiseSpeed;                                       		// 0x008C (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	float                                              NoiseLockRadius;                                  		// 0x00A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              NoiseLockTime;                                    		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              NoiseTension;                                     		// 0x00B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionFloat                       NoiseTangentStrength;                             		// 0x00B4 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	int                                                NoiseTessellation;                                		// 0x00D0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FrequencyDistance;                                		// 0x00D4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionFloat                       NoiseScale;                                       		// 0x00D8 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleBeamSource
// 0x0064 (0x00AC - 0x0048)
class UParticleModuleBeamSource : public UParticleModuleBeamBase
{
public:
	unsigned char                                      SourceMethod;                                     		// 0x0048 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      SourceTangentMethod;                              		// 0x0049 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       SourceName;                                       		// 0x004C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bSourceAbsolute : 1;                              		// 0x0054 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bLockSource : 1;                                  		// 0x0054 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bLockSourceTangent : 1;                           		// 0x0054 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bLockSourceStength : 1;                           		// 0x0054 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	struct FRawDistributionVector                      Source;                                           		// 0x0058 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionVector                      SourceTangent;                                    		// 0x0074 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       SourceStrength;                                   		// 0x0090 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleBeamTarget
// 0x0068 (0x00B0 - 0x0048)
class UParticleModuleBeamTarget : public UParticleModuleBeamBase
{
public:
	unsigned char                                      TargetMethod;                                     		// 0x0048 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      TargetTangentMethod;                              		// 0x0049 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       TargetName;                                       		// 0x004C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionVector                      Target;                                           		// 0x0054 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      bTargetAbsolute : 1;                              		// 0x0070 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bLockTarget : 1;                                  		// 0x0070 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bLockTargetTangent : 1;                           		// 0x0070 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bLockTargetStength : 1;                           		// 0x0070 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	struct FRawDistributionVector                      TargetTangent;                                    		// 0x0074 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       TargetStrength;                                   		// 0x0090 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	float                                              LockRadius;                                       		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleCameraBase
// 0x0000 (0x0048 - 0x0048)
class UParticleModuleCameraBase : public UParticleModule
{
public:
public:
};

// Class Engine.ParticleModuleCameraOffset
// 0x0021 (0x0069 - 0x0048)
class UParticleModuleCameraOffset : public UParticleModuleCameraBase
{
public:
	struct FRawDistributionFloat                       CameraOffset;                                     		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      bSpawnTimeOnly : 1;                               		// 0x0064 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned char                                      UpdateMethod;                                     		// 0x0068 (0x0001) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleCollisionBase
// 0x0000 (0x0048 - 0x0048)
class UParticleModuleCollisionBase : public UParticleModule
{
public:
public:
};

// Class Engine.ParticleModuleCollision
// 0x00A0 (0x00E8 - 0x0048)
class UParticleModuleCollision : public UParticleModuleCollisionBase
{
public:
	struct FRawDistributionVector                      DampingFactor;                                    		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionVector                      DampingFactorRotation;                            		// 0x0064 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       MaxCollisions;                                    		// 0x0080 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned char                                      CollisionCompletionOption;                        		// 0x009C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bApplyPhysics : 1;                                		// 0x00A0 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bPawnsDoNotDecrementCount : 1;                    		// 0x00A0 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bOnlyVerticalNormalsDecrementCount : 1;           		// 0x00A0 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bDropDetail : 1;                                  		// 0x00A0 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bCollideOnlyIfVisible : 1;                        		// 0x00A0 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	struct FRawDistributionFloat                       ParticleMass;                                     		// 0x00A4 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	float                                              DirScalar;                                        		// 0x00C0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              VerticalFudgeFactor;                              		// 0x00C4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionFloat                       DelayAmount;                                      		// 0x00C8 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	float                                              MaxCollisionDistance;                             		// 0x00E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleCollisionActor
// 0x0010 (0x00F8 - 0x00E8)
class UParticleModuleCollisionActor : public UParticleModuleCollision
{
public:
	TArray< struct FName >                             ActorsToCollideWith;                              		// 0x00E8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      bCheckPawnCollisions : 1;                         		// 0x00F4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleColorBase
// 0x0000 (0x0048 - 0x0048)
class UParticleModuleColorBase : public UParticleModule
{
public:
public:
};

// Class Engine.ParticleModuleColor
// 0x003C (0x0084 - 0x0048)
class UParticleModuleColor : public UParticleModuleColorBase
{
public:
	struct FRawDistributionVector                      StartColor;                                       		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       StartAlpha;                                       		// 0x0064 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      bClampAlpha : 1;                                  		// 0x0080 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleColor_Seeded
// 0x0018 (0x009C - 0x0084)
class UParticleModuleColor_Seeded : public UParticleModuleColor
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                   		// 0x0084 (0x0018) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleColorByParameter
// 0x000C (0x0054 - 0x0048)
class UParticleModuleColorByParameter : public UParticleModuleColorBase
{
public:
	struct FName                                       ColorParam;                                       		// 0x0048 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      DefaultColor;                                     		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleColorOverLife
// 0x003C (0x0084 - 0x0048)
class UParticleModuleColorOverLife : public UParticleModuleColorBase
{
public:
	struct FRawDistributionVector                      ColorOverLife;                                    		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       AlphaOverLife;                                    		// 0x0064 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      bClampAlpha : 1;                                  		// 0x0080 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleColorScaleOverDensity
// 0x0038 (0x0080 - 0x0048)
class UParticleModuleColorScaleOverDensity : public UParticleModuleColorBase
{
public:
	struct FRawDistributionVector                      ColorScaleOverDensity;                            		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       AlphaScaleOverDensity;                            		// 0x0064 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleColorScaleOverLife
// 0x003C (0x0084 - 0x0048)
class UParticleModuleColorScaleOverLife : public UParticleModuleColorBase
{
public:
	struct FRawDistributionVector                      ColorScaleOverLife;                               		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       AlphaScaleOverLife;                               		// 0x0064 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      bEmitterTime : 1;                                 		// 0x0080 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleEventBase
// 0x0000 (0x0048 - 0x0048)
class UParticleModuleEventBase : public UParticleModule
{
public:
public:
};

// Class Engine.ParticleModuleEventGenerator
// 0x000C (0x0054 - 0x0048)
class UParticleModuleEventGenerator : public UParticleModuleEventBase
{
public:
	TArray< struct FParticleEvent_GenerateInfo >       Events;                                           		// 0x0048 (0x000C) [0x0000000002400009]              ( CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_NoClear )
public:
};

// Class Engine.ParticleModuleEventReceiverBase
// 0x000C (0x0054 - 0x0048)
class UParticleModuleEventReceiverBase : public UParticleModuleEventBase
{
public:
	unsigned char                                      EventGeneratorType;                               		// 0x0048 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       EventName;                                        		// 0x004C (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleEventReceiverKillParticles
// 0x0004 (0x0058 - 0x0054)
class UParticleModuleEventReceiverKillParticles : public UParticleModuleEventReceiverBase
{
public:
	unsigned long                                      bStopSpawning : 1;                                		// 0x0054 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleEventReceiverSpawn
// 0x003C (0x0090 - 0x0054)
class UParticleModuleEventReceiverSpawn : public UParticleModuleEventReceiverBase
{
public:
	struct FRawDistributionFloat                       SpawnCount;                                       		// 0x0054 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      bUseParticleTime : 1;                             		// 0x0070 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bUsePSysLocation : 1;                             		// 0x0070 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bInheritVelocity : 1;                             		// 0x0070 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	struct FRawDistributionVector                      InheritVelocityScale;                             		// 0x0074 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleKillBase
// 0x0000 (0x0048 - 0x0048)
class UParticleModuleKillBase : public UParticleModule
{
public:
public:
};

// Class Engine.ParticleModuleKillBox
// 0x003C (0x0084 - 0x0048)
class UParticleModuleKillBox : public UParticleModuleKillBase
{
public:
	struct FRawDistributionVector                      LowerLeftCorner;                                  		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionVector                      UpperRightCorner;                                 		// 0x0064 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      bAbsolute : 1;                                    		// 0x0080 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bKillInside : 1;                                  		// 0x0080 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bAxisAlignedAndFixedSize : 1;                     		// 0x0080 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleKillHeight
// 0x0020 (0x0068 - 0x0048)
class UParticleModuleKillHeight : public UParticleModuleKillBase
{
public:
	struct FRawDistributionFloat                       Height;                                           		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      bAbsolute : 1;                                    		// 0x0064 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bFloor : 1;                                       		// 0x0064 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bApplyPSysScale : 1;                              		// 0x0064 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleLifetimeBase
// 0x0000 (0x0048 - 0x0048)
class UParticleModuleLifetimeBase : public UParticleModule
{
public:
public:
};

// Class Engine.ParticleModuleLifetime
// 0x001C (0x0064 - 0x0048)
class UParticleModuleLifetime : public UParticleModuleLifetimeBase
{
public:
	struct FRawDistributionFloat                       Lifetime;                                         		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleLifetime_Seeded
// 0x0018 (0x007C - 0x0064)
class UParticleModuleLifetime_Seeded : public UParticleModuleLifetime
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                   		// 0x0064 (0x0018) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleLocationBase
// 0x0000 (0x0048 - 0x0048)
class UParticleModuleLocationBase : public UParticleModule
{
public:
public:
};

// Class Engine.ParticleModuleLocation
// 0x0024 (0x006C - 0x0048)
class UParticleModuleLocation : public UParticleModuleLocationBase
{
public:
	struct FRawDistributionVector                      StartLocation;                                    		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	float                                              DistributeOverNPoints;                            		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DistributeThreshold;                              		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleLocation_Seeded
// 0x0018 (0x0084 - 0x006C)
class UParticleModuleLocation_Seeded : public UParticleModuleLocation
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                   		// 0x006C (0x0018) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleLocationWorldOffset
// 0x0000 (0x006C - 0x006C)
class UParticleModuleLocationWorldOffset : public UParticleModuleLocation
{
public:
public:
};

// Class Engine.ParticleModuleLocationWorldOffset_Seeded
// 0x0018 (0x0084 - 0x006C)
class UParticleModuleLocationWorldOffset_Seeded : public UParticleModuleLocationWorldOffset
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                   		// 0x006C (0x0018) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleLocationBoneSocket
// 0x002C (0x0074 - 0x0048)
class UParticleModuleLocationBoneSocket : public UParticleModuleLocationBase
{
public:
	unsigned char                                      SourceType;                                       		// 0x0048 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      SelectionMethod;                                  		// 0x0049 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     UniversalOffset;                                  		// 0x004C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FLocationBoneSocketInfo >           SourceLocations;                                  		// 0x0058 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      bUpdatePositionEachFrame : 1;                     		// 0x0064 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bOrientMeshEmitters : 1;                          		// 0x0064 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	struct FName                                       SkelMeshActorParamName;                           		// 0x0068 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	class USkeletalMesh*                               EditorSkelMesh;                                   		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleLocationDirect
// 0x0070 (0x00B8 - 0x0048)
class UParticleModuleLocationDirect : public UParticleModuleLocationBase
{
public:
	struct FRawDistributionVector                      Location;                                         		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionVector                      LocationOffset;                                   		// 0x0064 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionVector                      ScaleFactor;                                      		// 0x0080 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionVector                      Direction;                                        		// 0x009C (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleLocationEmitter
// 0x0018 (0x0060 - 0x0048)
class UParticleModuleLocationEmitter : public UParticleModuleLocationBase
{
public:
	struct FName                                       EmitterName;                                      		// 0x0048 (0x0008) [0x0000000002000009]              ( CPF_Edit | CPF_ExportObject | CPF_NoClear )
	unsigned char                                      SelectionMethod;                                  		// 0x0050 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      InheritSourceVelocity : 1;                        		// 0x0054 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bInheritSourceRotation : 1;                       		// 0x0054 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	float                                              InheritSourceVelocityScale;                       		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              InheritSourceRotationScale;                       		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleLocationEmitterDirect
// 0x0008 (0x0050 - 0x0048)
class UParticleModuleLocationEmitterDirect : public UParticleModuleLocationBase
{
public:
	struct FName                                       EmitterName;                                      		// 0x0048 (0x0008) [0x0000000002000009]              ( CPF_Edit | CPF_ExportObject | CPF_NoClear )
public:
};

// Class Engine.ParticleModuleLocationPrimitiveBase
// 0x003C (0x0084 - 0x0048)
class UParticleModuleLocationPrimitiveBase : public UParticleModuleLocationBase
{
public:
	unsigned long                                      Positive_X : 1;                                   		// 0x0048 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      Positive_Y : 1;                                   		// 0x0048 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      Positive_Z : 1;                                   		// 0x0048 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      Negative_X : 1;                                   		// 0x0048 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      Negative_Y : 1;                                   		// 0x0048 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      Negative_Z : 1;                                   		// 0x0048 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      SurfaceOnly : 1;                                  		// 0x0048 (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      Velocity : 1;                                     		// 0x0048 (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	struct FRawDistributionFloat                       VelocityScale;                                    		// 0x004C (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionVector                      StartLocation;                                    		// 0x0068 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleLocationPrimitiveCylinder
// 0x003D (0x00C1 - 0x0084)
class UParticleModuleLocationPrimitiveCylinder : public UParticleModuleLocationPrimitiveBase
{
public:
	unsigned long                                      RadialVelocity : 1;                               		// 0x0084 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	struct FRawDistributionFloat                       StartRadius;                                      		// 0x0088 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       StartHeight;                                      		// 0x00A4 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned char                                      HeightAxis;                                       		// 0x00C0 (0x0001) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleLocationPrimitiveCylinder_Seeded
// 0x001B (0x00DC - 0x00C1)
class UParticleModuleLocationPrimitiveCylinder_Seeded : public UParticleModuleLocationPrimitiveCylinder
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                   		// 0x00C4 (0x0018) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleLocationPrimitiveSphere
// 0x001C (0x00A0 - 0x0084)
class UParticleModuleLocationPrimitiveSphere : public UParticleModuleLocationPrimitiveBase
{
public:
	struct FRawDistributionFloat                       StartRadius;                                      		// 0x0084 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleLocationPrimitiveSphere_Seeded
// 0x0018 (0x00B8 - 0x00A0)
class UParticleModuleLocationPrimitiveSphere_Seeded : public UParticleModuleLocationPrimitiveSphere
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                   		// 0x00A0 (0x0018) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleLocationSkelVertSurface
// 0x004C (0x0094 - 0x0048)
class UParticleModuleLocationSkelVertSurface : public UParticleModuleLocationBase
{
public:
	unsigned char                                      SourceType;                                       		// 0x0048 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     UniversalOffset;                                  		// 0x004C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bUpdatePositionEachFrame : 1;                     		// 0x0058 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bOrientMeshEmitters : 1;                          		// 0x0058 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bEnforceNormalCheck : 1;                          		// 0x0058 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	struct FName                                       SkelMeshActorParamName;                           		// 0x005C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	class USkeletalMesh*                               EditorSkelMesh;                                   		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FName >                             ValidAssociatedBones;                             		// 0x0068 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FVector                                     NormalToCompare;                                  		// 0x0074 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              NormalCheckToleranceDegrees;                      		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              NormalCheckTolerance;                             		// 0x0084 (0x0004) [0x0000000000000000]              
	TArray< int >                                      ValidMaterialIndices;                             		// 0x0088 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleSourceMovement
// 0x001C (0x0064 - 0x0048)
class UParticleModuleSourceMovement : public UParticleModuleLocationBase
{
public:
	struct FRawDistributionVector                      SourceMovementScale;                              		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleMaterialBase
// 0x0000 (0x0048 - 0x0048)
class UParticleModuleMaterialBase : public UParticleModule
{
public:
public:
};

// Class Engine.ParticleModuleMaterialByParameter
// 0x0018 (0x0060 - 0x0048)
class UParticleModuleMaterialByParameter : public UParticleModuleMaterialBase
{
public:
	TArray< struct FName >                             MaterialParameters;                               		// 0x0048 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class UMaterialInterface* >                DefaultMaterials;                                 		// 0x0054 (0x000C) [0x0000000000400041]              ( CPF_Edit | CPF_EditConstArray | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleMeshMaterial
// 0x000C (0x0054 - 0x0048)
class UParticleModuleMeshMaterial : public UParticleModuleMaterialBase
{
public:
	TArray< class UMaterialInterface* >                MeshMaterials;                                    		// 0x0048 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleOrbitBase
// 0x0004 (0x004C - 0x0048)
class UParticleModuleOrbitBase : public UParticleModule
{
public:
	unsigned long                                      bUseEmitterTime : 1;                              		// 0x0048 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleOrbit
// 0x0064 (0x00B0 - 0x004C)
class UParticleModuleOrbit : public UParticleModuleOrbitBase
{
public:
	unsigned char                                      ChainMode;                                        		// 0x004C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionVector                      OffsetAmount;                                     		// 0x0050 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FOrbitOptions                               OffsetOptions;                                    		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionVector                      RotationAmount;                                   		// 0x0070 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FOrbitOptions                               RotationOptions;                                  		// 0x008C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionVector                      RotationRateAmount;                               		// 0x0090 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FOrbitOptions                               RotationRateOptions;                              		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleOrientationBase
// 0x0000 (0x0048 - 0x0048)
class UParticleModuleOrientationBase : public UParticleModule
{
public:
public:
};

// Class Engine.ParticleModuleOrientationAxisLock
// 0x0001 (0x0049 - 0x0048)
class UParticleModuleOrientationAxisLock : public UParticleModuleOrientationBase
{
public:
	unsigned char                                      LockAxisFlags;                                    		// 0x0048 (0x0001) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleParameterBase
// 0x0000 (0x0048 - 0x0048)
class UParticleModuleParameterBase : public UParticleModule
{
public:
public:
};

// Class Engine.ParticleModuleParameterDynamic
// 0x0014 (0x005C - 0x0048)
class UParticleModuleParameterDynamic : public UParticleModuleParameterBase
{
public:
	TArray< struct FEmitterDynamicParameter >          DynamicParams;                                    		// 0x0048 (0x000C) [0x0000000000480041]              ( CPF_Edit | CPF_EditConstArray | CPF_Component | CPF_NeedCtorLink )
	int                                                UpdateFlags;                                      		// 0x0054 (0x0004) [0x0000000000000000]              
	unsigned long                                      bUsesVelocity : 1;                                		// 0x0058 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class Engine.ParticleModuleParameterDynamic_Seeded
// 0x0018 (0x0074 - 0x005C)
class UParticleModuleParameterDynamic_Seeded : public UParticleModuleParameterDynamic
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                   		// 0x005C (0x0018) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleRequired
// 0x008C (0x00D4 - 0x0048)
class UParticleModuleRequired : public UParticleModule
{
public:
	class UMaterialInterface*                          Material;                                         		// 0x0048 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      ScreenAlignment;                                  		// 0x004C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      SortMode;                                         		// 0x004D (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      ParticleBurstMethod;                              		// 0x004E (0x0001) [0x0000000000000000]              
	unsigned char                                      InterpolationMethod;                              		// 0x004F (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      EmitterNormalsMode;                               		// 0x0050 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bUseLocalSpace : 1;                               		// 0x0054 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bKillOnDeactivate : 1;                            		// 0x0054 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bKillOnCompleted : 1;                             		// 0x0054 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bRequiresSorting : 1;                             		// 0x0054 (0x0004) [0x0000000020000000] [0x00000008] ( CPF_Deprecated )
	unsigned long                                      bUseLegacyEmitterTime : 1;                        		// 0x0054 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bEmitterDurationUseRange : 1;                     		// 0x0054 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bDurationRecalcEachLoop : 1;                      		// 0x0054 (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bEmitterDelayUseRange : 1;                        		// 0x0054 (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bDelayFirstLoopOnly : 1;                          		// 0x0054 (0x0004) [0x0000000000000001] [0x00000100] ( CPF_Edit )
	unsigned long                                      bScaleUV : 1;                                     		// 0x0054 (0x0004) [0x0000000000000001] [0x00000200] ( CPF_Edit )
	unsigned long                                      bDirectUV : 1;                                    		// 0x0054 (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      bOverrideSystemMacroUV : 1;                       		// 0x0054 (0x0004) [0x0000000000000001] [0x00000800] ( CPF_Edit )
	unsigned long                                      bUseMaxDrawCount : 1;                             		// 0x0054 (0x0004) [0x0000000000000001] [0x00001000] ( CPF_Edit )
	unsigned long                                      bOrbitModuleAffectsVelocityAlignment : 1;         		// 0x0054 (0x0004) [0x0000000000000001] [0x00002000] ( CPF_Edit )
	float                                              EmitterDuration;                                  		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EmitterDurationLow;                               		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                EmitterLoops;                                     		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionFloat                       SpawnRate;                                        		// 0x0064 (0x001C) [0x0000000000480000]              ( CPF_Component | CPF_NeedCtorLink )
	TArray< struct FParticleBurst >                    BurstList;                                        		// 0x0080 (0x000C) [0x0000000002400008]              ( CPF_ExportObject | CPF_NeedCtorLink | CPF_NoClear )
	float                                              EmitterDelay;                                     		// 0x008C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EmitterDelayLow;                                  		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                SubImages_Horizontal;                             		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                SubImages_Vertical;                               		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RandomImageTime;                                  		// 0x009C (0x0004) [0x0000000000000000]              
	int                                                RandomImageChanges;                               		// 0x00A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     MacroUVPosition;                                  		// 0x00A4 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              MacroUVRadius;                                    		// 0x00B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                MaxDrawCount;                                     		// 0x00B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DownsampleThresholdScreenFraction;                		// 0x00B8 (0x0004) [0x0000000000000000]              
	struct FVector                                     NormalsSphereCenter;                              		// 0x00BC (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     NormalsCylinderDirection;                         		// 0x00C8 (0x000C) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleRotationBase
// 0x0000 (0x0048 - 0x0048)
class UParticleModuleRotationBase : public UParticleModule
{
public:
public:
};

// Class Engine.ParticleModuleMeshRotation
// 0x0020 (0x0068 - 0x0048)
class UParticleModuleMeshRotation : public UParticleModuleRotationBase
{
public:
	struct FRawDistributionVector                      StartRotation;                                    		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      bInheritParent : 1;                               		// 0x0064 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleMeshRotation_Seeded
// 0x0018 (0x0080 - 0x0068)
class UParticleModuleMeshRotation_Seeded : public UParticleModuleMeshRotation
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                   		// 0x0068 (0x0018) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleRotation
// 0x001C (0x0064 - 0x0048)
class UParticleModuleRotation : public UParticleModuleRotationBase
{
public:
	struct FRawDistributionFloat                       StartRotation;                                    		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleRotation_Seeded
// 0x0018 (0x007C - 0x0064)
class UParticleModuleRotation_Seeded : public UParticleModuleRotation
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                   		// 0x0064 (0x0018) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleRotationOverLifetime
// 0x0020 (0x0068 - 0x0048)
class UParticleModuleRotationOverLifetime : public UParticleModuleRotationBase
{
public:
	struct FRawDistributionFloat                       RotationOverLife;                                 		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      Scale : 1;                                        		// 0x0064 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleRotationRateBase
// 0x0000 (0x0048 - 0x0048)
class UParticleModuleRotationRateBase : public UParticleModule
{
public:
public:
};

// Class Engine.ParticleModuleMeshRotationRate
// 0x001C (0x0064 - 0x0048)
class UParticleModuleMeshRotationRate : public UParticleModuleRotationRateBase
{
public:
	struct FRawDistributionVector                      StartRotationRate;                                		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleMeshRotationRate_Seeded
// 0x0018 (0x007C - 0x0064)
class UParticleModuleMeshRotationRate_Seeded : public UParticleModuleMeshRotationRate
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                   		// 0x0064 (0x0018) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleMeshRotationRateMultiplyLife
// 0x001C (0x0064 - 0x0048)
class UParticleModuleMeshRotationRateMultiplyLife : public UParticleModuleRotationRateBase
{
public:
	struct FRawDistributionVector                      LifeMultiplier;                                   		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleMeshRotationRateOverLife
// 0x0020 (0x0068 - 0x0048)
class UParticleModuleMeshRotationRateOverLife : public UParticleModuleRotationRateBase
{
public:
	struct FRawDistributionVector                      RotRate;                                          		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      bScaleRotRate : 1;                                		// 0x0064 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleRotationRate
// 0x001C (0x0064 - 0x0048)
class UParticleModuleRotationRate : public UParticleModuleRotationRateBase
{
public:
	struct FRawDistributionFloat                       StartRotationRate;                                		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleRotationRate_Seeded
// 0x0018 (0x007C - 0x0064)
class UParticleModuleRotationRate_Seeded : public UParticleModuleRotationRate
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                   		// 0x0064 (0x0018) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleRotationRateMultiplyLife
// 0x001C (0x0064 - 0x0048)
class UParticleModuleRotationRateMultiplyLife : public UParticleModuleRotationRateBase
{
public:
	struct FRawDistributionFloat                       LifeMultiplier;                                   		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleSizeBase
// 0x0000 (0x0048 - 0x0048)
class UParticleModuleSizeBase : public UParticleModule
{
public:
public:
};

// Class Engine.ParticleModuleSize
// 0x001C (0x0064 - 0x0048)
class UParticleModuleSize : public UParticleModuleSizeBase
{
public:
	struct FRawDistributionVector                      StartSize;                                        		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleSize_Seeded
// 0x0018 (0x007C - 0x0064)
class UParticleModuleSize_Seeded : public UParticleModuleSize
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                   		// 0x0064 (0x0018) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleSizeMultiplyLife
// 0x0020 (0x0068 - 0x0048)
class UParticleModuleSizeMultiplyLife : public UParticleModuleSizeBase
{
public:
	struct FRawDistributionVector                      LifeMultiplier;                                   		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      MultiplyX : 1;                                    		// 0x0064 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      MultiplyY : 1;                                    		// 0x0064 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      MultiplyZ : 1;                                    		// 0x0064 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleSizeMultiplyVelocity
// 0x0020 (0x0068 - 0x0048)
class UParticleModuleSizeMultiplyVelocity : public UParticleModuleSizeBase
{
public:
	struct FRawDistributionVector                      VelocityMultiplier;                               		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      MultiplyX : 1;                                    		// 0x0064 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      MultiplyY : 1;                                    		// 0x0064 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      MultiplyZ : 1;                                    		// 0x0064 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleSizeScale
// 0x0020 (0x0068 - 0x0048)
class UParticleModuleSizeScale : public UParticleModuleSizeBase
{
public:
	struct FRawDistributionVector                      SizeScale;                                        		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      EnableX : 1;                                      		// 0x0064 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      EnableY : 1;                                      		// 0x0064 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      EnableZ : 1;                                      		// 0x0064 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleSizeScaleByTime
// 0x0020 (0x0068 - 0x0048)
class UParticleModuleSizeScaleByTime : public UParticleModuleSizeBase
{
public:
	struct FRawDistributionVector                      SizeScaleByTime;                                  		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      bEnableX : 1;                                     		// 0x0064 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bEnableY : 1;                                     		// 0x0064 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bEnableZ : 1;                                     		// 0x0064 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleSizeScaleOverDensity
// 0x001C (0x0064 - 0x0048)
class UParticleModuleSizeScaleOverDensity : public UParticleModuleSizeBase
{
public:
	struct FRawDistributionVector                      SizeScaleOverDensity;                             		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleSpawnBase
// 0x0004 (0x004C - 0x0048)
class UParticleModuleSpawnBase : public UParticleModule
{
public:
	unsigned long                                      bProcessSpawnRate : 1;                            		// 0x0048 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bProcessBurstList : 1;                            		// 0x0048 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleSpawn
// 0x0048 (0x0094 - 0x004C)
class UParticleModuleSpawn : public UParticleModuleSpawnBase
{
public:
	struct FRawDistributionFloat                       Rate;                                             		// 0x004C (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       RateScale;                                        		// 0x0068 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned char                                      ParticleBurstMethod;                              		// 0x0084 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FParticleBurst >                    BurstList;                                        		// 0x0088 (0x000C) [0x0000000002400009]              ( CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_NoClear )
public:
};

// Class Engine.ParticleModuleSpawnPerUnit
// 0x002C (0x0078 - 0x004C)
class UParticleModuleSpawnPerUnit : public UParticleModuleSpawnBase
{
public:
	float                                              UnitScalar;                                       		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionFloat                       SpawnPerUnit;                                     		// 0x0050 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      bIgnoreSpawnRateWhenMoving : 1;                   		// 0x006C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bIgnoreMovementAlongX : 1;                        		// 0x006C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bIgnoreMovementAlongY : 1;                        		// 0x006C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bIgnoreMovementAlongZ : 1;                        		// 0x006C (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	float                                              MovementTolerance;                                		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxFrameDistance;                                 		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleStoreSpawnTimeBase
// 0x0000 (0x0048 - 0x0048)
class UParticleModuleStoreSpawnTimeBase : public UParticleModule
{
public:
public:
};

// Class Engine.ParticleModuleStoreSpawnTime
// 0x0000 (0x0048 - 0x0048)
class UParticleModuleStoreSpawnTime : public UParticleModuleStoreSpawnTimeBase
{
public:
public:
};

// Class Engine.ParticleModuleSubUVBase
// 0x0000 (0x0048 - 0x0048)
class UParticleModuleSubUVBase : public UParticleModule
{
public:
public:
};

// Class Engine.ParticleModuleSubUV
// 0x0020 (0x0068 - 0x0048)
class UParticleModuleSubUV : public UParticleModuleSubUVBase
{
public:
	struct FRawDistributionFloat                       SubImageIndex;                                    		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      bUseRealTime : 1;                                 		// 0x0064 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleSubUVMovie
// 0x0024 (0x008C - 0x0068)
class UParticleModuleSubUVMovie : public UParticleModuleSubUV
{
public:
	unsigned long                                      bUseEmitterTime : 1;                              		// 0x0068 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	struct FRawDistributionFloat                       FrameRate;                                        		// 0x006C (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	int                                                StartingFrame;                                    		// 0x0088 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleSubUVDirect
// 0x0038 (0x0080 - 0x0048)
class UParticleModuleSubUVDirect : public UParticleModuleSubUVBase
{
public:
	struct FRawDistributionVector                      SubUVPosition;                                    		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionVector                      SubUVSize;                                        		// 0x0064 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleSubUVSelect
// 0x001C (0x0064 - 0x0048)
class UParticleModuleSubUVSelect : public UParticleModuleSubUVBase
{
public:
	struct FRawDistributionVector                      SubImageSelect;                                   		// 0x0048 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleTrailBase
// 0x0000 (0x0048 - 0x0048)
class UParticleModuleTrailBase : public UParticleModule
{
public:
public:
};

// Class Engine.ParticleModuleTrailSource
// 0x003C (0x0084 - 0x0048)
class UParticleModuleTrailSource : public UParticleModuleTrailBase
{
public:
	unsigned char                                      SourceMethod;                                     		// 0x0048 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      SelectionMethod;                                  		// 0x0049 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       SourceName;                                       		// 0x004C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionFloat                       SourceStrength;                                   		// 0x0054 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      bLockSourceStength : 1;                           		// 0x0070 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bInheritRotation : 1;                             		// 0x0070 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	int                                                SourceOffsetCount;                                		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FVector >                           SourceOffsetDefaults;                             		// 0x0078 (0x000C) [0x0000000000400041]              ( CPF_Edit | CPF_EditConstArray | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleTrailSpawn
// 0x0008 (0x0050 - 0x0048)
class UParticleModuleTrailSpawn : public UParticleModuleTrailBase
{
public:
	class UDistributionFloatParticleParameter*         SpawnDistanceMap;                                 		// 0x0048 (0x0004) [0x0000000006080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NoClear | CPF_EditInline )
	float                                              MinSpawnVelocity;                                 		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleTrailTaper
// 0x0020 (0x0068 - 0x0048)
class UParticleModuleTrailTaper : public UParticleModuleTrailBase
{
public:
	unsigned char                                      TaperMethod;                                      		// 0x0048 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionFloat                       TaperFactor;                                      		// 0x004C (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleTypeDataBase
// 0x0000 (0x0048 - 0x0048)
class UParticleModuleTypeDataBase : public UParticleModule
{
public:
public:
};

// Class Engine.ParticleModuleTypeDataAnimTrail
// 0x001C (0x0064 - 0x0048)
class UParticleModuleTypeDataAnimTrail : public UParticleModuleTypeDataBase
{
public:
	struct FName                                       ControlEdgeName;                                  		// 0x0048 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	int                                                SheetsPerTrail;                                   		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bDeadTrailsOnDeactivate : 1;                      		// 0x0054 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bClipSourceSegement : 1;                          		// 0x0054 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bEnablePreviousTangentRecalculation : 1;          		// 0x0054 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bTangentRecalculationEveryFrame : 1;              		// 0x0054 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bRenderGeometry : 1;                              		// 0x0054 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bRenderSpawnPoints : 1;                           		// 0x0054 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bRenderTangents : 1;                              		// 0x0054 (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bRenderTessellation : 1;                          		// 0x0054 (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	float                                              TilingDistance;                                   		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DistanceTessellationStepSize;                     		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TangentTessellationScalar;                        		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleTypeDataApex
// 0x0008 (0x0050 - 0x0048)
class UParticleModuleTypeDataApex : public UParticleModuleTypeDataBase
{
public:
	class UApexGenericAsset*                           ApexIOFX;                                         		// 0x0048 (0x0004) [0x0000000000000000]              
	class UApexGenericAsset*                           ApexEmitter;                                      		// 0x004C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.ParticleModuleTypeDataBeam
// 0x009C (0x00E4 - 0x0048)
class UParticleModuleTypeDataBeam : public UParticleModuleTypeDataBase
{
public:
	unsigned char                                      BeamMethod;                                       		// 0x0048 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      EndPointMethod;                                   		// 0x0049 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionFloat                       Distance;                                         		// 0x004C (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionVector                      EndPoint;                                         		// 0x0068 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	int                                                TessellationFactor;                               		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionFloat                       EmitterStrength;                                  		// 0x0088 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       TargetStrength;                                   		// 0x00A4 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionVector                      EndPointDirection;                                		// 0x00C0 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	int                                                TextureTile;                                      		// 0x00DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      RenderGeometry : 1;                               		// 0x00E0 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      RenderDirectLine : 1;                             		// 0x00E0 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      RenderLines : 1;                                  		// 0x00E0 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      RenderTessellation : 1;                           		// 0x00E0 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleTypeDataBeam2
// 0x0080 (0x00C8 - 0x0048)
class UParticleModuleTypeDataBeam2 : public UParticleModuleTypeDataBase
{
public:
	unsigned char                                      BeamMethod;                                       		// 0x0048 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      TaperMethod;                                      		// 0x0049 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	int                                                TextureTile;                                      		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TextureTileDistance;                              		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                Sheets;                                           		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                MaxBeamCount;                                     		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Speed;                                            		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                InterpolationPoints;                              		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bAlwaysOn : 1;                                    		// 0x0064 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      RenderGeometry : 1;                               		// 0x0064 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      RenderDirectLine : 1;                             		// 0x0064 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      RenderLines : 1;                                  		// 0x0064 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      RenderTessellation : 1;                           		// 0x0064 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	int                                                UpVectorStepSize;                                 		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       BranchParentName;                                 		// 0x006C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionFloat                       Distance;                                         		// 0x0074 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       TaperFactor;                                      		// 0x0090 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       TaperScale;                                       		// 0x00AC (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleTypeDataMesh
// 0x0018 (0x0060 - 0x0048)
class UParticleModuleTypeDataMesh : public UParticleModuleTypeDataBase
{
public:
	class UStaticMesh*                                 Mesh;                                             		// 0x0048 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      CastShadows : 1;                                  		// 0x004C (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      DoCollisions : 1;                                 		// 0x004C (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bAllowMotionBlur : 1;                             		// 0x004C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bOverrideMaterial : 1;                            		// 0x004C (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bCameraFacing : 1;                                		// 0x004C (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bApplyParticleRotationAsSpin : 1;                 		// 0x004C (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned char                                      MeshAlignment;                                    		// 0x0050 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      AxisLockOption;                                   		// 0x0051 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      CameraFacingUpAxisOption;                         		// 0x0052 (0x0001) [0x0000000020000000]              ( CPF_Deprecated )
	unsigned char                                      CameraFacingOption;                               		// 0x0053 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              Pitch;                                            		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Roll;                                             		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Yaw;                                              		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleTypeDataMeshPhysX
// 0x001C (0x007C - 0x0060)
class UParticleModuleTypeDataMeshPhysX : public UParticleModuleTypeDataMesh
{
public:
	class UPhysXParticleSystem*                        PhysXParSys;                                      		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      PhysXRotationMethod;                              		// 0x0064 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              FluidRotationCoefficient;                         		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FPhysXEmitterVerticalLodProperties          VerticalLod;                                      		// 0x006C (0x0010) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleTypeDataPhysX
// 0x0014 (0x005C - 0x0048)
class UParticleModuleTypeDataPhysX : public UParticleModuleTypeDataBase
{
public:
	class UPhysXParticleSystem*                        PhysXParSys;                                      		// 0x0048 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FPhysXEmitterVerticalLodProperties          VerticalLod;                                      		// 0x004C (0x0010) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleTypeDataRibbon
// 0x0028 (0x0070 - 0x0048)
class UParticleModuleTypeDataRibbon : public UParticleModuleTypeDataBase
{
public:
	int                                                MaxTessellationBetweenParticles;                  		// 0x0048 (0x0004) [0x0000000000000000]              
	int                                                SheetsPerTrail;                                   		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                MaxTrailCount;                                    		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                MaxParticleInTrailCount;                          		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bDeadTrailsOnDeactivate : 1;                      		// 0x0058 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bDeadTrailsOnSourceLoss : 1;                      		// 0x0058 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bClipSourceSegement : 1;                          		// 0x0058 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bEnablePreviousTangentRecalculation : 1;          		// 0x0058 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bTangentRecalculationEveryFrame : 1;              		// 0x0058 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bSpawnInitialParticle : 1;                        		// 0x0058 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bRenderGeometry : 1;                              		// 0x0058 (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bRenderSpawnPoints : 1;                           		// 0x0058 (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bRenderTangents : 1;                              		// 0x0058 (0x0004) [0x0000000000000001] [0x00000100] ( CPF_Edit )
	unsigned long                                      bRenderTessellation : 1;                          		// 0x0058 (0x0004) [0x0000000000000001] [0x00000200] ( CPF_Edit )
	unsigned long                                      bEnableTangentDiffInterpScale : 1;                		// 0x0058 (0x0004) [0x0000000000000001] [0x00000400] ( CPF_Edit )
	unsigned char                                      RenderAxis;                                       		// 0x005C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              TangentSpawningScalar;                            		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TilingDistance;                                   		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DistanceTessellationStepSize;                     		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TangentTessellationScalar;                        		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleTypeDataTrail
// 0x0030 (0x0078 - 0x0048)
class UParticleModuleTypeDataTrail : public UParticleModuleTypeDataBase
{
public:
	unsigned long                                      RenderGeometry : 1;                               		// 0x0048 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      RenderLines : 1;                                  		// 0x0048 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      RenderTessellation : 1;                           		// 0x0048 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      Tapered : 1;                                      		// 0x0048 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      SpawnByDistance : 1;                              		// 0x0048 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	int                                                TessellationFactor;                               		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionFloat                       Tension;                                          		// 0x0050 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FVector                                     SpawnDistance;                                    		// 0x006C (0x000C) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleTypeDataTrail2
// 0x0020 (0x0068 - 0x0048)
class UParticleModuleTypeDataTrail2 : public UParticleModuleTypeDataBase
{
public:
	int                                                TessellationFactor;                               		// 0x0048 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TessellationFactorDistance;                       		// 0x004C (0x0004) [0x0000000000000000]              
	float                                              TessellationStrength;                             		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                TextureTile;                                      		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                Sheets;                                           		// 0x0058 (0x0004) [0x0000000000000000]              
	int                                                MaxTrailCount;                                    		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                MaxParticleInTrailCount;                          		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bClipSourceSegement : 1;                          		// 0x0064 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bClearTangents : 1;                               		// 0x0064 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      RenderGeometry : 1;                               		// 0x0064 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      RenderDirectLine : 1;                             		// 0x0064 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      RenderLines : 1;                                  		// 0x0064 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      RenderTessellation : 1;                           		// 0x0064 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleUberBase
// 0x000C (0x0054 - 0x0048)
class UParticleModuleUberBase : public UParticleModule
{
public:
	TArray< struct FName >                             RequiredModules;                                  		// 0x0048 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleUberLTISIVCL
// 0x00A8 (0x00FC - 0x0054)
class UParticleModuleUberLTISIVCL : public UParticleModuleUberBase
{
public:
	struct FRawDistributionFloat                       Lifetime;                                         		// 0x0054 (0x001C) [0x0000000002480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_NoClear )
	struct FRawDistributionVector                      StartSize;                                        		// 0x0070 (0x001C) [0x0000000002480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_NoClear )
	struct FRawDistributionVector                      StartVelocity;                                    		// 0x008C (0x001C) [0x0000000002480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_NoClear )
	struct FRawDistributionFloat                       StartVelocityRadial;                              		// 0x00A8 (0x001C) [0x0000000002480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_NoClear )
	struct FRawDistributionVector                      ColorOverLife;                                    		// 0x00C4 (0x001C) [0x0000000002480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_NoClear )
	struct FRawDistributionFloat                       AlphaOverLife;                                    		// 0x00E0 (0x001C) [0x0000000002480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_NoClear )
public:
};

// Class Engine.ParticleModuleUberLTISIVCLIL
// 0x00C4 (0x0118 - 0x0054)
class UParticleModuleUberLTISIVCLIL : public UParticleModuleUberBase
{
public:
	struct FRawDistributionFloat                       Lifetime;                                         		// 0x0054 (0x001C) [0x0000000002480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_NoClear )
	struct FRawDistributionVector                      StartSize;                                        		// 0x0070 (0x001C) [0x0000000002480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_NoClear )
	struct FRawDistributionVector                      StartVelocity;                                    		// 0x008C (0x001C) [0x0000000002480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_NoClear )
	struct FRawDistributionFloat                       StartVelocityRadial;                              		// 0x00A8 (0x001C) [0x0000000002480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_NoClear )
	struct FRawDistributionVector                      ColorOverLife;                                    		// 0x00C4 (0x001C) [0x0000000002480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_NoClear )
	struct FRawDistributionFloat                       AlphaOverLife;                                    		// 0x00E0 (0x001C) [0x0000000002480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_NoClear )
	struct FRawDistributionVector                      StartLocation;                                    		// 0x00FC (0x001C) [0x0000000002480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_NoClear )
public:
};

// Class Engine.ParticleModuleUberLTISIVCLILIRSSBLIRR
// 0x011C (0x0170 - 0x0054)
class UParticleModuleUberLTISIVCLILIRSSBLIRR : public UParticleModuleUberBase
{
public:
	struct FRawDistributionFloat                       Lifetime;                                         		// 0x0054 (0x001C) [0x0000000002480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_NoClear )
	struct FRawDistributionVector                      StartSize;                                        		// 0x0070 (0x001C) [0x0000000002480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_NoClear )
	struct FRawDistributionVector                      StartVelocity;                                    		// 0x008C (0x001C) [0x0000000002480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_NoClear )
	struct FRawDistributionFloat                       StartVelocityRadial;                              		// 0x00A8 (0x001C) [0x0000000002480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_NoClear )
	struct FRawDistributionVector                      ColorOverLife;                                    		// 0x00C4 (0x001C) [0x0000000002480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_NoClear )
	struct FRawDistributionFloat                       AlphaOverLife;                                    		// 0x00E0 (0x001C) [0x0000000002480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_NoClear )
	struct FRawDistributionVector                      StartLocation;                                    		// 0x00FC (0x001C) [0x0000000002480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_NoClear )
	struct FRawDistributionFloat                       StartRotation;                                    		// 0x0118 (0x001C) [0x0000000002480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_NoClear )
	struct FRawDistributionVector                      SizeLifeMultiplier;                               		// 0x0134 (0x001C) [0x0000000002480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_NoClear )
	unsigned long                                      SizeMultiplyX : 1;                                		// 0x0150 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      SizeMultiplyY : 1;                                		// 0x0150 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      SizeMultiplyZ : 1;                                		// 0x0150 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	struct FRawDistributionFloat                       StartRotationRate;                                		// 0x0154 (0x001C) [0x0000000002480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_NoClear )
public:
};

// Class Engine.ParticleModuleUberRainDrops
// 0x0088 (0x00DC - 0x0054)
class UParticleModuleUberRainDrops : public UParticleModuleUberBase
{
public:
	float                                              LifetimeMin;                                      		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LifetimeMax;                                      		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     StartSizeMin;                                     		// 0x005C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     StartSizeMax;                                     		// 0x0068 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     StartVelocityMin;                                 		// 0x0074 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     StartVelocityMax;                                 		// 0x0080 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              StartVelocityRadialMin;                           		// 0x008C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              StartVelocityRadialMax;                           		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     ColorOverLife;                                    		// 0x0094 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              AlphaOverLife;                                    		// 0x00A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bIsUsingCylinder : 1;                             		// 0x00A4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bPositive_X : 1;                                  		// 0x00A4 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bPositive_Y : 1;                                  		// 0x00A4 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bPositive_Z : 1;                                  		// 0x00A4 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bNegative_X : 1;                                  		// 0x00A4 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bNegative_Y : 1;                                  		// 0x00A4 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bNegative_Z : 1;                                  		// 0x00A4 (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bSurfaceOnly : 1;                                 		// 0x00A4 (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bVelocity : 1;                                    		// 0x00A4 (0x0004) [0x0000000000000001] [0x00000100] ( CPF_Edit )
	unsigned long                                      bRadialVelocity : 1;                              		// 0x00A4 (0x0004) [0x0000000000000001] [0x00000200] ( CPF_Edit )
	float                                              PC_VelocityScale;                                 		// 0x00A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     PC_StartLocation;                                 		// 0x00AC (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              PC_StartRadius;                                   		// 0x00B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              PC_StartHeight;                                   		// 0x00BC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      PC_HeightAxis;                                    		// 0x00C0 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     StartLocationMin;                                 		// 0x00C4 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     StartLocationMax;                                 		// 0x00D0 (0x000C) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleUberRainImpacts
// 0x0120 (0x0174 - 0x0054)
class UParticleModuleUberRainImpacts : public UParticleModuleUberBase
{
public:
	struct FRawDistributionFloat                       Lifetime;                                         		// 0x0054 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionVector                      StartSize;                                        		// 0x0070 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionVector                      StartRotation;                                    		// 0x008C (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      bInheritParent : 1;                               		// 0x00A8 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      MultiplyX : 1;                                    		// 0x00A8 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      MultiplyY : 1;                                    		// 0x00A8 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      MultiplyZ : 1;                                    		// 0x00A8 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bIsUsingCylinder : 1;                             		// 0x00A8 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bPositive_X : 1;                                  		// 0x00A8 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bPositive_Y : 1;                                  		// 0x00A8 (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bPositive_Z : 1;                                  		// 0x00A8 (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bNegative_X : 1;                                  		// 0x00A8 (0x0004) [0x0000000000000001] [0x00000100] ( CPF_Edit )
	unsigned long                                      bNegative_Y : 1;                                  		// 0x00A8 (0x0004) [0x0000000000000001] [0x00000200] ( CPF_Edit )
	unsigned long                                      bNegative_Z : 1;                                  		// 0x00A8 (0x0004) [0x0000000000000001] [0x00000400] ( CPF_Edit )
	unsigned long                                      bSurfaceOnly : 1;                                 		// 0x00A8 (0x0004) [0x0000000000000001] [0x00000800] ( CPF_Edit )
	unsigned long                                      bVelocity : 1;                                    		// 0x00A8 (0x0004) [0x0000000000000001] [0x00001000] ( CPF_Edit )
	unsigned long                                      bRadialVelocity : 1;                              		// 0x00A8 (0x0004) [0x0000000000000001] [0x00002000] ( CPF_Edit )
	struct FRawDistributionVector                      LifeMultiplier;                                   		// 0x00AC (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       PC_VelocityScale;                                 		// 0x00C8 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionVector                      PC_StartLocation;                                 		// 0x00E4 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       PC_StartRadius;                                   		// 0x0100 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       PC_StartHeight;                                   		// 0x011C (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned char                                      PC_HeightAxis;                                    		// 0x0138 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionVector                      ColorOverLife;                                    		// 0x013C (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       AlphaOverLife;                                    		// 0x0158 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleUberRainSplashA
// 0x00AC (0x0100 - 0x0054)
class UParticleModuleUberRainSplashA : public UParticleModuleUberBase
{
public:
	struct FRawDistributionFloat                       Lifetime;                                         		// 0x0054 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionVector                      StartSize;                                        		// 0x0070 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionVector                      StartRotation;                                    		// 0x008C (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      bInheritParent : 1;                               		// 0x00A8 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      MultiplyX : 1;                                    		// 0x00A8 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      MultiplyY : 1;                                    		// 0x00A8 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      MultiplyZ : 1;                                    		// 0x00A8 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	struct FRawDistributionVector                      LifeMultiplier;                                   		// 0x00AC (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionVector                      ColorOverLife;                                    		// 0x00C8 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       AlphaOverLife;                                    		// 0x00E4 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleUberRainSplashB
// 0x00AC (0x0100 - 0x0054)
class UParticleModuleUberRainSplashB : public UParticleModuleUberBase
{
public:
	struct FRawDistributionFloat                       Lifetime;                                         		// 0x0054 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionVector                      StartSize;                                        		// 0x0070 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionVector                      ColorOverLife;                                    		// 0x008C (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       AlphaOverLife;                                    		// 0x00A8 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionVector                      LifeMultiplier;                                   		// 0x00C4 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      MultiplyX : 1;                                    		// 0x00E0 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      MultiplyY : 1;                                    		// 0x00E0 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      MultiplyZ : 1;                                    		// 0x00E0 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	struct FRawDistributionFloat                       StartRotationRate;                                		// 0x00E4 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleVelocityBase
// 0x0004 (0x004C - 0x0048)
class UParticleModuleVelocityBase : public UParticleModule
{
public:
	unsigned long                                      bInWorldSpace : 1;                                		// 0x0048 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bApplyOwnerScale : 1;                             		// 0x0048 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleVelocity
// 0x0038 (0x0084 - 0x004C)
class UParticleModuleVelocity : public UParticleModuleVelocityBase
{
public:
	struct FRawDistributionVector                      StartVelocity;                                    		// 0x004C (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       StartVelocityRadial;                              		// 0x0068 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleVelocity_Seeded
// 0x0018 (0x009C - 0x0084)
class UParticleModuleVelocity_Seeded : public UParticleModuleVelocity
{
public:
	struct FParticleRandomSeedInfo                     RandomSeedInfo;                                   		// 0x0084 (0x0018) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleVelocityCone
// 0x0044 (0x0090 - 0x004C)
class UParticleModuleVelocityCone : public UParticleModuleVelocityBase
{
public:
	struct FRawDistributionFloat                       Angle;                                            		// 0x004C (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       Velocity;                                         		// 0x0068 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FVector                                     Direction;                                        		// 0x0084 (0x000C) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ParticleModuleVelocityInheritParent
// 0x001C (0x0068 - 0x004C)
class UParticleModuleVelocityInheritParent : public UParticleModuleVelocityBase
{
public:
	struct FRawDistributionVector                      Scale;                                            		// 0x004C (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.ParticleModuleVelocityOverLifetime
// 0x0020 (0x006C - 0x004C)
class UParticleModuleVelocityOverLifetime : public UParticleModuleVelocityBase
{
public:
	struct FRawDistributionVector                      VelOverLife;                                      		// 0x004C (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      Absolute : 1;                                     		// 0x0068 (0x0004) [0x0000000000000009] [0x00000001] ( CPF_Edit | CPF_ExportObject )
public:
};

// Class Engine.ParticleModuleEventSendToGame
// 0x0000 (0x003C - 0x003C)
class UParticleModuleEventSendToGame : public UObject
{
public:
public:
};

// Class Engine.ParticleSystemReplay
// 0x0010 (0x004C - 0x003C)
class UParticleSystemReplay : public UObject
{
public:
	int                                                ClipIDNumber;                                     		// 0x003C (0x0004) [0x0000000000001001]              ( CPF_Edit | CPF_Native )
	TArray< struct FParticleSystemReplayFrame >        Frames;                                           		// 0x0040 (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
public:
};

// Class Engine.PhysXParticleSystem
// 0x0064 (0x00A0 - 0x003C)
class UPhysXParticleSystem : public UObject
{
public:
	int                                                MaxParticles;                                     		// 0x003C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                ParticleSpawnReserve;                             		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      RBChannel;                                        		// 0x0044 (0x0001) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned char                                      SimulationMethod;                                 		// 0x0045 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      PacketSizeMultiplier;                             		// 0x0046 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FRBCollisionChannelContainer                RBCollideWithChannels;                            		// 0x0048 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              CollisionDistance;                                		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RestitutionWithStaticShapes;                      		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RestitutionWithDynamicShapes;                     		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FrictionWithStaticShapes;                         		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FrictionWithDynamicShapes;                        		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              StaticFrictionWithStaticShapes;                   		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              StaticFrictionWithDynamicShapes;                  		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bDynamicCollision : 1;                            		// 0x0068 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bDisableGravity : 1;                              		// 0x0068 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bStaticCollision : 1;                             		// 0x0068 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bTwoWayCollision : 1;                             		// 0x0068 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bDestroy : 1;                                     		// 0x0068 (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	unsigned long                                      bSyncFailed : 1;                                  		// 0x0068 (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      bIsInGame : 1;                                    		// 0x0068 (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	float                                              MaxMotionDistance;                                		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Damping;                                          		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     ExternalAcceleration;                             		// 0x0074 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              RestParticleDistance;                             		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RestDensity;                                      		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              KernelRadiusMultiplier;                           		// 0x0088 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Stiffness;                                        		// 0x008C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Viscosity;                                        		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CollisionResponseCoefficient;                     		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FPointer                                    CascadeScene;                                     		// 0x0098 (0x0004) [0x0000000000001000]              ( CPF_Native )
	struct FPointer                                    PSys;                                             		// 0x009C (0x0004) [0x0000000000001000]              ( CPF_Native )
public:
};

// Class Engine.KActor
// 0x00B4 (0x02C8 - 0x0214)
class AKActor : public ADynamicSMActor
{
public:
	unsigned long                                      bDamageAppliesImpulse : 1;                        		// 0x0214 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bWakeOnLevelStart : 1;                            		// 0x0214 (0x0004) [0x0000000000000021] [0x00000002] ( CPF_Edit | CPF_Net )
	unsigned long                                      bCurrentSlide : 1;                                		// 0x0214 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bSlideActive : 1;                                 		// 0x0214 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bEnableStayUprightSpring : 1;                     		// 0x0214 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bLimitMaxPhysicsVelocity : 1;                     		// 0x0214 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      lastStateAwake : 1;                               		// 0x0214 (0x0004) [0x0000000000001002] [0x00000040] ( CPF_Const | CPF_Native )
	unsigned long                                      bNeedsRBStateReplication : 1;                     		// 0x0214 (0x0004) [0x0000000000002000] [0x00000080] ( CPF_Transient )
	unsigned long                                      bDisableClientSidePawnInteractions : 1;           		// 0x0214 (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      bExistsOnClientOnly : 1;                          		// 0x0214 (0x0004) [0x0000000000002002] [0x00000200] ( CPF_Const | CPF_Transient )
	class UParticleSystemComponent*                    ImpactEffectComponent;                            		// 0x0218 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             ImpactSoundComponent;                             		// 0x021C (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             ImpactSoundComponent2;                            		// 0x0220 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	float                                              LastImpactTime;                                   		// 0x0224 (0x0004) [0x0000000000000000]              
	struct FPhysEffectInfo                             ImpactEffectInfo;                                 		// 0x0228 (0x0010) [0x0000000000000000]              
	class UParticleSystemComponent*                    SlideEffectComponent;                             		// 0x0238 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             SlideSoundComponent;                              		// 0x023C (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	float                                              LastSlideTime;                                    		// 0x0240 (0x0004) [0x0000000000000000]              
	struct FPhysEffectInfo                             SlideEffectInfo;                                  		// 0x0244 (0x0010) [0x0000000000000000]              
	float                                              StayUprightTorqueFactor;                          		// 0x0254 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              StayUprightMaxTorque;                             		// 0x0258 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxPhysicsVelocity;                               		// 0x025C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRigidBodyState                             RBState;                                          		// 0x0260 (0x0040) [0x0000000000001022]              ( CPF_Const | CPF_Net | CPF_Native )
	float                                              AngErrorAccumulator;                              		// 0x02A0 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FVector                                     ReplicatedDrawScale3D;                            		// 0x02A4 (0x000C) [0x0000000000000020]              ( CPF_Net )
	struct FVector                                     InitialLocation;                                  		// 0x02B0 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FRotator                                    InitialRotation;                                  		// 0x02BC (0x000C) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.KActorFromStatic
// 0x0008 (0x02D0 - 0x02C8)
class AKActorFromStatic : public AKActor
{
public:
	class AActor*                                      MyStaticMeshActor;                                		// 0x02C8 (0x0004) [0x0000000000000000]              
	float                                              MaxImpulseSpeed;                                  		// 0x02CC (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.KActorSpawnable
// 0x0004 (0x02CC - 0x02C8)
class AKActorSpawnable : public AKActor
{
public:
	unsigned long                                      bRecycleScaleToZero : 1;                          		// 0x02C8 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bScalingToZero : 1;                               		// 0x02C8 (0x0004) [0x0000000000000000] [0x00000002] 
public:
};

// Class Engine.KAsset
// 0x0010 (0x01E8 - 0x01D8)
class AKAsset : public AActor
{
public:
	class USkeletalMeshComponent*                      SkeletalMeshComponent;                            		// 0x01D8 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	unsigned long                                      bDamageAppliesImpulse : 1;                        		// 0x01DC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bWakeOnLevelStart : 1;                            		// 0x01DC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bBlockPawns : 1;                                  		// 0x01DC (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	class USkeletalMesh*                               ReplicatedMesh;                                   		// 0x01E0 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
	class UPhysicsAsset*                               ReplicatedPhysAsset;                              		// 0x01E4 (0x0004) [0x0000000000002020]              ( CPF_Net | CPF_Transient )
public:
};

// Class Engine.Pawn
// 0x02CC (0x04A4 - 0x01D8)
class APawn : public AActor
{
public:
	struct FPointer                                    VfTable_IInterface_Speaker;                       		// 0x01D8 (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	float                                              MaxStepHeight;                                    		// 0x01DC (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              MaxJumpHeight;                                    		// 0x01E0 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              WalkableFloorZ;                                   		// 0x01E4 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              LedgeCheckThreshold;                              		// 0x01E8 (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FVector                                     PartialLedgeMoveDir;                              		// 0x01EC (0x000C) [0x0000000000000002]              ( CPF_Const )
	class AController*                                 Controller;                                       		// 0x01F8 (0x0004) [0x0000000004000020]              ( CPF_Net | CPF_EditInline )
	class APawn*                                       NextPawn;                                         		// 0x01FC (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              NetRelevancyTime;                                 		// 0x0200 (0x0004) [0x0000000000000000]              
	class APlayerController*                           LastRealViewer;                                   		// 0x0204 (0x0004) [0x0000000000000000]              
	class AActor*                                      LastViewer;                                       		// 0x0208 (0x0004) [0x0000000000000000]              
	unsigned long                                      bScriptTickSpecial : 1;                           		// 0x020C (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bUpAndOut : 1;                                    		// 0x020C (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bIsStrafing : 1;                                  		// 0x020C (0x0004) [0x0000000000000020] [0x00000004] ( CPF_Net )
	unsigned long                                      bWantsToCrouch : 1;                               		// 0x020C (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bIsCrouched : 1;                                  		// 0x020C (0x0004) [0x0000000000000022] [0x00000010] ( CPF_Const | CPF_Net )
	unsigned long                                      bTryToUncrouch : 1;                               		// 0x020C (0x0004) [0x0000000000000002] [0x00000020] ( CPF_Const )
	unsigned long                                      bCanCrouch : 1;                                   		// 0x020C (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bIsGliding : 1;                                   		// 0x020C (0x0004) [0x0000000000000020] [0x00000080] ( CPF_Net )
	unsigned long                                      m_bCollisionCorrected : 1;                        		// 0x020C (0x0004) [0x0000000000002000] [0x00000100] ( CPF_Transient )
	unsigned long                                      bCrawler : 1;                                     		// 0x020C (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bReducedSpeed : 1;                                		// 0x020C (0x0004) [0x0000000000000002] [0x00000400] ( CPF_Const )
	unsigned long                                      bJumpCapable : 1;                                 		// 0x020C (0x0004) [0x0000000000000000] [0x00000800] 
	unsigned long                                      bCanJump : 1;                                     		// 0x020C (0x0004) [0x0000000000000000] [0x00001000] 
	unsigned long                                      bCanWalk : 1;                                     		// 0x020C (0x0004) [0x0000000000000000] [0x00002000] 
	unsigned long                                      bCanSwim : 1;                                     		// 0x020C (0x0004) [0x0000000000000000] [0x00004000] 
	unsigned long                                      bCanFly : 1;                                      		// 0x020C (0x0004) [0x0000000000000000] [0x00008000] 
	unsigned long                                      bCanHover : 1;                                    		// 0x020C (0x0004) [0x0000000000000000] [0x00010000] 
	unsigned long                                      bCanClimbLadders : 1;                             		// 0x020C (0x0004) [0x0000000000000000] [0x00020000] 
	unsigned long                                      bCanStrafe : 1;                                   		// 0x020C (0x0004) [0x0000000000000000] [0x00040000] 
	unsigned long                                      bAvoidLedges : 1;                                 		// 0x020C (0x0004) [0x0000000000000000] [0x00080000] 
	unsigned long                                      bStopAtLedges : 1;                                		// 0x020C (0x0004) [0x0000000000000000] [0x00100000] 
	unsigned long                                      bAllowLedgeOverhang : 1;                          		// 0x020C (0x0004) [0x0000000000000000] [0x00200000] 
	unsigned long                                      bPartiallyOverLedge : 1;                          		// 0x020C (0x0004) [0x0000000000000002] [0x00400000] ( CPF_Const )
	unsigned long                                      bSimulateGravity : 1;                             		// 0x020C (0x0004) [0x0000000000000022] [0x00800000] ( CPF_Const | CPF_Net )
	unsigned long                                      bIgnoreForces : 1;                                		// 0x020C (0x0004) [0x0000000000000000] [0x01000000] 
	unsigned long                                      bCanWalkOffLedges : 1;                            		// 0x020C (0x0004) [0x0000000000000000] [0x02000000] 
	unsigned long                                      bCanCrouchOffLedges : 1;                          		// 0x020C (0x0004) [0x0000000000000000] [0x04000000] 
	unsigned long                                      bCanBeBaseForPawns : 1;                           		// 0x020C (0x0004) [0x0000000000000000] [0x08000000] 
	unsigned long                                      bSimGravityDisabled : 1;                          		// 0x020C (0x0004) [0x0000000000000002] [0x10000000] ( CPF_Const )
	unsigned long                                      bDirectHitWall : 1;                               		// 0x020C (0x0004) [0x0000000000000000] [0x20000000] 
	unsigned long                                      bPushesRigidBodies : 1;                           		// 0x020C (0x0004) [0x0000000000000002] [0x40000000] ( CPF_Const )
	unsigned long                                      bForceFloorCheck : 1;                             		// 0x020C (0x0004) [0x0000000000000000] [0x80000000] 
	unsigned long                                      bForceKeepAnchor : 1;                             		// 0x0210 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bCanMantle : 1;                                   		// 0x0210 (0x0004) [0x0000000000004000] [0x00000002] ( CPF_Config )
	unsigned long                                      bCanClimbUp : 1;                                  		// 0x0210 (0x0004) [0x0000000000004000] [0x00000004] ( CPF_Config )
	unsigned long                                      bCanClimbCeilings : 1;                            		// 0x0210 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bCanSwatTurn : 1;                                 		// 0x0210 (0x0004) [0x0000000000004020] [0x00000010] ( CPF_Net | CPF_Config )
	unsigned long                                      bCanLeap : 1;                                     		// 0x0210 (0x0004) [0x0000000000004000] [0x00000020] ( CPF_Config )
	unsigned long                                      bCanCoverSlip : 1;                                		// 0x0210 (0x0004) [0x0000000000004000] [0x00000040] ( CPF_Config )
	unsigned long                                      bDisplayPathErrors : 1;                           		// 0x0210 (0x0004) [0x0000000000044000] [0x00000080] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bIsFemale : 1;                                    		// 0x0210 (0x0004) [0x0000000000000001] [0x00000100] ( CPF_Edit )
	unsigned long                                      bCanPickupInventory : 1;                          		// 0x0210 (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bAmbientCreature : 1;                             		// 0x0210 (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      bLOSHearing : 1;                                  		// 0x0210 (0x0004) [0x0000000000000001] [0x00000800] ( CPF_Edit )
	unsigned long                                      bMuffledHearing : 1;                              		// 0x0210 (0x0004) [0x0000000000000001] [0x00001000] ( CPF_Edit )
	unsigned long                                      bDontPossess : 1;                                 		// 0x0210 (0x0004) [0x0000000000000001] [0x00002000] ( CPF_Edit )
	unsigned long                                      bRollToDesired : 1;                               		// 0x0210 (0x0004) [0x0000000000000000] [0x00004000] 
	unsigned long                                      bStationary : 1;                                  		// 0x0210 (0x0004) [0x0000000000000000] [0x00008000] 
	unsigned long                                      bCachedRelevant : 1;                              		// 0x0210 (0x0004) [0x0000000000000000] [0x00010000] 
	unsigned long                                      bNoWeaponFiring : 1;                              		// 0x0210 (0x0004) [0x0000000000000000] [0x00020000] 
	unsigned long                                      bModifyReachSpecCost : 1;                         		// 0x0210 (0x0004) [0x0000000000000000] [0x00040000] 
	unsigned long                                      bModifyNavPointDest : 1;                          		// 0x0210 (0x0004) [0x0000000000000000] [0x00080000] 
	unsigned long                                      bPathfindsAsVehicle : 1;                          		// 0x0210 (0x0004) [0x0000000000000000] [0x00100000] 
	unsigned long                                      bPrevBypassSimulatedClientPhysics : 1;            		// 0x0210 (0x0004) [0x0000000000000000] [0x00200000] 
	unsigned long                                      bRunPhysicsWithNoController : 1;                  		// 0x0210 (0x0004) [0x0000000000000000] [0x00400000] 
	unsigned long                                      bForceMaxAccel : 1;                               		// 0x0210 (0x0004) [0x0000000000000000] [0x00800000] 
	unsigned long                                      bLimitFallAccel : 1;                              		// 0x0210 (0x0004) [0x0000000000000000] [0x01000000] 
	unsigned long                                      bLookingUp : 1;                                   		// 0x0210 (0x0004) [0x0000000000000000] [0x02000000] 
	unsigned long                                      bEnableRealViewTarget : 1;                        		// 0x0210 (0x0004) [0x0000000000002000] [0x04000000] ( CPF_Transient )
	unsigned long                                      bReplicateHealthToAll : 1;                        		// 0x0210 (0x0004) [0x0000000000000000] [0x08000000] 
	unsigned long                                      bForceRMVelocity : 1;                             		// 0x0210 (0x0004) [0x0000000000000000] [0x10000000] 
	unsigned long                                      bForceRegularVelocity : 1;                        		// 0x0210 (0x0004) [0x0000000000000000] [0x20000000] 
	unsigned long                                      bPlayedDeath : 1;                                 		// 0x0210 (0x0004) [0x0000000000000000] [0x40000000] 
	unsigned long                                      bDesiredRotationSet : 1;                          		// 0x0210 (0x0004) [0x0000000000000002] [0x80000000] ( CPF_Const )
	unsigned long                                      bLockDesiredRotation : 1;                         		// 0x0214 (0x0004) [0x0000000000000002] [0x00000001] ( CPF_Const )
	unsigned long                                      bUnlockWhenReached : 1;                           		// 0x0214 (0x0004) [0x0000000000000002] [0x00000002] ( CPF_Const )
	unsigned long                                      bNeedsBaseTickedFirst : 1;                        		// 0x0214 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bUsedByMatinee : 1;                               		// 0x0214 (0x0004) [0x0000000000002020] [0x00000008] ( CPF_Net | CPF_Transient )
	unsigned long                                      bRootMotionFromInterpCurve : 1;                   		// 0x0214 (0x0004) [0x0000000000000020] [0x00000010] ( CPF_Net )
	unsigned long                                      bDebugShowCameraLocation : 1;                     		// 0x0214 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bFastAttachedMove : 1;                            		// 0x0214 (0x0004) [0x0000000000000021] [0x00000040] ( CPF_Edit | CPF_Net )
	unsigned long                                      bIsClimbingLadder : 1;                            		// 0x0214 (0x0004) [0x0000000000002020] [0x00000080] ( CPF_Net | CPF_Transient )
	unsigned long                                      bWantsToSlideDownLadder : 1;                      		// 0x0214 (0x0004) [0x0000000000002020] [0x00000100] ( CPF_Net | CPF_Transient )
	unsigned char                                      WalkingPhysics;                                   		// 0x0218 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      PathSearchType;                                   		// 0x0219 (0x0001) [0x0000000000000000]              
	unsigned char                                      RemoteViewPitch;                                  		// 0x021A (0x0001) [0x0000000000000022]              ( CPF_Const | CPF_Net )
	unsigned char                                      FlashCount;                                       		// 0x021B (0x0001) [0x0000000000000020]              ( CPF_Net )
	unsigned char                                      FiringMode;                                       		// 0x021C (0x0001) [0x0000000000000020]              ( CPF_Net )
	float                                              UncrouchTime;                                     		// 0x0220 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              CrouchHeight;                                     		// 0x0224 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CrouchRadius;                                     		// 0x0228 (0x0004) [0x0000000000000000]              
	int                                                FullHeight;                                       		// 0x022C (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FVector                                     GlideDirection;                                   		// 0x0230 (0x000C) [0x0000000000000020]              ( CPF_Net )
	float                                              m_fStandHeight;                                   		// 0x023C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              m_fStandRadius;                                   		// 0x0240 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              NonPreferredVehiclePathMultiplier;                		// 0x0244 (0x0004) [0x0000000000000000]              
	class UPathConstraint*                             PathConstraintList;                               		// 0x0248 (0x0004) [0x0000000000000000]              
	class UPathGoalEvaluator*                          PathGoalList;                                     		// 0x024C (0x0004) [0x0000000000000000]              
	float                                              DesiredSpeed;                                     		// 0x0250 (0x0004) [0x0000000000000000]              
	float                                              MaxDesiredSpeed;                                  		// 0x0254 (0x0004) [0x0000000000000000]              
	float                                              HearingThreshold;                                 		// 0x0258 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Alertness;                                        		// 0x025C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SightRadius;                                      		// 0x0260 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              PeripheralVision;                                 		// 0x0264 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AvgPhysicsTime;                                   		// 0x0268 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              Mass;                                             		// 0x026C (0x0004) [0x0000000000000000]              
	float                                              Buoyancy;                                         		// 0x0270 (0x0004) [0x0000000000000000]              
	float                                              MeleeRange;                                       		// 0x0274 (0x0004) [0x0000000000000000]              
	class ANavigationPoint*                            Anchor;                                           		// 0x0278 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                AnchorItem;                                       		// 0x027C (0x0004) [0x0000000000000002]              ( CPF_Const )
	class ANavigationPoint*                            LastAnchor;                                       		// 0x0280 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              FindAnchorFailedTime;                             		// 0x0284 (0x0004) [0x0000000000000000]              
	float                                              LastValidAnchorTime;                              		// 0x0288 (0x0004) [0x0000000000000000]              
	float                                              DestinationOffset;                                		// 0x028C (0x0004) [0x0000000000000000]              
	float                                              NextPathRadius;                                   		// 0x0290 (0x0004) [0x0000000000000000]              
	struct FVector                                     SerpentineDir;                                    		// 0x0294 (0x000C) [0x0000000000000000]              
	float                                              SerpentineDist;                                   		// 0x02A0 (0x0004) [0x0000000000000000]              
	float                                              SerpentineTime;                                   		// 0x02A4 (0x0004) [0x0000000000000000]              
	float                                              SpawnTime;                                        		// 0x02A8 (0x0004) [0x0000000000000000]              
	int                                                MaxPitchLimit;                                    		// 0x02AC (0x0004) [0x0000000000000000]              
	float                                              GroundSpeed;                                      		// 0x02B0 (0x0004) [0x0000000000000021]              ( CPF_Edit | CPF_Net )
	float                                              WaterSpeed;                                       		// 0x02B4 (0x0004) [0x0000000000000020]              ( CPF_Net )
	float                                              AirSpeed;                                         		// 0x02B8 (0x0004) [0x0000000000000021]              ( CPF_Edit | CPF_Net )
	float                                              LadderSpeed;                                      		// 0x02BC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LadderSlideSpeed;                                 		// 0x02C0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AccelRate;                                        		// 0x02C4 (0x0004) [0x0000000000000021]              ( CPF_Edit | CPF_Net )
	float                                              JumpZ;                                            		// 0x02C8 (0x0004) [0x0000000000000021]              ( CPF_Edit | CPF_Net )
	float                                              OutofWaterZ;                                      		// 0x02CC (0x0004) [0x0000000000000000]              
	float                                              MaxOutOfWaterStepHeight;                          		// 0x02D0 (0x0004) [0x0000000000000000]              
	float                                              fLookingUpDeadZone;                               		// 0x02D4 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              AirControl;                                       		// 0x02D8 (0x0004) [0x0000000000000020]              ( CPF_Net )
	float                                              WalkingPct;                                       		// 0x02DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              StrafingPct;                                      		// 0x02E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MovementSpeedModifier;                            		// 0x02E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CrouchedPct;                                      		// 0x02E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              GlidingPct;                                       		// 0x02EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              VariableGlidingPct;                               		// 0x02F0 (0x0004) [0x0000000000002001]              ( CPF_Edit | CPF_Transient )
	float                                              GlidingPctAccelRate;                              		// 0x02F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              GlidingPctSlopeModifier;                          		// 0x02F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxFallSpeed;                                     		// 0x02FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AIMaxFallSpeedFactor;                             		// 0x0300 (0x0004) [0x0000000000000000]              
	float                                              BaseEyeHeight;                                    		// 0x0304 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EyeHeight;                                        		// 0x0308 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     Floor;                                            		// 0x030C (0x000C) [0x0000000000000000]              
	float                                              SplashTime;                                       		// 0x0318 (0x0004) [0x0000000000000000]              
	float                                              OldZ;                                             		// 0x031C (0x0004) [0x0000000000000000]              
	class APhysicsVolume*                              HeadVolume;                                       		// 0x0320 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                Health;                                           		// 0x0324 (0x0004) [0x0000000000000021]              ( CPF_Edit | CPF_Net )
	int                                                HealthMax;                                        		// 0x0328 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BreathTime;                                       		// 0x032C (0x0004) [0x0000000000000000]              
	float                                              UnderWaterTime;                                   		// 0x0330 (0x0004) [0x0000000000000000]              
	float                                              LastPainTime;                                     		// 0x0334 (0x0004) [0x0000000000000000]              
	float                                              KismetDeathDelayTime;                             		// 0x0338 (0x0004) [0x0000000000000000]              
	struct FVector                                     RMVelocity;                                       		// 0x033C (0x000C) [0x0000000000000000]              
	struct FVector                                     noise1spot;                                       		// 0x0348 (0x000C) [0x0000000000000002]              ( CPF_Const )
	float                                              noise1time;                                       		// 0x0354 (0x0004) [0x0000000000000002]              ( CPF_Const )
	class APawn*                                       noise1other;                                      		// 0x0358 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              noise1loudness;                                   		// 0x035C (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FVector                                     noise2spot;                                       		// 0x0360 (0x000C) [0x0000000000000002]              ( CPF_Const )
	float                                              noise2time;                                       		// 0x036C (0x0004) [0x0000000000000002]              ( CPF_Const )
	class APawn*                                       noise2other;                                      		// 0x0370 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              noise2loudness;                                   		// 0x0374 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              SoundDampening;                                   		// 0x0378 (0x0004) [0x0000000000000000]              
	float                                              DamageScaling;                                    		// 0x037C (0x0004) [0x0000000000000000]              
	struct FString                                     MenuName;                                         		// 0x0380 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	class UClass*                                      ControllerClass;                                  		// 0x038C (0x0004) [0x0000000000000000]              
	class APlayerReplicationInfo*                      PlayerReplicationInfo;                            		// 0x0390 (0x0004) [0x0000000004000020]              ( CPF_Net | CPF_EditInline )
	class ALadderVolume*                               OnLadder;                                         		// 0x0394 (0x0004) [0x0000000000000020]              ( CPF_Net )
	struct FName                                       LandMovementState;                                		// 0x0398 (0x0008) [0x0000000000000000]              
	struct FName                                       WaterMovementState;                               		// 0x03A0 (0x0008) [0x0000000000000000]              
	class APlayerStart*                                LastStartSpot;                                    		// 0x03A8 (0x0004) [0x0000000000000000]              
	float                                              LastStartTime;                                    		// 0x03AC (0x0004) [0x0000000000000000]              
	struct FVector                                     TakeHitLocation;                                  		// 0x03B0 (0x000C) [0x0000000000000020]              ( CPF_Net )
	class UClass*                                      HitDamageType;                                    		// 0x03BC (0x0004) [0x0000000000000020]              ( CPF_Net )
	struct FVector                                     TearOffMomentum;                                  		// 0x03C0 (0x000C) [0x0000000000000020]              ( CPF_Net )
	class USkeletalMeshComponent*                      Mesh;                                             		// 0x03CC (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UCylinderComponent*                          CylinderComponent;                                		// 0x03D0 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	float                                              RBPushRadius;                                     		// 0x03D4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RBPushStrength;                                   		// 0x03D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class AVehicle*                                    DrivenVehicle;                                    		// 0x03DC (0x0004) [0x0000000000000020]              ( CPF_Net )
	float                                              AlwaysRelevantDistanceSquared;                    		// 0x03E0 (0x0004) [0x0000000000000000]              
	float                                              VehicleCheckRadius;                               		// 0x03E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class AController*                                 LastHitBy;                                        		// 0x03E8 (0x0004) [0x0000000000000000]              
	float                                              ViewPitchMin;                                     		// 0x03EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ViewPitchMax;                                     		// 0x03F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                AllowedYawError;                                  		// 0x03F4 (0x0004) [0x0000000000000000]              
	struct FRotator                                    DesiredRotation;                                  		// 0x03F8 (0x000C) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	class UClass*                                      FallingDamageType;                                		// 0x0404 (0x0004) [0x0000000000000000]              
	class UClass*                                      InventoryManagerClass;                            		// 0x0408 (0x0004) [0x0000000000000000]              
	class AInventoryManager*                           InvManager;                                       		// 0x040C (0x0004) [0x0000000000000020]              ( CPF_Net )
	class AWeapon*                                     Weapon;                                           		// 0x0410 (0x0004) [0x0000000000000000]              
	struct FVector                                     FlashLocation;                                    		// 0x0414 (0x000C) [0x0000000000000020]              ( CPF_Net )
	struct FVector                                     LastFiringFlashLocation;                          		// 0x0420 (0x000C) [0x0000000000000000]              
	int                                                ShotCount;                                        		// 0x042C (0x0004) [0x0000000000000000]              
	class UPrimitiveComponent*                         PreRagdollCollisionComponent;                     		// 0x0430 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	class URB_BodyInstance*                            PhysicsPushBody;                                  		// 0x0434 (0x0004) [0x0000000000000000]              
	int                                                FailedLandingCount;                               		// 0x0438 (0x0004) [0x0000000000000000]              
	TArray< class UAnimNodeSlot* >                     SlotNodes;                                        		// 0x043C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< class UInterpGroup* >                      InterpGroupList;                                  		// 0x0448 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UAudioComponent*                             FacialAudioComp;                                  		// 0x0454 (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	class UMaterialInstanceConstant*                   MIC_PawnMat;                                      		// 0x0458 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UMaterialInstanceConstant*                   MIC_PawnHair;                                     		// 0x045C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FScalarParameterInterpStruct >      ScalarParameterInterpArray;                       		// 0x0460 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FRootMotionCurve                            RootMotionInterpCurve;                            		// 0x046C (0x001C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              RootMotionInterpRate;                             		// 0x0488 (0x0004) [0x0000000000000020]              ( CPF_Net )
	float                                              RootMotionInterpCurrentTime;                      		// 0x048C (0x0004) [0x0000000000000020]              ( CPF_Net )
	struct FVector                                     RootMotionInterpCurveLastValue;                   		// 0x0490 (0x000C) [0x0000000000000020]              ( CPF_Net )
	float                                              DisplacementWeightAvg;                            		// 0x049C (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              DisplacementWeightAvgFactor;                      		// 0x04A0 (0x0004) [0x0000000000004000]              ( CPF_Config )
public:
};

// Class Engine.Vehicle
// 0x0074 (0x0518 - 0x04A4)
class AVehicle : public APawn
{
public:
	class APawn*                                       Driver;                                           		// 0x04A4 (0x0004) [0x0000000000000020]              ( CPF_Net )
	unsigned long                                      bDriving : 1;                                     		// 0x04A8 (0x0004) [0x0000000000000020] [0x00000001] ( CPF_Net )
	unsigned long                                      bDriverIsVisible : 1;                             		// 0x04A8 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bAttachDriver : 1;                                		// 0x04A8 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bTurnInPlace : 1;                                 		// 0x04A8 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bSeparateTurretFocus : 1;                         		// 0x04A8 (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bFollowLookDir : 1;                               		// 0x04A8 (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bHasHandbrake : 1;                                		// 0x04A8 (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bScriptedRise : 1;                                		// 0x04A8 (0x0004) [0x0000000000000000] [0x00000080] 
	unsigned long                                      bDuckObstacles : 1;                               		// 0x04A8 (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      bAvoidReversing : 1;                              		// 0x04A8 (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bRetryPathfindingWithDriver : 1;                  		// 0x04A8 (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      bIgnoreStallZ : 1;                                		// 0x04A8 (0x0004) [0x0000000000000001] [0x00000800] ( CPF_Edit )
	unsigned long                                      bDoExtraNetRelevancyTraces : 1;                   		// 0x04A8 (0x0004) [0x0000000000000000] [0x00001000] 
	TArray< struct FVector >                           ExitPositions;                                    		// 0x04AC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              ExitRadius;                                       		// 0x04B8 (0x0004) [0x0000000000000000]              
	struct FVector                                     ExitOffset;                                       		// 0x04BC (0x000C) [0x0000000000000000]              
	float                                              Steering;                                         		// 0x04C8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Throttle;                                         		// 0x04CC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Rise;                                             		// 0x04D0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     TargetLocationAdjustment;                         		// 0x04D4 (0x000C) [0x0000000000000000]              
	float                                              DriverDamageMult;                                 		// 0x04E0 (0x0004) [0x0000000000000000]              
	float                                              MomentumMult;                                     		// 0x04E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UClass*                                      CrushedDamageType;                                		// 0x04E8 (0x0004) [0x0000000000000000]              
	float                                              MinCrushSpeed;                                    		// 0x04EC (0x0004) [0x0000000000000000]              
	float                                              ForceCrushPenetration;                            		// 0x04F0 (0x0004) [0x0000000000000000]              
	unsigned char                                      StuckCount;                                       		// 0x04F4 (0x0001) [0x0000000000000000]              
	float                                              ThrottleTime;                                     		// 0x04F8 (0x0004) [0x0000000000000000]              
	float                                              StuckTime;                                        		// 0x04FC (0x0004) [0x0000000000000000]              
	float                                              OldSteering;                                      		// 0x0500 (0x0004) [0x0000000000000000]              
	float                                              OnlySteeringStartTime;                            		// 0x0504 (0x0004) [0x0000000000000000]              
	float                                              OldThrottle;                                      		// 0x0508 (0x0004) [0x0000000000000000]              
	float                                              AIMoveCheckTime;                                  		// 0x050C (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              VehicleMovingTime;                                		// 0x0510 (0x0004) [0x0000000000000000]              
	float                                              TurnTime;                                         		// 0x0514 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SVehicle
// 0x0120 (0x0638 - 0x0518)
class ASVehicle : public AVehicle
{
public:
	class USVehicleSimBase*                            SimObj;                                           		// 0x0518 (0x0004) [0x000000000608000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_Component | CPF_NoClear | CPF_EditInline )
	TArray< class USVehicleWheel* >                    Wheels;                                           		// 0x051C (0x000C) [0x0000000004480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	struct FVector                                     COMOffset;                                        		// 0x0528 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     InertiaTensorMultiplier;                          		// 0x0534 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bStayUpright : 1;                                 		// 0x0540 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bUseSuspensionAxis : 1;                           		// 0x0540 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bUpdateWheelShapes : 1;                           		// 0x0540 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bVehicleOnGround : 1;                             		// 0x0540 (0x0004) [0x0000000000000002] [0x00000008] ( CPF_Const )
	unsigned long                                      bVehicleOnWater : 1;                              		// 0x0540 (0x0004) [0x0000000000000002] [0x00000010] ( CPF_Const )
	unsigned long                                      bIsInverted : 1;                                  		// 0x0540 (0x0004) [0x0000000000000002] [0x00000020] ( CPF_Const )
	unsigned long                                      bChassisTouchingGround : 1;                       		// 0x0540 (0x0004) [0x0000000000000002] [0x00000040] ( CPF_Const )
	unsigned long                                      bWasChassisTouchingGroundLastTick : 1;            		// 0x0540 (0x0004) [0x0000000000000002] [0x00000080] ( CPF_Const )
	unsigned long                                      bCanFlip : 1;                                     		// 0x0540 (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      bFlipRight : 1;                                   		// 0x0540 (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bIsUprighting : 1;                                		// 0x0540 (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      bOutputHandbrake : 1;                             		// 0x0540 (0x0004) [0x0000000000000000] [0x00000800] 
	unsigned long                                      bHoldingDownHandbrake : 1;                        		// 0x0540 (0x0004) [0x0000000000000000] [0x00001000] 
	float                                              StayUprightRollResistAngle;                       		// 0x0544 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              StayUprightPitchResistAngle;                      		// 0x0548 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              StayUprightStiffness;                             		// 0x054C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              StayUprightDamping;                               		// 0x0550 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class URB_StayUprightSetup*                        StayUprightConstraintSetup;                       		// 0x0554 (0x0004) [0x0000000004400008]              ( CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
	class URB_ConstraintInstance*                      StayUprightConstraintInstance;                    		// 0x0558 (0x0004) [0x0000000004400008]              ( CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
	float                                              HeavySuspensionShiftPercent;                      		// 0x055C (0x0004) [0x0000000000000000]              
	float                                              MaxSpeed;                                         		// 0x0560 (0x0004) [0x0000000000000021]              ( CPF_Edit | CPF_Net )
	float                                              MaxAngularVelocity;                               		// 0x0564 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TimeOffGround;                                    		// 0x0568 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              UprightLiftStrength;                              		// 0x056C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              UprightTorqueStrength;                            		// 0x0570 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              UprightTime;                                      		// 0x0574 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              UprightStartTime;                                 		// 0x0578 (0x0004) [0x0000000000000000]              
	class UAudioComponent*                             EngineSound;                                      		// 0x057C (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	class UAudioComponent*                             SquealSound;                                      		// 0x0580 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	class USoundCue*                                   CollisionSound;                                   		// 0x0584 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   EnterVehicleSound;                                		// 0x0588 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   ExitVehicleSound;                                 		// 0x058C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CollisionIntervalSecs;                            		// 0x0590 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SquealThreshold;                                  		// 0x0594 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              SquealLatThreshold;                               		// 0x0598 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              LatAngleVolumeMult;                               		// 0x059C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              EngineStartOffsetSecs;                            		// 0x05A0 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              EngineStopOffsetSecs;                             		// 0x05A4 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              LastCollisionSoundTime;                           		// 0x05A8 (0x0004) [0x0000000000000000]              
	float                                              OutputBrake;                                      		// 0x05AC (0x0004) [0x0000000000000000]              
	float                                              OutputGas;                                        		// 0x05B0 (0x0004) [0x0000000000000000]              
	float                                              OutputSteering;                                   		// 0x05B4 (0x0004) [0x0000000000000000]              
	float                                              OutputRise;                                       		// 0x05B8 (0x0004) [0x0000000000000000]              
	float                                              ForwardVel;                                       		// 0x05BC (0x0004) [0x0000000000000000]              
	int                                                NumPoweredWheels;                                 		// 0x05C0 (0x0004) [0x0000000000000000]              
	struct FVector                                     BaseOffset;                                       		// 0x05C4 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              CamDist;                                          		// 0x05D0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                DriverViewPitch;                                  		// 0x05D4 (0x0004) [0x0000000000000000]              
	int                                                DriverViewYaw;                                    		// 0x05D8 (0x0004) [0x0000000000000000]              
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x05DC (0x0004) MISSED OFFSET
	struct FVehicleState                               VState;                                           		// 0x05E0 (0x0050) [0x0000000000001022]              ( CPF_Const | CPF_Net | CPF_Native )
	float                                              AngErrorAccumulator;                              		// 0x0630 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              RadialImpulseScaling;                             		// 0x0634 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.RB_ConstraintActor
// 0x001C (0x01F4 - 0x01D8)
class ARB_ConstraintActor : public ARigidBodyBase
{
public:
	class AActor*                                      ConstraintActor1;                                 		// 0x01D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class AActor*                                      ConstraintActor2;                                 		// 0x01DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class URB_ConstraintSetup*                         ConstraintSetup;                                  		// 0x01E0 (0x0004) [0x0000000006400009]              ( CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_NoClear | CPF_EditInline )
	class URB_ConstraintInstance*                      ConstraintInstance;                               		// 0x01E4 (0x0004) [0x0000000006400009]              ( CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_NoClear | CPF_EditInline )
	unsigned long                                      bDisableCollision : 1;                            		// 0x01E8 (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUpdateActor1RefFrame : 1;                        		// 0x01E8 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bUpdateActor2RefFrame : 1;                        		// 0x01E8 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	class AActor*                                      PulleyPivotActor1;                                		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class AActor*                                      PulleyPivotActor2;                                		// 0x01F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.RB_LineImpulseActor
// 0x0011 (0x01E9 - 0x01D8)
class ARB_LineImpulseActor : public ARigidBodyBase
{
public:
	float                                              ImpulseStrength;                                  		// 0x01D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ImpulseRange;                                     		// 0x01DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bVelChange : 1;                                   		// 0x01E0 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bStopAtFirstHit : 1;                              		// 0x01E0 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bCauseFracture : 1;                               		// 0x01E0 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	class UArrowComponent*                             Arrow;                                            		// 0x01E4 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	unsigned char                                      ImpulseCount;                                     		// 0x01E8 (0x0001) [0x0000000000000020]              ( CPF_Net )
public:
};

// Class Engine.RB_RadialImpulseActor
// 0x0009 (0x01E1 - 0x01D8)
class ARB_RadialImpulseActor : public ARigidBodyBase
{
public:
	class UDrawSphereComponent*                        RenderComponent;                                  		// 0x01D8 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	class URB_RadialImpulseComponent*                  ImpulseComponent;                                 		// 0x01DC (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	unsigned char                                      ImpulseCount;                                     		// 0x01E0 (0x0001) [0x0000000000000020]              ( CPF_Net )
public:
};

// Class Engine.RB_Thruster
// 0x0008 (0x01E0 - 0x01D8)
class ARB_Thruster : public ARigidBodyBase
{
public:
	unsigned long                                      bThrustEnabled : 1;                               		// 0x01D8 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              ThrustStrength;                                   		// 0x01DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.RB_ConstraintDrawComponent
// 0x0004 (0x01E8 - 0x01E4)
class URB_ConstraintDrawComponent : public UPrimitiveComponent
{
public:
	class UMaterialInterface*                          LimitMaterial;                                    		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.RB_RadialImpulseComponent
// 0x0014 (0x01F8 - 0x01E4)
class URB_RadialImpulseComponent : public UPrimitiveComponent
{
public:
	unsigned char                                      ImpulseFalloff;                                   		// 0x01E4 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              ImpulseStrength;                                  		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ImpulseRadius;                                    		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bVelChange : 1;                                   		// 0x01F0 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bCauseFracture : 1;                               		// 0x01F0 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	class UDrawSphereComponent*                        PreviewSphere;                                    		// 0x01F4 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.RB_Handle
// 0x006B (0x00C0 - 0x0055)
class URB_Handle : public UActorComponent
{
public:
	class UPrimitiveComponent*                         GrabbedComponent;                                 		// 0x0058 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FName                                       GrabbedBoneName;                                  		// 0x005C (0x0008) [0x0000000000000000]              
	int                                                SceneIndex;                                       		// 0x0064 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	unsigned long                                      bInHardware : 1;                                  		// 0x0068 (0x0004) [0x0000000000003002] [0x00000001] ( CPF_Const | CPF_Native | CPF_Transient )
	unsigned long                                      bRotationConstrained : 1;                         		// 0x0068 (0x0004) [0x0000000000003002] [0x00000002] ( CPF_Const | CPF_Native | CPF_Transient )
	unsigned long                                      bInterpolating : 1;                               		// 0x0068 (0x0004) [0x0000000000000000] [0x00000004] 
	struct FPointer                                    HandleData;                                       		// 0x006C (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FPointer                                    KinActorData;                                     		// 0x0070 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	float                                              LinearDamping;                                    		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LinearStiffness;                                  		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     LinearStiffnessScale3D;                           		// 0x007C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     LinearDampingScale3D;                             		// 0x0088 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              AngularDamping;                                   		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AngularStiffness;                                 		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     Destination;                                      		// 0x009C (0x000C) [0x0000000000000000]              
	struct FVector                                     StepSize;                                         		// 0x00A8 (0x000C) [0x0000000000000000]              
	struct FVector                                     Location;                                         		// 0x00B4 (0x000C) [0x0000000000000000]              
public:
};

// Class Engine.RB_Spring
// 0x0053 (0x00A8 - 0x0055)
class URB_Spring : public UActorComponent
{
public:
	class UPrimitiveComponent*                         Component1;                                       		// 0x0058 (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FName                                       BoneName1;                                        		// 0x005C (0x0008) [0x0000000000000002]              ( CPF_Const )
	class UPrimitiveComponent*                         Component2;                                       		// 0x0064 (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FName                                       BoneName2;                                        		// 0x0068 (0x0008) [0x0000000000000002]              ( CPF_Const )
	int                                                SceneIndex;                                       		// 0x0070 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	unsigned long                                      bInHardware : 1;                                  		// 0x0074 (0x0004) [0x0000000000001002] [0x00000001] ( CPF_Const | CPF_Native )
	unsigned long                                      bEnableForceMassRatio : 1;                        		// 0x0074 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	struct FPointer                                    SpringData;                                       		// 0x0078 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              TimeSinceActivation;                              		// 0x007C (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              MinBodyMass;                                      		// 0x0080 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              SpringSaturateDist;                               		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SpringMaxForce;                                   		// 0x0088 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxForceMassRatio;                                		// 0x008C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FInterpCurveFloat                           SpringMaxForceTimeScale;                          		// 0x0090 (0x0010) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              DampSaturateVel;                                  		// 0x00A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DampMaxForce;                                     		// 0x00A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SVehicleSimBase
// 0x003B (0x0090 - 0x0055)
class USVehicleSimBase : public UActorComponent
{
public:
	float                                              WheelSuspensionStiffness;                         		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WheelSuspensionDamping;                           		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WheelSuspensionBias;                              		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WheelLongExtremumSlip;                            		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WheelLongExtremumValue;                           		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WheelLongAsymptoteSlip;                           		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WheelLongAsymptoteValue;                          		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WheelLatExtremumSlip;                             		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WheelLatExtremumValue;                            		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WheelLatAsymptoteSlip;                            		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WheelLatAsymptoteValue;                           		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WheelInertia;                                     		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bWheelSpeedOverride : 1;                          		// 0x0088 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bClampedFrictionModel : 1;                        		// 0x0088 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bAutoDrive : 1;                                   		// 0x0088 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	float                                              AutoDriveSteer;                                   		// 0x008C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SVehicleSimCar
// 0x0034 (0x00C4 - 0x0090)
class USVehicleSimCar : public USVehicleSimBase
{
public:
	float                                              ChassisTorqueScale;                               		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FInterpCurveFloat                           MaxSteerAngleCurve;                               		// 0x0094 (0x0010) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              SteerSpeed;                                       		// 0x00A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ReverseThrottle;                                  		// 0x00A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EngineBrakeFactor;                                		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxBrakeTorque;                                   		// 0x00B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              StopThreshold;                                    		// 0x00B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bIsDriving : 1;                                   		// 0x00B8 (0x0004) [0x0000000000000000] [0x00000001] 
	float                                              ActualSteering;                                   		// 0x00BC (0x0004) [0x0000000000000000]              
	float                                              TimeSinceThrottle;                                		// 0x00C0 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SVehicleSimTank
// 0x0030 (0x00F4 - 0x00C4)
class USVehicleSimTank : public USVehicleSimCar
{
public:
	float                                              LeftTrackVel;                                     		// 0x00C4 (0x0004) [0x0000000000000000]              
	float                                              RightTrackVel;                                    		// 0x00C8 (0x0004) [0x0000000000000000]              
	float                                              LeftTrackTorque;                                  		// 0x00CC (0x0004) [0x0000000000000000]              
	float                                              RightTrackTorque;                                 		// 0x00D0 (0x0004) [0x0000000000000000]              
	float                                              MaxEngineTorque;                                  		// 0x00D4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EngineDamping;                                    		// 0x00D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              InsideTrackTorqueFactor;                          		// 0x00DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SteeringLatStiffnessFactor;                       		// 0x00E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TurnInPlaceThrottle;                              		// 0x00E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TurnMaxGripReduction;                             		// 0x00E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TurnGripScaleRate;                                		// 0x00EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bTurnInPlaceOnSteer : 1;                          		// 0x00F0 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.ActorFactoryApexClothing
// 0x0014 (0x0080 - 0x006C)
class UActorFactoryApexClothing : public UActorFactorySkeletalMesh
{
public:
	TArray< class UApexClothingAsset* >                ClothingAssets;                                   		// 0x006C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned char                                      ClothingRBChannel;                                		// 0x0078 (0x0001) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FRBCollisionChannelContainer                ClothingRBCollideWithChannels;                    		// 0x007C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
public:
};

// Class Engine.ApexDestructibleDamageParameters
// 0x000C (0x0048 - 0x003C)
class UApexDestructibleDamageParameters : public UObject
{
public:
	TArray< struct FDamagePair >                       DamageMap;                                        		// 0x003C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.FractureMaterial
// 0x0008 (0x0044 - 0x003C)
class UFractureMaterial : public UObject
{
public:
	class UParticleSystem*                             FractureEffect;                                   		// 0x003C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   FractureSound;                                    		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.PhysicalMaterial
// 0x0064 (0x00A0 - 0x003C)
class UPhysicalMaterial : public UObject
{
public:
	int                                                MaterialIndex;                                    		// 0x003C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              Friction;                                         		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Restitution;                                      		// 0x0044 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bForceConeFriction : 1;                           		// 0x0048 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bEnableAnisotropicFriction : 1;                   		// 0x0048 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	struct FVector                                     AnisoFrictionDir;                                 		// 0x004C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              FrictionV;                                        		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Density;                                          		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AngularDamping;                                   		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LinearDamping;                                    		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MagneticResponse;                                 		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WindResponse;                                     		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ImpactThreshold;                                  		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ImpactReFireDelay;                                		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             ImpactEffect;                                     		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   ImpactSound;                                      		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SlideThreshold;                                   		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SlideReFireDelay;                                 		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             SlideEffect;                                      		// 0x0088 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   SlideSound;                                       		// 0x008C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   FractureSoundExplosion;                           		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   FractureSoundSingle;                              		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UPhysicalMaterial*                           Parent;                                           		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UPhysicalMaterialPropertyBase*               PhysicalMaterialProperty;                         		// 0x009C (0x0004) [0x0000000004400009]              ( CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
public:
};

// Class Engine.PhysicalMaterialPropertyBase
// 0x0000 (0x003C - 0x003C)
class UPhysicalMaterialPropertyBase : public UObject
{
public:
public:
};

// Class Engine.PhysicsAsset
// 0x0068 (0x00A4 - 0x003C)
class UPhysicsAsset : public UObject
{
public:
	class USkeletalMesh*                               DefaultSkelMesh;                                  		// 0x003C (0x0004) [0x0000000000000002]              ( CPF_Const )
	TArray< class URB_BodySetup* >                     BodySetup;                                        		// 0x0040 (0x000C) [0x000000000440000A]              ( CPF_Const | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
	struct FMap_Mirror                                 BodySetupIndexMap;                                		// 0x004C (0x003C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< int >                                      BoundsBodies;                                     		// 0x0088 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< class URB_ConstraintSetup* >               ConstraintSetup;                                  		// 0x0094 (0x000C) [0x000000000440000A]              ( CPF_Const | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
	class UPhysicsAssetInstance*                       DefaultInstance;                                  		// 0x00A0 (0x0004) [0x000000000440000A]              ( CPF_Const | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
public:
};

// Class Engine.PhysicsAssetInstance
// 0x0078 (0x00B4 - 0x003C)
class UPhysicsAssetInstance : public UObject
{
public:
	class AActor*                                      Owner;                                            		// 0x003C (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                RootBodyIndex;                                    		// 0x0040 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	TArray< class URB_BodyInstance* >                  Bodies;                                           		// 0x0044 (0x000C) [0x000000000440000A]              ( CPF_Const | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
	TArray< class URB_ConstraintInstance* >            Constraints;                                      		// 0x0050 (0x000C) [0x000000000440000A]              ( CPF_Const | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
	struct FMap_Mirror                                 CollisionDisableTable;                            		// 0x005C (0x003C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              LinearSpringScale;                                		// 0x0098 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              LinearDampingScale;                               		// 0x009C (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              LinearForceLimitScale;                            		// 0x00A0 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              AngularSpringScale;                               		// 0x00A4 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              AngularDampingScale;                              		// 0x00A8 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              AngularForceLimitScale;                           		// 0x00AC (0x0004) [0x0000000000000002]              ( CPF_Const )
	unsigned long                                      bInitBodies : 1;                                  		// 0x00B0 (0x0004) [0x0000000000000002] [0x00000001] ( CPF_Const )
public:
};

// Class Engine.PhysicsLODVerticalEmitter
// 0x0004 (0x0040 - 0x003C)
class UPhysicsLODVerticalEmitter : public UObject
{
public:
	int                                                ParticlePercentage;                               		// 0x003C (0x0004) [0x0000000000005000]              ( CPF_Native | CPF_Config )
public:
};

// Class Engine.RB_BodyInstance
// 0x0060 (0x009C - 0x003C)
class URB_BodyInstance : public UObject
{
public:
	class UPrimitiveComponent*                         OwnerComponent;                                   		// 0x003C (0x0004) [0x000000000408200A]              ( CPF_Const | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	int                                                BodyIndex;                                        		// 0x0040 (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FVector                                     Velocity;                                         		// 0x0044 (0x000C) [0x0000000000000000]              
	struct FVector                                     PreviousVelocity;                                 		// 0x0050 (0x000C) [0x0000000000000000]              
	int                                                SceneIndex;                                       		// 0x005C (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FPointer                                    BodyData;                                         		// 0x0060 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FPointer                                    BoneSpring;                                       		// 0x0064 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FPointer                                    BoneSpringKinActor;                               		// 0x0068 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	unsigned long                                      bEnableBoneSpringLinear : 1;                      		// 0x006C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bEnableBoneSpringAngular : 1;                     		// 0x006C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bDisableOnOverextension : 1;                      		// 0x006C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bNotifyOwnerOnOverextension : 1;                  		// 0x006C (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bTeleportOnOverextension : 1;                     		// 0x006C (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bUseKinActorForBoneSpring : 1;                    		// 0x006C (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bMakeSpringToBaseCollisionComponent : 1;          		// 0x006C (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bOnlyCollideWithPawns : 1;                        		// 0x006C (0x0004) [0x0000000000000003] [0x00000080] ( CPF_Edit | CPF_Const )
	unsigned long                                      bEnableCollisionResponse : 1;                     		// 0x006C (0x0004) [0x0000000000000003] [0x00000100] ( CPF_Edit | CPF_Const )
	unsigned long                                      bPushBody : 1;                                    		// 0x006C (0x0004) [0x0000000000000003] [0x00000200] ( CPF_Edit | CPF_Const )
	unsigned long                                      bForceUnfixed : 1;                                		// 0x006C (0x0004) [0x0000000000002000] [0x00000400] ( CPF_Transient )
	unsigned long                                      bInstanceAlwaysFullAnimWeight : 1;                		// 0x006C (0x0004) [0x0000000000002000] [0x00000800] ( CPF_Transient )
	float                                              BoneLinearSpring;                                 		// 0x0070 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              BoneLinearDamping;                                		// 0x0074 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              BoneAngularSpring;                                		// 0x0078 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              BoneAngularDamping;                               		// 0x007C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              OverextensionThreshold;                           		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CustomGravityFactor;                              		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LastEffectPlayedTime;                             		// 0x0088 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UPhysicalMaterial*                           PhysMaterialOverride;                             		// 0x008C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              ContactReportForceThreshold;                      		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              InstanceMassScale;                                		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              InstanceDampingScale;                             		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.RB_ConstraintInstance
// 0x0070 (0x00AC - 0x003C)
class URB_ConstraintInstance : public UObject
{
public:
	class AActor*                                      Owner;                                            		// 0x003C (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	class UPrimitiveComponent*                         OwnerComponent;                                   		// 0x0040 (0x0004) [0x000000000408200A]              ( CPF_Const | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	int                                                ConstraintIndex;                                  		// 0x0044 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                SceneIndex;                                       		// 0x0048 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	unsigned long                                      bInHardware : 1;                                  		// 0x004C (0x0004) [0x0000000000001002] [0x00000001] ( CPF_Const | CPF_Native )
	unsigned long                                      bLinearXPositionDrive : 1;                        		// 0x004C (0x0004) [0x0000000000000003] [0x00000002] ( CPF_Edit | CPF_Const )
	unsigned long                                      bLinearXVelocityDrive : 1;                        		// 0x004C (0x0004) [0x0000000000000003] [0x00000004] ( CPF_Edit | CPF_Const )
	unsigned long                                      bLinearYPositionDrive : 1;                        		// 0x004C (0x0004) [0x0000000000000003] [0x00000008] ( CPF_Edit | CPF_Const )
	unsigned long                                      bLinearYVelocityDrive : 1;                        		// 0x004C (0x0004) [0x0000000000000003] [0x00000010] ( CPF_Edit | CPF_Const )
	unsigned long                                      bLinearZPositionDrive : 1;                        		// 0x004C (0x0004) [0x0000000000000003] [0x00000020] ( CPF_Edit | CPF_Const )
	unsigned long                                      bLinearZVelocityDrive : 1;                        		// 0x004C (0x0004) [0x0000000000000003] [0x00000040] ( CPF_Edit | CPF_Const )
	unsigned long                                      bSwingPositionDrive : 1;                          		// 0x004C (0x0004) [0x0000000000000003] [0x00000080] ( CPF_Edit | CPF_Const )
	unsigned long                                      bSwingVelocityDrive : 1;                          		// 0x004C (0x0004) [0x0000000000000003] [0x00000100] ( CPF_Edit | CPF_Const )
	unsigned long                                      bTwistPositionDrive : 1;                          		// 0x004C (0x0004) [0x0000000000000003] [0x00000200] ( CPF_Edit | CPF_Const )
	unsigned long                                      bTwistVelocityDrive : 1;                          		// 0x004C (0x0004) [0x0000000000000003] [0x00000400] ( CPF_Edit | CPF_Const )
	unsigned long                                      bAngularSlerpDrive : 1;                           		// 0x004C (0x0004) [0x0000000000000003] [0x00000800] ( CPF_Edit | CPF_Const )
	unsigned long                                      bTerminated : 1;                                  		// 0x004C (0x0004) [0x0000000000000000] [0x00001000] 
	struct FPointer                                    ConstraintData;                                   		// 0x0050 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FVector                                     LinearPositionTarget;                             		// 0x0054 (0x000C) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FVector                                     LinearVelocityTarget;                             		// 0x0060 (0x000C) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              LinearDriveSpring;                                		// 0x006C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              LinearDriveDamping;                               		// 0x0070 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              LinearDriveForceLimit;                            		// 0x0074 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned char                                      UnknownData00[ 0x8 ];                             		// 0x0078 (0x0008) MISSED OFFSET
	struct FQuat                                       AngularPositionTarget;                            		// 0x0080 (0x0010) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FVector                                     AngularVelocityTarget;                            		// 0x0090 (0x000C) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              AngularDriveSpring;                               		// 0x009C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              AngularDriveDamping;                              		// 0x00A0 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              AngularDriveForceLimit;                           		// 0x00A4 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FPointer                                    DummyKinActor;                                    		// 0x00A8 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
public:
};

// Class Engine.RB_ConstraintSetup
// 0x00C4 (0x0100 - 0x003C)
class URB_ConstraintSetup : public UObject
{
public:
	struct FName                                       JointName;                                        		// 0x003C (0x0008) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FName                                       ConstraintBone1;                                  		// 0x0044 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       ConstraintBone2;                                  		// 0x004C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     Pos1;                                             		// 0x0054 (0x000C) [0x0000000000000000]              
	struct FVector                                     PriAxis1;                                         		// 0x0060 (0x000C) [0x0000000000000000]              
	struct FVector                                     SecAxis1;                                         		// 0x006C (0x000C) [0x0000000000000000]              
	struct FVector                                     Pos2;                                             		// 0x0078 (0x000C) [0x0000000000000000]              
	struct FVector                                     PriAxis2;                                         		// 0x0084 (0x000C) [0x0000000000000000]              
	struct FVector                                     SecAxis2;                                         		// 0x0090 (0x000C) [0x0000000000000000]              
	struct FVector                                     PulleyPivot1;                                     		// 0x009C (0x000C) [0x0000000000000000]              
	struct FVector                                     PulleyPivot2;                                     		// 0x00A8 (0x000C) [0x0000000000000000]              
	unsigned long                                      bEnableProjection : 1;                            		// 0x00B4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bLinearLimitSoft : 1;                             		// 0x00B4 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bLinearBreakable : 1;                             		// 0x00B4 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bSwingLimited : 1;                                		// 0x00B4 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bTwistLimited : 1;                                		// 0x00B4 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bSwingLimitSoft : 1;                              		// 0x00B4 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bTwistLimitSoft : 1;                              		// 0x00B4 (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bAngularBreakable : 1;                            		// 0x00B4 (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bIsPulley : 1;                                    		// 0x00B4 (0x0004) [0x0000000000000001] [0x00000100] ( CPF_Edit )
	unsigned long                                      bMaintainMinDistance : 1;                         		// 0x00B4 (0x0004) [0x0000000000000001] [0x00000200] ( CPF_Edit )
	struct FLinearDOFSetup                             LinearXSetup;                                     		// 0x00B8 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearDOFSetup                             LinearYSetup;                                     		// 0x00C0 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearDOFSetup                             LinearZSetup;                                     		// 0x00C8 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              LinearLimitStiffness;                             		// 0x00D0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LinearLimitDamping;                               		// 0x00D4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LinearBreakThreshold;                             		// 0x00D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Swing1LimitAngle;                                 		// 0x00DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Swing2LimitAngle;                                 		// 0x00E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TwistLimitAngle;                                  		// 0x00E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SwingLimitStiffness;                              		// 0x00E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SwingLimitDamping;                                		// 0x00EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TwistLimitStiffness;                              		// 0x00F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TwistLimitDamping;                                		// 0x00F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AngularBreakThreshold;                            		// 0x00F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              PulleyRatio;                                      		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.RB_BSJointSetup
// 0x0000 (0x0100 - 0x0100)
class URB_BSJointSetup : public URB_ConstraintSetup
{
public:
public:
};

// Class Engine.RB_DistanceJointSetup
// 0x0000 (0x0100 - 0x0100)
class URB_DistanceJointSetup : public URB_ConstraintSetup
{
public:
public:
};

// Class Engine.RB_HingeSetup
// 0x0000 (0x0100 - 0x0100)
class URB_HingeSetup : public URB_ConstraintSetup
{
public:
public:
};

// Class Engine.RB_PrismaticSetup
// 0x0000 (0x0100 - 0x0100)
class URB_PrismaticSetup : public URB_ConstraintSetup
{
public:
public:
};

// Class Engine.RB_PulleyJointSetup
// 0x0000 (0x0100 - 0x0100)
class URB_PulleyJointSetup : public URB_ConstraintSetup
{
public:
public:
};

// Class Engine.RB_SkelJointSetup
// 0x0000 (0x0100 - 0x0100)
class URB_SkelJointSetup : public URB_ConstraintSetup
{
public:
public:
};

// Class Engine.RB_StayUprightSetup
// 0x0000 (0x0100 - 0x0100)
class URB_StayUprightSetup : public URB_ConstraintSetup
{
public:
public:
};

// Class Engine.SPhysicsShape
// 0x0024 (0x006C - 0x0048)
class USPhysicsShape : public UComponent
{
public:
	struct FName                                       SkelControlName;                                  		// 0x0048 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       BoneName;                                         		// 0x0050 (0x0008) [0x0000000000000000]              
	unsigned long                                      bIsSharedShape : 1;                               		// 0x0058 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bHasContact : 1;                                  		// 0x0058 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bNeedsTransform : 1;                              		// 0x0058 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	struct FPointer                                    pNxShape;                                         		// 0x005C (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FPointer                                    pNxRayCastShape;                                  		// 0x0060 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                MaterialIndex;                                    		// 0x0064 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                BoneIndex;                                        		// 0x0068 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
public:
};

// Class Engine.SVehicleWheel
// 0x00C8 (0x0134 - 0x006C)
class USVehicleWheel : public USPhysicsShape
{
public:
	float                                              Steer;                                            		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MotorTorque;                                      		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BrakeTorque;                                      		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ChassisTorque;                                    		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bPoweredWheel : 1;                                		// 0x007C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bHoverWheel : 1;                                  		// 0x007C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bCollidesVehicles : 1;                            		// 0x007C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bCollidesPawns : 1;                               		// 0x007C (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bIsSquealing : 1;                                 		// 0x007C (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bWheelOnGround : 1;                               		// 0x007C (0x0004) [0x0000000000000000] [0x00000020] 
	float                                              SteerFactor;                                      		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USkelControlWheel*                           WheelControl;                                     		// 0x0084 (0x0004) [0x0000000000000000]              
	struct FVector                                     BoneOffset;                                       		// 0x0088 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              WheelRadius;                                      		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SuspensionTravel;                                 		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SuspensionSpeed;                                  		// 0x009C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             WheelParticleSystem;                              		// 0x00A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      Side;                                             		// 0x00A4 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              LongSlipFactor;                                   		// 0x00A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LatSlipFactor;                                    		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              HandbrakeLongSlipFactor;                          		// 0x00B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              HandbrakeLatSlipFactor;                           		// 0x00B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ParkedSlipFactor;                                 		// 0x00B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     WheelPosition;                                    		// 0x00BC (0x000C) [0x0000000000000000]              
	float                                              SpinVel;                                          		// 0x00C8 (0x0004) [0x0000000000000000]              
	float                                              LongSlipRatio;                                    		// 0x00CC (0x0004) [0x0000000000000000]              
	float                                              LatSlipAngle;                                     		// 0x00D0 (0x0004) [0x0000000000000000]              
	struct FVector                                     ContactNormal;                                    		// 0x00D4 (0x000C) [0x0000000000000000]              
	struct FVector                                     LongDirection;                                    		// 0x00E0 (0x000C) [0x0000000000000000]              
	struct FVector                                     LatDirection;                                     		// 0x00EC (0x000C) [0x0000000000000000]              
	float                                              ContactForce;                                     		// 0x00F8 (0x0004) [0x0000000000000000]              
	float                                              LongImpulse;                                      		// 0x00FC (0x0004) [0x0000000000000000]              
	float                                              LatImpulse;                                       		// 0x0100 (0x0004) [0x0000000000000000]              
	float                                              DesiredSuspensionPosition;                        		// 0x0104 (0x0004) [0x0000000000000000]              
	float                                              SuspensionPosition;                               		// 0x0108 (0x0004) [0x0000000000000000]              
	float                                              CurrentRotation;                                  		// 0x010C (0x0004) [0x0000000000000000]              
	struct FPointer                                    WheelShape;                                       		// 0x0110 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                WheelMaterialIndex;                               		// 0x0114 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	class UClass*                                      WheelPSCClass;                                    		// 0x0118 (0x0004) [0x0000000000000000]              
	class UParticleSystemComponent*                    WheelParticleComp;                                		// 0x011C (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FVector                                     LocalPointVel;                                    		// 0x0120 (0x000C) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FName                                       SlipParticleParamName;                            		// 0x012C (0x0008) [0x0000000000000000]              
public:
};

// Class Engine.NxGenericForceFieldBrush
// 0x00CC (0x02E0 - 0x0214)
class ANxGenericForceFieldBrush : public AVolume
{
public:
	int                                                ExcludeChannel;                                   		// 0x0214 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRBCollisionChannelContainer                CollideWithChannels;                              		// 0x0218 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      RBChannel;                                        		// 0x021C (0x0001) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned char                                      Coordinates;                                      		// 0x021D (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     Constant;                                         		// 0x0220 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     PositionMultiplierX;                              		// 0x022C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     PositionMultiplierY;                              		// 0x0238 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     PositionMultiplierZ;                              		// 0x0244 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     PositionTarget;                                   		// 0x0250 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     VelocityMultiplierX;                              		// 0x025C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     VelocityMultiplierY;                              		// 0x0268 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     VelocityMultiplierZ;                              		// 0x0274 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     VelocityTarget;                                   		// 0x0280 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     Noise;                                            		// 0x028C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     FalloffLinear;                                    		// 0x0298 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     FalloffQuadratic;                                 		// 0x02A4 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              TorusRadius;                                      		// 0x02B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FPointer                                    ForceField;                                       		// 0x02B4 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FPointer >                          ConvexMeshes;                                     		// 0x02B8 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FPointer >                          ExclusionShapes;                                  		// 0x02C4 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FPointer >                          ExclusionShapePoses;                              		// 0x02D0 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FPointer                                    LinearKernel;                                     		// 0x02DC (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.RB_ForceFieldExcludeVolume
// 0x0008 (0x021C - 0x0214)
class ARB_ForceFieldExcludeVolume : public AVolume
{
public:
	int                                                ForceFieldChannel;                                		// 0x0214 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                SceneIndex;                                       		// 0x0218 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
public:
};

// Class Engine.NxForceField
// 0x0040 (0x0218 - 0x01D8)
class ANxForceField : public AActor
{
public:
	int                                                ExcludeChannel;                                   		// 0x01D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bForceActive : 1;                                 		// 0x01DC (0x0004) [0x0000000000000021] [0x00000001] ( CPF_Edit | CPF_Net )
	struct FRBCollisionChannelContainer                CollideWithChannels;                              		// 0x01E0 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned char                                      RBChannel;                                        		// 0x01E4 (0x0001) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FPointer                                    ForceField;                                       		// 0x01E8 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FPointer >                          ConvexMeshes;                                     		// 0x01EC (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FPointer >                          ExclusionShapes;                                  		// 0x01F8 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FPointer >                          ExclusionShapePoses;                              		// 0x0204 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FPointer                                    U2NRotation;                                      		// 0x0210 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	int                                                SceneIndex;                                       		// 0x0214 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
public:
};

// Class Engine.NxCylindricalForceField
// 0x002C (0x0244 - 0x0218)
class ANxCylindricalForceField : public ANxForceField
{
public:
	float                                              RadialStrength;                                   		// 0x0218 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RotationalStrength;                               		// 0x021C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LiftStrength;                                     		// 0x0220 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceRadius;                                      		// 0x0224 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceTopRadius;                                   		// 0x0228 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LiftFalloffHeight;                                		// 0x022C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EscapeVelocity;                                   		// 0x0230 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceHeight;                                      		// 0x0234 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              HeightOffset;                                     		// 0x0238 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      UseSpecialRadialForce : 1;                        		// 0x023C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	struct FPointer                                    Kernel;                                           		// 0x0240 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.NxCylindricalForceFieldCapsule
// 0x0004 (0x0248 - 0x0244)
class ANxCylindricalForceFieldCapsule : public ANxCylindricalForceField
{
public:
	class UDrawCapsuleComponent*                       RenderComponent;                                  		// 0x0244 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.NxForceFieldGeneric
// 0x00B0 (0x02C8 - 0x0218)
class ANxForceFieldGeneric : public ANxForceField
{
public:
	class UForceFieldShape*                            Shape;                                            		// 0x0218 (0x0004) [0x0000000004000001]              ( CPF_Edit | CPF_EditInline )
	class UActorComponent*                             DrawComponent;                                    		// 0x021C (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	float                                              RoughExtentX;                                     		// 0x0220 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RoughExtentY;                                     		// 0x0224 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RoughExtentZ;                                     		// 0x0228 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      Coordinates;                                      		// 0x022C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     Constant;                                         		// 0x0230 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     PositionMultiplierX;                              		// 0x023C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     PositionMultiplierY;                              		// 0x0248 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     PositionMultiplierZ;                              		// 0x0254 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     PositionTarget;                                   		// 0x0260 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     VelocityMultiplierX;                              		// 0x026C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     VelocityMultiplierY;                              		// 0x0278 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     VelocityMultiplierZ;                              		// 0x0284 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     VelocityTarget;                                   		// 0x0290 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     Noise;                                            		// 0x029C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     FalloffLinear;                                    		// 0x02A8 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     FalloffQuadratic;                                 		// 0x02B4 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              TorusRadius;                                      		// 0x02C0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FPointer                                    LinearKernel;                                     		// 0x02C4 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.NxForceFieldRadial
// 0x001C (0x0234 - 0x0218)
class ANxForceFieldRadial : public ANxForceField
{
public:
	class UForceFieldShape*                            Shape;                                            		// 0x0218 (0x0004) [0x0000000004000001]              ( CPF_Edit | CPF_EditInline )
	class UActorComponent*                             DrawComponent;                                    		// 0x021C (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	float                                              ForceStrength;                                    		// 0x0220 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceRadius;                                      		// 0x0224 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SelfRotationStrength;                             		// 0x0228 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      ForceFalloff;                                     		// 0x022C (0x0001) [0x0000000000080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component )
	struct FPointer                                    Kernel;                                           		// 0x0230 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.NxForceFieldTornado
// 0x0038 (0x0250 - 0x0218)
class ANxForceFieldTornado : public ANxForceField
{
public:
	class UForceFieldShape*                            Shape;                                            		// 0x0218 (0x0004) [0x0000000004000001]              ( CPF_Edit | CPF_EditInline )
	class UActorComponent*                             DrawComponent;                                    		// 0x021C (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	float                                              RadialStrength;                                   		// 0x0220 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RotationalStrength;                               		// 0x0224 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LiftStrength;                                     		// 0x0228 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceRadius;                                      		// 0x022C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceTopRadius;                                   		// 0x0230 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LiftFalloffHeight;                                		// 0x0234 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EscapeVelocity;                                   		// 0x0238 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceHeight;                                      		// 0x023C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              HeightOffset;                                     		// 0x0240 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      BSpecialRadialForceMode : 1;                      		// 0x0244 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              SelfRotationStrength;                             		// 0x0248 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FPointer                                    Kernel;                                           		// 0x024C (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.NxGenericForceField
// 0x009C (0x02B4 - 0x0218)
class ANxGenericForceField : public ANxForceField
{
public:
	unsigned char                                      Coordinates;                                      		// 0x0218 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     Constant;                                         		// 0x021C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     PositionMultiplierX;                              		// 0x0228 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     PositionMultiplierY;                              		// 0x0234 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     PositionMultiplierZ;                              		// 0x0240 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     PositionTarget;                                   		// 0x024C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     VelocityMultiplierX;                              		// 0x0258 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     VelocityMultiplierY;                              		// 0x0264 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     VelocityMultiplierZ;                              		// 0x0270 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     VelocityTarget;                                   		// 0x027C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     Noise;                                            		// 0x0288 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     FalloffLinear;                                    		// 0x0294 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     FalloffQuadratic;                                 		// 0x02A0 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              TorusRadius;                                      		// 0x02AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FPointer                                    LinearKernel;                                     		// 0x02B0 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.NxGenericForceFieldBox
// 0x0010 (0x02C4 - 0x02B4)
class ANxGenericForceFieldBox : public ANxGenericForceField
{
public:
	class UDrawBoxComponent*                           RenderComponent;                                  		// 0x02B4 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FVector                                     BoxExtent;                                        		// 0x02B8 (0x000C) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.NxGenericForceFieldCapsule
// 0x000C (0x02C0 - 0x02B4)
class ANxGenericForceFieldCapsule : public ANxGenericForceField
{
public:
	class UDrawCapsuleComponent*                       RenderComponent;                                  		// 0x02B4 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	float                                              CapsuleHeight;                                    		// 0x02B8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CapsuleRadius;                                    		// 0x02BC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.NxRadialForceField
// 0x0014 (0x022C - 0x0218)
class ANxRadialForceField : public ANxForceField
{
public:
	class UDrawSphereComponent*                        RenderComponent;                                  		// 0x0218 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	float                                              ForceStrength;                                    		// 0x021C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceRadius;                                      		// 0x0220 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      ForceFalloff;                                     		// 0x0224 (0x0001) [0x0000000000080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component )
	struct FPointer                                    LinearKernel;                                     		// 0x0228 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.NxRadialCustomForceField
// 0x0008 (0x0234 - 0x022C)
class ANxRadialCustomForceField : public ANxRadialForceField
{
public:
	float                                              SelfRotationStrength;                             		// 0x022C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FPointer                                    Kernel;                                           		// 0x0230 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.NxTornadoAngularForceField
// 0x0030 (0x0248 - 0x0218)
class ANxTornadoAngularForceField : public ANxForceField
{
public:
	float                                              RadialStrength;                                   		// 0x0218 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RotationalStrength;                               		// 0x021C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LiftStrength;                                     		// 0x0220 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceRadius;                                      		// 0x0224 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceTopRadius;                                   		// 0x0228 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LiftFalloffHeight;                                		// 0x022C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EscapeVelocity;                                   		// 0x0230 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceHeight;                                      		// 0x0234 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              HeightOffset;                                     		// 0x0238 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      BSpecialRadialForceMode : 1;                      		// 0x023C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              SelfRotationStrength;                             		// 0x0240 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FPointer                                    Kernel;                                           		// 0x0244 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.NxTornadoAngularForceFieldCapsule
// 0x0004 (0x024C - 0x0248)
class ANxTornadoAngularForceFieldCapsule : public ANxTornadoAngularForceField
{
public:
	class UDrawCapsuleComponent*                       RenderComponent;                                  		// 0x0248 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.NxTornadoForceField
// 0x002C (0x0244 - 0x0218)
class ANxTornadoForceField : public ANxForceField
{
public:
	float                                              RadialStrength;                                   		// 0x0218 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RotationalStrength;                               		// 0x021C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LiftStrength;                                     		// 0x0220 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceRadius;                                      		// 0x0224 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceTopRadius;                                   		// 0x0228 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LiftFalloffHeight;                                		// 0x022C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EscapeVelocity;                                   		// 0x0230 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceHeight;                                      		// 0x0234 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              HeightOffset;                                     		// 0x0238 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      BSpecialRadialForceMode : 1;                      		// 0x023C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	struct FPointer                                    Kernel;                                           		// 0x0240 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.NxTornadoForceFieldCapsule
// 0x0004 (0x0248 - 0x0244)
class ANxTornadoForceFieldCapsule : public ANxTornadoForceField
{
public:
	class UDrawCapsuleComponent*                       RenderComponent;                                  		// 0x0244 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.NxForceFieldSpawnable
// 0x0004 (0x01DC - 0x01D8)
class ANxForceFieldSpawnable : public AActor
{
public:
	class UNxForceFieldComponent*                      ForceFieldComponent;                              		// 0x01D8 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.RB_CylindricalForceActor
// 0x0030 (0x0208 - 0x01D8)
class ARB_CylindricalForceActor : public ARigidBodyBase
{
public:
	class UDrawCylinderComponent*                      RenderComponent;                                  		// 0x01D8 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	float                                              RadialStrength;                                   		// 0x01DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RotationalStrength;                               		// 0x01E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LiftStrength;                                     		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LiftFalloffHeight;                                		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EscapeVelocity;                                   		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceRadius;                                      		// 0x01F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceTopRadius;                                   		// 0x01F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceHeight;                                      		// 0x01F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              HeightOffset;                                     		// 0x01FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bForceActive : 1;                                 		// 0x0200 (0x0004) [0x0000000000000021] [0x00000001] ( CPF_Edit | CPF_Net )
	unsigned long                                      bForceApplyToCloth : 1;                           		// 0x0200 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bForceApplyToFluid : 1;                           		// 0x0200 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bForceApplyToRigidBodies : 1;                     		// 0x0200 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bForceApplyToProjectiles : 1;                     		// 0x0200 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	struct FRBCollisionChannelContainer                CollideWithChannels;                              		// 0x0204 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
public:
};

// Class Engine.RB_RadialForceActor
// 0x0020 (0x01F8 - 0x01D8)
class ARB_RadialForceActor : public ARigidBodyBase
{
public:
	class UDrawSphereComponent*                        RenderComponent;                                  		// 0x01D8 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	float                                              ForceStrength;                                    		// 0x01DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceRadius;                                      		// 0x01E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SwirlStrength;                                    		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SpinTorque;                                       		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      ForceFalloff;                                     		// 0x01EC (0x0001) [0x0000000000080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component )
	unsigned char                                      RadialForceMode;                                  		// 0x01ED (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bForceActive : 1;                                 		// 0x01F0 (0x0004) [0x0000000000000021] [0x00000001] ( CPF_Edit | CPF_Net )
	unsigned long                                      bForceApplyToCloth : 1;                           		// 0x01F0 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bForceApplyToFluid : 1;                           		// 0x01F0 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bForceApplyToRigidBodies : 1;                     		// 0x01F0 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bForceApplyToProjectiles : 1;                     		// 0x01F0 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	struct FRBCollisionChannelContainer                CollideWithChannels;                              		// 0x01F4 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
public:
};

// Class Engine.NxForceFieldComponent
// 0x0050 (0x0234 - 0x01E4)
class UNxForceFieldComponent : public UPrimitiveComponent
{
public:
	class UForceFieldShape*                            Shape;                                            		// 0x01E4 (0x0004) [0x0000000004000001]              ( CPF_Edit | CPF_EditInline )
	class UActorComponent*                             DrawComponent;                                    		// 0x01E8 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	int                                                ExcludeChannel;                                   		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bForceActive : 1;                                 		// 0x01F0 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bDestroyWhenInactive : 1;                         		// 0x01F0 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	struct FRBCollisionChannelContainer                CollideWithChannels;                              		// 0x01F4 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              Duration;                                         		// 0x01F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FPointer                                    ForceField;                                       		// 0x01FC (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FPointer >                          ConvexMeshes;                                     		// 0x0200 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FPointer >                          ExclusionShapes;                                  		// 0x020C (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FPointer >                          ExclusionShapePoses;                              		// 0x0218 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	int                                                SceneIndex;                                       		// 0x0224 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              ElapsedTime;                                      		// 0x0228 (0x0004) [0x0000000000000000]              
	class UPrimitiveComponent*                         RenderComponent;                                  		// 0x022C (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FPointer                                    RBPhysScene;                                      		// 0x0230 (0x0004) [0x0000000000001000]              ( CPF_Native )
public:
};

// Class Engine.NxForceFieldCylindricalComponent
// 0x002C (0x0260 - 0x0234)
class UNxForceFieldCylindricalComponent : public UNxForceFieldComponent
{
public:
	float                                              RadialStrength;                                   		// 0x0234 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RotationalStrength;                               		// 0x0238 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LiftStrength;                                     		// 0x023C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceRadius;                                      		// 0x0240 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceTopRadius;                                   		// 0x0244 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LiftFalloffHeight;                                		// 0x0248 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EscapeVelocity;                                   		// 0x024C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceHeight;                                      		// 0x0250 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              HeightOffset;                                     		// 0x0254 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      UseSpecialRadialForce : 1;                        		// 0x0258 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	struct FPointer                                    Kernel;                                           		// 0x025C (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.NxForceFieldGenericComponent
// 0x00A8 (0x02DC - 0x0234)
class UNxForceFieldGenericComponent : public UNxForceFieldComponent
{
public:
	float                                              RoughExtentX;                                     		// 0x0234 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RoughExtentY;                                     		// 0x0238 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RoughExtentZ;                                     		// 0x023C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      Coordinates;                                      		// 0x0240 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     Constant;                                         		// 0x0244 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     PositionMultiplierX;                              		// 0x0250 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     PositionMultiplierY;                              		// 0x025C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     PositionMultiplierZ;                              		// 0x0268 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     PositionTarget;                                   		// 0x0274 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     VelocityMultiplierX;                              		// 0x0280 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     VelocityMultiplierY;                              		// 0x028C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     VelocityMultiplierZ;                              		// 0x0298 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     VelocityTarget;                                   		// 0x02A4 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     Noise;                                            		// 0x02B0 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     FalloffLinear;                                    		// 0x02BC (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     FalloffQuadratic;                                 		// 0x02C8 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              TorusRadius;                                      		// 0x02D4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FPointer                                    Kernel;                                           		// 0x02D8 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.NxForceFieldRadialComponent
// 0x0014 (0x0248 - 0x0234)
class UNxForceFieldRadialComponent : public UNxForceFieldComponent
{
public:
	float                                              ForceStrength;                                    		// 0x0234 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceRadius;                                      		// 0x0238 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SelfRotationStrength;                             		// 0x023C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      ForceFalloff;                                     		// 0x0240 (0x0001) [0x0000000000080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component )
	struct FPointer                                    Kernel;                                           		// 0x0244 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.NxForceFieldTornadoComponent
// 0x0030 (0x0264 - 0x0234)
class UNxForceFieldTornadoComponent : public UNxForceFieldComponent
{
public:
	float                                              RadialStrength;                                   		// 0x0234 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RotationalStrength;                               		// 0x0238 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LiftStrength;                                     		// 0x023C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceRadius;                                      		// 0x0240 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceTopRadius;                                   		// 0x0244 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LiftFalloffHeight;                                		// 0x0248 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              EscapeVelocity;                                   		// 0x024C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceHeight;                                      		// 0x0250 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              HeightOffset;                                     		// 0x0254 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      BSpecialRadialForceMode : 1;                      		// 0x0258 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              SelfRotationStrength;                             		// 0x025C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FPointer                                    Kernel;                                           		// 0x0260 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.ForceFieldShape
// 0x0000 (0x003C - 0x003C)
class UForceFieldShape : public UObject
{
public:
public:
};

// Class Engine.ForceFieldShapeBox
// 0x0004 (0x0040 - 0x003C)
class UForceFieldShapeBox : public UForceFieldShape
{
public:
	class UDrawBoxComponent*                           Shape;                                            		// 0x003C (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.ForceFieldShapeCapsule
// 0x0004 (0x0040 - 0x003C)
class UForceFieldShapeCapsule : public UForceFieldShape
{
public:
	class UDrawCapsuleComponent*                       Shape;                                            		// 0x003C (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.ForceFieldShapeSphere
// 0x0004 (0x0040 - 0x003C)
class UForceFieldShapeSphere : public UForceFieldShape
{
public:
	class UDrawSphereComponent*                        Shape;                                            		// 0x003C (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.PrefabInstance
// 0x00BC (0x0294 - 0x01D8)
class APrefabInstance : public AActor
{
public:
	class UPrefab*                                     TemplatePrefab;                                   		// 0x01D8 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                TemplateVersion;                                  		// 0x01DC (0x0004) [0x0000000000000002]              ( CPF_Const )
	unsigned char                                      UnknownData00[ 0x3C ];                            		// 0x01E0 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.PrefabInstance.ArchetypeToInstanceMap
	class UPrefabSequence*                             SequenceInstance;                                 		// 0x021C (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                PI_PackageVersion;                                		// 0x0220 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                PI_LicenseePackageVersion;                        		// 0x0224 (0x0004) [0x0000000000000002]              ( CPF_Const )
	TArray< unsigned char >                            PI_Bytes;                                         		// 0x0228 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< class UObject* >                           PI_CompleteObjects;                               		// 0x0234 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< class UObject* >                           PI_ReferencedObjects;                             		// 0x0240 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< struct FString >                           PI_SavedNames;                                    		// 0x024C (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	unsigned char                                      UnknownData01[ 0x3C ];                            		// 0x0258 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.PrefabInstance.PI_ObjectMap
public:
};

// Class Engine.Prefab
// 0x0024 (0x0060 - 0x003C)
class UPrefab : public UObject
{
public:
	int                                                PrefabVersion;                                    		// 0x003C (0x0004) [0x0000000000000002]              ( CPF_Const )
	TArray< class UObject* >                           PrefabArchetypes;                                 		// 0x0040 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< class UObject* >                           RemovedArchetypes;                                		// 0x004C (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	class UPrefabSequence*                             PrefabSequence;                                   		// 0x0058 (0x0004) [0x0000000000000002]              ( CPF_Const )
	class UTexture2D*                                  PrefabPreview;                                    		// 0x005C (0x0004) [0x0000000000000002]              ( CPF_Const )
public:
};

// Class Engine.SequenceObject
// 0x0054 (0x0090 - 0x003C)
class USequenceObject : public UObject
{
public:
	int                                                ObjInstanceVersion;                               		// 0x003C (0x0004) [0x0000000000000002]              ( CPF_Const )
	class USequence*                                   ParentSequence;                                   		// 0x0040 (0x0004) [0x0000000001000002]              ( CPF_Const )
	int                                                ObjPosX;                                          		// 0x0044 (0x0004) [0x0000000000000000]              
	int                                                ObjPosY;                                          		// 0x0048 (0x0004) [0x0000000000000000]              
	struct FString                                     ObjName;                                          		// 0x004C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     ObjCategory;                                      		// 0x0058 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FString >                           ObjRemoveInProject;                               		// 0x0064 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FColor                                      ObjColor;                                         		// 0x0070 (0x0004) [0x0000000000000000]              
	struct FString                                     ObjComment;                                       		// 0x0074 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      bDeletable : 1;                                   		// 0x0080 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bDrawFirst : 1;                                   		// 0x0080 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bDrawLast : 1;                                    		// 0x0080 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bOutputObjCommentToScreen : 1;                    		// 0x0080 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bSuppressAutoComment : 1;                         		// 0x0080 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	int                                                DrawWidth;                                        		// 0x0084 (0x0004) [0x0000000000000000]              
	int                                                DrawHeight;                                       		// 0x0088 (0x0004) [0x0000000000000000]              
	class USequenceObject*                             PIESequenceObject;                                		// 0x008C (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.SequenceFrame
// 0x0020 (0x00B0 - 0x0090)
class USequenceFrame : public USequenceObject
{
public:
	int                                                SizeX;                                            		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                SizeY;                                            		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                BorderWidth;                                      		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bDrawBox : 1;                                     		// 0x009C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bFilled : 1;                                      		// 0x009C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bTileFill : 1;                                    		// 0x009C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	struct FColor                                      BorderColor;                                      		// 0x00A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      FillColor;                                        		// 0x00A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UTexture2D*                                  FillTexture;                                      		// 0x00A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterial*                                   FillMaterial;                                     		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SequenceFrameWrapped
// 0x0000 (0x00B0 - 0x00B0)
class USequenceFrameWrapped : public USequenceFrame
{
public:
public:
};

// Class Engine.SequenceOp
// 0x0054 (0x00E4 - 0x0090)
class USequenceOp : public USequenceObject
{
public:
	unsigned long                                      bIsActivated : 1;                                 		// 0x0090 (0x0004) [0x0000000001202000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bIsCurrentDebuggerOp : 1;                         		// 0x0090 (0x0004) [0x0000000001202000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bActive : 1;                                      		// 0x0090 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bLatentExecution : 1;                             		// 0x0090 (0x0004) [0x0000000000000002] [0x00000008] ( CPF_Const )
	unsigned long                                      bAutoActivateOutputLinks : 1;                     		// 0x0090 (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bHaveMovingVarConnector : 1;                      		// 0x0090 (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      bHaveMovingInputConnector : 1;                    		// 0x0090 (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	unsigned long                                      bHaveMovingOutputConnector : 1;                   		// 0x0090 (0x0004) [0x0000000000002000] [0x00000080] ( CPF_Transient )
	unsigned long                                      bPendingVarConnectorRecalc : 1;                   		// 0x0090 (0x0004) [0x0000000000002000] [0x00000100] ( CPF_Transient )
	unsigned long                                      bPendingInputConnectorRecalc : 1;                 		// 0x0090 (0x0004) [0x0000000000002000] [0x00000200] ( CPF_Transient )
	unsigned long                                      bPendingOutputConnectorRecalc : 1;                		// 0x0090 (0x0004) [0x0000000000002000] [0x00000400] ( CPF_Transient )
	unsigned long                                      bIsBreakpointSet : 1;                             		// 0x0090 (0x0004) [0x0000000000000000] [0x00000800] 
	unsigned long                                      bIsHiddenBreakpointSet : 1;                       		// 0x0090 (0x0004) [0x0000000001202000] [0x00001000] ( CPF_Transient )
	float                                              PIEActivationTime;                                		// 0x0094 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class USequenceOp*                                 ActivatorSeqOp;                                   		// 0x0098 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                LastActivatedInputLink;                           		// 0x009C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                LastActivatedOutputLink;                          		// 0x00A0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FSeqOpInputLink >                   InputLinks;                                       		// 0x00A4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FSeqOpOutputLink >                  OutputLinks;                                      		// 0x00B0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FSeqVarLink >                       VariableLinks;                                    		// 0x00BC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FSeqEventLink >                     EventLinks;                                       		// 0x00C8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                PlayerIndex;                                      		// 0x00D4 (0x0004) [0x0000000001002000]              ( CPF_Transient )
	unsigned char                                      GamepadID;                                        		// 0x00D8 (0x0001) [0x0000000001002000]              ( CPF_Transient )
	int                                                ActivateCount;                                    		// 0x00DC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                SearchTag;                                        		// 0x00E0 (0x0004) [0x0000000000202002]              ( CPF_Const | CPF_Transient )
public:
};

// Class Engine.Sequence
// 0x0068 (0x014C - 0x00E4)
class USequence : public USequenceOp
{
public:
	struct FPointer                                    LogFile;                                          		// 0x00E4 (0x0004) [0x0000000000000002]              ( CPF_Const )
	TArray< class USequenceObject* >                   SequenceObjects;                                  		// 0x00E8 (0x000C) [0x000000000040000A]              ( CPF_Const | CPF_ExportObject | CPF_NeedCtorLink )
	TArray< class USequenceOp* >                       ActiveSequenceOps;                                		// 0x00F4 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< class USequence* >                         NestedSequences;                                  		// 0x0100 (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	TArray< class USequenceEvent* >                    UnregisteredEvents;                               		// 0x010C (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< struct FActivateOp >                       DelayedActivatedOps;                              		// 0x0118 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< class USequenceOp* >                       DelayedLatentOps;                                 		// 0x0124 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	unsigned long                                      bEnabled : 1;                                     		// 0x0130 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	TArray< struct FQueuedActivationInfo >             QueuedActivations;                                		// 0x0134 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                DefaultViewX;                                     		// 0x0140 (0x0004) [0x0000000000000000]              
	int                                                DefaultViewY;                                     		// 0x0144 (0x0004) [0x0000000000000000]              
	float                                              DefaultViewZoom;                                  		// 0x0148 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.PrefabSequence
// 0x0004 (0x0150 - 0x014C)
class UPrefabSequence : public USequence
{
public:
	class APrefabInstance*                             OwnerPrefab;                                      		// 0x014C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.PrefabSequenceContainer
// 0x0000 (0x014C - 0x014C)
class UPrefabSequenceContainer : public USequence
{
public:
public:
};

// Class Engine.SequenceAction
// 0x0018 (0x00FC - 0x00E4)
class USequenceAction : public USequenceOp
{
public:
	struct FName                                       HandlerName;                                      		// 0x00E4 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bCallHandler : 1;                                 		// 0x00EC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	TArray< class UObject* >                           Targets;                                          		// 0x00F0 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqAct_ActivateRemoteEvent
// 0x0010 (0x010C - 0x00FC)
class USeqAct_ActivateRemoteEvent : public USequenceAction
{
public:
	class AActor*                                      Instigator;                                       		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       EventName;                                        		// 0x0100 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bStatusIsOk : 1;                                  		// 0x0108 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class Engine.SeqAct_AndGate
// 0x001C (0x0118 - 0x00FC)
class USeqAct_AndGate : public USequenceAction
{
public:
	unsigned long                                      bOpen : 1;                                        		// 0x00FC (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	TArray< unsigned long >                            LinkedOutputFiredStatus;                          		// 0x0100 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FPointer >                          LinkedOutputs;                                    		// 0x010C (0x000C) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
public:
};

// Class Engine.SeqAct_ApplySoundNode
// 0x0008 (0x0104 - 0x00FC)
class USeqAct_ApplySoundNode : public USequenceAction
{
public:
	class USoundCue*                                   PlaySound;                                        		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundNode*                                  ApplyNode;                                        		// 0x0100 (0x0004) [0x0000000004000001]              ( CPF_Edit | CPF_EditInline )
public:
};

// Class Engine.SeqAct_AttachToEvent
// 0x0004 (0x0100 - 0x00FC)
class USeqAct_AttachToEvent : public USequenceAction
{
public:
	unsigned long                                      bPreferController : 1;                            		// 0x00FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.SeqAct_CameraFade
// 0x0028 (0x0124 - 0x00FC)
class USeqAct_CameraFade : public USequenceAction
{
public:
	struct FColor                                      FadeColor;                                        		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector2D                                   FadeAlpha;                                        		// 0x0100 (0x0008) [0x0000000020000000]              ( CPF_Deprecated )
	float                                              FadeOpacity;                                      		// 0x0108 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FadeTime;                                         		// 0x010C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bPersistFade : 1;                                 		// 0x0110 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bFadeAudio : 1;                                   		// 0x0110 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	float                                              FadeTimeRemaining;                                		// 0x0114 (0x0004) [0x0000000000000000]              
	TArray< class APlayerController* >                 CachedPCs;                                        		// 0x0118 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqAct_CameraLookAt
// 0x0034 (0x0130 - 0x00FC)
class USeqAct_CameraLookAt : public USequenceAction
{
public:
	unsigned long                                      bAffectCamera : 1;                                		// 0x00FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bAlwaysFocus : 1;                                 		// 0x00FC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bAdjustCamera : 1;                                		// 0x00FC (0x0004) [0x0000000020000000] [0x00000004] ( CPF_Deprecated )
	unsigned long                                      bTurnInPlace : 1;                                 		// 0x00FC (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bIgnoreTrace : 1;                                 		// 0x00FC (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bAffectHead : 1;                                  		// 0x00FC (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bRotatePlayerWithCamera : 1;                      		// 0x00FC (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bToggleGodMode : 1;                               		// 0x00FC (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bLeaveCameraRotation : 1;                         		// 0x00FC (0x0004) [0x0000000000000001] [0x00000100] ( CPF_Edit )
	unsigned long                                      bDisableInput : 1;                                		// 0x00FC (0x0004) [0x0000000000000001] [0x00000200] ( CPF_Edit )
	unsigned long                                      bUsedTimer : 1;                                   		// 0x00FC (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      bCheckLineOfSight : 1;                            		// 0x00FC (0x0004) [0x0000000000000001] [0x00000800] ( CPF_Edit )
	struct FVector2D                                   InterpSpeedRange;                                 		// 0x0100 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FVector2D                                   InFocusFOV;                                       		// 0x0108 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       FocusBoneName;                                    		// 0x0110 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     TextDisplay;                                      		// 0x0118 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              TotalTime;                                        		// 0x0124 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CameraFOV;                                        		// 0x0128 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RemainingTime;                                    		// 0x012C (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.SeqAct_CameraShake
// 0x0020 (0x011C - 0x00FC)
class USeqAct_CameraShake : public USequenceAction
{
public:
	class UCameraShake*                                Shake;                                            		// 0x00FC (0x0004) [0x0000000004400009]              ( CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
	float                                              ShakeScale;                                       		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bDoControllerVibration : 1;                       		// 0x0104 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bRadialShake : 1;                                 		// 0x0104 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bOrientTowardRadialEpicenter : 1;                 		// 0x0104 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	float                                              RadialShake_InnerRadius;                          		// 0x0108 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RadialShake_OuterRadius;                          		// 0x010C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RadialShake_Falloff;                              		// 0x0110 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      PlaySpace;                                        		// 0x0114 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	class AActor*                                      LocationActor;                                    		// 0x0118 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_ChangeCollision
// 0x0005 (0x0101 - 0x00FC)
class USeqAct_ChangeCollision : public USequenceAction
{
public:
	unsigned long                                      bCollideActors : 1;                               		// 0x00FC (0x0004) [0x0000000000020003] [0x00000001] ( CPF_Edit | CPF_Const | CPF_EditConst )
	unsigned long                                      bBlockActors : 1;                                 		// 0x00FC (0x0004) [0x0000000000020003] [0x00000002] ( CPF_Edit | CPF_Const | CPF_EditConst )
	unsigned long                                      bIgnoreEncroachers : 1;                           		// 0x00FC (0x0004) [0x0000000000020003] [0x00000004] ( CPF_Edit | CPF_Const | CPF_EditConst )
	unsigned char                                      CollisionType;                                    		// 0x0100 (0x0001) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqAct_CommitMapChange
// 0x0000 (0x00FC - 0x00FC)
class USeqAct_CommitMapChange : public USequenceAction
{
public:
public:
};

// Class Engine.SeqAct_ConvertToString
// 0x0014 (0x0110 - 0x00FC)
class USeqAct_ConvertToString : public USequenceAction
{
public:
	unsigned long                                      bIncludeVarComment : 1;                           		// 0x00FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	struct FString                                     VarSeparator;                                     		// 0x0100 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                NumberOfInputs;                                   		// 0x010C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqAct_DrawText
// 0x003C (0x0138 - 0x00FC)
class USeqAct_DrawText : public USequenceAction
{
public:
	float                                              DisplayTimeSeconds;                               		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bDisplayOnObject : 1;                             		// 0x0100 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	struct FKismetDrawTextInfo                         DrawTextInfo;                                     		// 0x0104 (0x0034) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqAct_FinishSequence
// 0x000C (0x0108 - 0x00FC)
class USeqAct_FinishSequence : public USequenceAction
{
public:
	struct FString                                     OutputLabel;                                      		// 0x00FC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqAct_Gate
// 0x000C (0x0108 - 0x00FC)
class USeqAct_Gate : public USequenceAction
{
public:
	unsigned long                                      bOpen : 1;                                        		// 0x00FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	int                                                AutoCloseCount;                                   		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                CurrentCloseCount;                                		// 0x0104 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_GetDistance
// 0x0004 (0x0100 - 0x00FC)
class USeqAct_GetDistance : public USequenceAction
{
public:
	float                                              Distance;                                         		// 0x00FC (0x0004) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
public:
};

// Class Engine.SeqAct_GetLocationAndRotation
// 0x002C (0x0128 - 0x00FC)
class USeqAct_GetLocationAndRotation : public USequenceAction
{
public:
	struct FVector                                     Location;                                         		// 0x00FC (0x000C) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
	struct FVector                                     RotationVector;                                   		// 0x0108 (0x000C) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
	struct FVector                                     Rotation;                                         		// 0x0114 (0x000C) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
	struct FName                                       SocketOrBoneName;                                 		// 0x0120 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqAct_GetProperty
// 0x0008 (0x0104 - 0x00FC)
class USeqAct_GetProperty : public USequenceAction
{
public:
	struct FName                                       PropertyName;                                     		// 0x00FC (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqAct_GetVectorComponents
// 0x0018 (0x0114 - 0x00FC)
class USeqAct_GetVectorComponents : public USequenceAction
{
public:
	struct FVector                                     InVector;                                         		// 0x00FC (0x000C) [0x0000000000000000]              
	float                                              X;                                                		// 0x0108 (0x0004) [0x0000000000000000]              
	float                                              Y;                                                		// 0x010C (0x0004) [0x0000000000000000]              
	float                                              Z;                                                		// 0x0110 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_GetVelocity
// 0x0010 (0x010C - 0x00FC)
class USeqAct_GetVelocity : public USequenceAction
{
public:
	float                                              VelocityMag;                                      		// 0x00FC (0x0004) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
	struct FVector                                     VelocityVect;                                     		// 0x0100 (0x000C) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
public:
};

// Class Engine.SeqAct_HeadTrackingControl
// 0x0080 (0x017C - 0x00FC)
class USeqAct_HeadTrackingControl : public USequenceAction
{
public:
	TArray< struct FName >                             TrackControllerName;                              		// 0x00FC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              LookAtActorRadius;                                		// 0x0108 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bDisableBeyondLimit : 1;                          		// 0x010C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bLookAtPawns : 1;                                 		// 0x010C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	float                                              MaxLookAtTime;                                    		// 0x0110 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MinLookAtTime;                                    		// 0x0114 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxInterestTime;                                  		// 0x0118 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class UClass* >                            ActorClassesToLookAt;                             		// 0x011C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FName >                             TargetBoneNames;                                  		// 0x0128 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class UObject* >                           LookAtTargets;                                    		// 0x0134 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned char                                      UnknownData00[ 0x3C ];                            		// 0x0140 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.SeqAct_HeadTrackingControl.ActorToComponentMap
public:
};

// Class Engine.SeqAct_IsInObjectList
// 0x0004 (0x0100 - 0x00FC)
class USeqAct_IsInObjectList : public USequenceAction
{
public:
	unsigned long                                      bCheckForAllObjects : 1;                          		// 0x00FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bObjectFound : 1;                                 		// 0x00FC (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
public:
};

// Class Engine.SeqAct_Latent
// 0x0014 (0x0110 - 0x00FC)
class USeqAct_Latent : public USequenceAction
{
public:
	TArray< class AActor* >                            LatentActors;                                     		// 0x00FC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned long                                      bAborted : 1;                                     		// 0x0108 (0x0004) [0x0000000000000000] [0x00000001] 
	float                                              LatentActivationTime;                             		// 0x010C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_ActorFactory
// 0x0044 (0x0154 - 0x0110)
class USeqAct_ActorFactory : public USeqAct_Latent
{
public:
	unsigned long                                      bEnabled : 1;                                     		// 0x0110 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bIsSpawning : 1;                                  		// 0x0110 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bCheckSpawnCollision : 1;                         		// 0x0110 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	class UActorFactory*                               Factory;                                          		// 0x0114 (0x0004) [0x0000000004400009]              ( CPF_Edit | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
	unsigned char                                      PointSelection;                                   		// 0x0118 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	TArray< class AActor* >                            SpawnPoints;                                      		// 0x011C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FVector >                           SpawnLocations;                                   		// 0x0128 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FVector >                           SpawnOrientations;                                		// 0x0134 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                SpawnCount;                                       		// 0x0140 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SpawnDelay;                                       		// 0x0144 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                LastSpawnIdx;                                     		// 0x0148 (0x0004) [0x0000000000000000]              
	int                                                SpawnedCount;                                     		// 0x014C (0x0004) [0x0000000000000000]              
	float                                              RemainingDelay;                                   		// 0x0150 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_ActorFactoryEx
// 0x0000 (0x0154 - 0x0154)
class USeqAct_ActorFactoryEx : public USeqAct_ActorFactory
{
public:
public:
};

// Class Engine.SeqAct_ProjectileFactory
// 0x0014 (0x0168 - 0x0154)
class USeqAct_ProjectileFactory : public USeqAct_ActorFactory
{
public:
	class UParticleSystem*                             PSTemplate;                                       		// 0x0154 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       SocketName;                                       		// 0x0158 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       BoneName;                                         		// 0x0160 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqAct_AIMoveToActor
// 0x001C (0x012C - 0x0110)
class USeqAct_AIMoveToActor : public USeqAct_Latent
{
public:
	unsigned long                                      bInterruptable : 1;                               		// 0x0110 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bPickClosest : 1;                                 		// 0x0110 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	TArray< class AActor* >                            Destination;                                      		// 0x0114 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              MovementSpeedModifier;                            		// 0x0120 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class AActor*                                      LookAt;                                           		// 0x0124 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                LastDestinationChoice;                            		// 0x0128 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.SeqAct_Delay
// 0x0014 (0x0124 - 0x0110)
class USeqAct_Delay : public USeqAct_Latent
{
public:
	unsigned long                                      bDelayActive : 1;                                 		// 0x0110 (0x0004) [0x0000000000000002] [0x00000001] ( CPF_Const )
	unsigned long                                      bStartWillRestart : 1;                            		// 0x0110 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	float                                              DefaultDuration;                                  		// 0x0114 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              Duration;                                         		// 0x0118 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LastUpdateTime;                                   		// 0x011C (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              RemainingTime;                                    		// 0x0120 (0x0004) [0x0000000000000002]              ( CPF_Const )
public:
};

// Class Engine.SeqAct_DelaySwitch
// 0x0010 (0x0120 - 0x0110)
class USeqAct_DelaySwitch : public USeqAct_Latent
{
public:
	int                                                LinkCount;                                        		// 0x0110 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                CurrentIdx;                                       		// 0x0114 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              SwitchDelay;                                      		// 0x0118 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              NextLinkTime;                                     		// 0x011C (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.SeqAct_ForceGarbageCollection
// 0x0000 (0x0110 - 0x0110)
class USeqAct_ForceGarbageCollection : public USeqAct_Latent
{
public:
public:
};

// Class Engine.SeqAct_Interp
// 0x00C4 (0x01D4 - 0x0110)
class USeqAct_Interp : public USeqAct_Latent
{
public:
	unsigned char                                      UnknownData00[ 0x3C ];                            		// 0x0110 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.SeqAct_Interp.SavedActorTransforms
	unsigned char                                      UnknownData01[ 0x3C ];                            		// 0x014C (0x003C) UNKNOWN PROPERTY: MapProperty Engine.SeqAct_Interp.SavedActorVisibilities
	unsigned long                                      bIgnoreLevelReset : 1;                            		// 0x0188 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bIsPlaying : 1;                                   		// 0x0188 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bPaused : 1;                                      		// 0x0188 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bIsBeingEdited : 1;                               		// 0x0188 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      bLooping : 1;                                     		// 0x0188 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bRewindOnPlay : 1;                                		// 0x0188 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bNoResetOnRewind : 1;                             		// 0x0188 (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bRewindIfAlreadyPlaying : 1;                      		// 0x0188 (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bReversePlayback : 1;                             		// 0x0188 (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      bInterpForPathBuilding : 1;                       		// 0x0188 (0x0004) [0x0000000000000001] [0x00000200] ( CPF_Edit )
	unsigned long                                      bForceStartPos : 1;                               		// 0x0188 (0x0004) [0x0000000000000001] [0x00000400] ( CPF_Edit )
	unsigned long                                      bDisableRadioFilter : 1;                          		// 0x0188 (0x0004) [0x0000000000000001] [0x00000800] ( CPF_Edit )
	unsigned long                                      bClientSideOnly : 1;                              		// 0x0188 (0x0004) [0x0000000000000001] [0x00001000] ( CPF_Edit )
	unsigned long                                      bSkipUpdateIfNotVisible : 1;                      		// 0x0188 (0x0004) [0x0000000000000001] [0x00002000] ( CPF_Edit )
	unsigned long                                      bIsSkippable : 1;                                 		// 0x0188 (0x0004) [0x0000000000000001] [0x00004000] ( CPF_Edit )
	unsigned long                                      bShouldShowGore : 1;                              		// 0x0188 (0x0004) [0x0000000000002000] [0x00008000] ( CPF_Transient )
	float                                              PlayRate;                                         		// 0x018C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Position;                                         		// 0x0190 (0x0004) [0x0000000000000000]              
	float                                              ForceStartPosition;                               		// 0x0194 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class ACoverLink* >                        LinkedCover;                                      		// 0x0198 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class UInterpData*                                 InterpData;                                       		// 0x01A4 (0x0004) [0x0000000000000008]              ( CPF_ExportObject )
	TArray< class UInterpGroupInst* >                  GroupInst;                                        		// 0x01A8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class UClass*                                      ReplicatedActorClass;                             		// 0x01B4 (0x0004) [0x0000000000000002]              ( CPF_Const )
	class AMatineeActor*                               ReplicatedActor;                                  		// 0x01B8 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                PreferredSplitScreenNum;                          		// 0x01BC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FCameraCutInfo >                    CameraCuts;                                       		// 0x01C0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              TerminationTime;                                  		// 0x01CC (0x0004) [0x0000000000000000]              
	struct FRenderingPerformanceOverrides              RenderingOverrides;                               		// 0x01D0 (0x0004) [0x0000000000044001]              ( CPF_Edit | CPF_Config | CPF_GlobalConfig )
public:
};

// Class Engine.SeqAct_LevelStreamingBase
// 0x0004 (0x0114 - 0x0110)
class USeqAct_LevelStreamingBase : public USeqAct_Latent
{
public:
	unsigned long                                      bMakeVisibleAfterLoad : 1;                        		// 0x0110 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bShouldBlockOnLoad : 1;                           		// 0x0110 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
public:
};

// Class Engine.SeqAct_LevelStreaming
// 0x0010 (0x0124 - 0x0114)
class USeqAct_LevelStreaming : public USeqAct_LevelStreamingBase
{
public:
	class ULevelStreaming*                             Level;                                            		// 0x0114 (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FName                                       LevelName;                                        		// 0x0118 (0x0008) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned long                                      bStatusIsOk : 1;                                  		// 0x0120 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class Engine.SeqAct_MultiLevelStreaming
// 0x0010 (0x0124 - 0x0114)
class USeqAct_MultiLevelStreaming : public USeqAct_LevelStreamingBase
{
public:
	TArray< struct FLevelStreamingNameCombo >          Levels;                                           		// 0x0114 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      bUnloadAllOtherLevels : 1;                        		// 0x0120 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bStatusIsOk : 1;                                  		// 0x0120 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
public:
};

// Class Engine.SeqAct_LevelVisibility
// 0x0010 (0x0120 - 0x0110)
class USeqAct_LevelVisibility : public USeqAct_Latent
{
public:
	class ULevelStreaming*                             Level;                                            		// 0x0110 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       LevelName;                                        		// 0x0114 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bStatusIsOk : 1;                                  		// 0x011C (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class Engine.SeqAct_PlaySound
// 0x0028 (0x0138 - 0x0110)
class USeqAct_PlaySound : public USeqAct_Latent
{
public:
	class USoundCue*                                   PlaySound;                                        		// 0x0110 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ExtraDelay;                                       		// 0x0114 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bDelayReached : 1;                                		// 0x0118 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bSuppressSubtitles : 1;                           		// 0x0118 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bStopped : 1;                                     		// 0x0118 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	float                                              SoundDuration;                                    		// 0x011C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              FadeInTime;                                       		// 0x0120 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FadeOutTime;                                      		// 0x0124 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              VolumeMultiplier;                                 		// 0x0128 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              PitchMultiplier;                                  		// 0x012C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BeforeEndTime;                                    		// 0x0130 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OffsetTime;                                       		// 0x0134 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqAct_PrepareMapChange
// 0x0018 (0x0128 - 0x0110)
class USeqAct_PrepareMapChange : public USeqAct_Latent
{
public:
	struct FName                                       MainLevelName;                                    		// 0x0110 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FName >                             InitiallyLoadedSecondaryLevelNames;               		// 0x0118 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      bIsHighPriority : 1;                              		// 0x0124 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bStatusIsOk : 1;                                  		// 0x0124 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
public:
};

// Class Engine.SeqAct_SetDOFParams
// 0x0058 (0x0168 - 0x0110)
class USeqAct_SetDOFParams : public USeqAct_Latent
{
public:
	float                                              FalloffExponent;                                  		// 0x0110 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BlurKernelSize;                                   		// 0x0114 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxNearBlurAmount;                                		// 0x0118 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MinBlurAmount;                                    		// 0x011C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxFarBlurAmount;                                 		// 0x0120 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FocusInnerRadius;                                 		// 0x0124 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FocusDistance;                                    		// 0x0128 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     FocusPosition;                                    		// 0x012C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              InterpolateSeconds;                               		// 0x0138 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              InterpolateElapsed;                               		// 0x013C (0x0004) [0x0000000000000000]              
	float                                              OldFalloffExponent;                               		// 0x0140 (0x0004) [0x0000000000000000]              
	float                                              OldBlurKernelSize;                                		// 0x0144 (0x0004) [0x0000000000000000]              
	float                                              OldMaxNearBlurAmount;                             		// 0x0148 (0x0004) [0x0000000000000000]              
	float                                              OldMinBlurAmount;                                 		// 0x014C (0x0004) [0x0000000000000000]              
	float                                              OldMaxFarBlurAmount;                              		// 0x0150 (0x0004) [0x0000000000000000]              
	float                                              OldFocusInnerRadius;                              		// 0x0154 (0x0004) [0x0000000000000000]              
	float                                              OldFocusDistance;                                 		// 0x0158 (0x0004) [0x0000000000000000]              
	struct FVector                                     OldFocusPosition;                                 		// 0x015C (0x000C) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_SetMotionBlurParams
// 0x0010 (0x0120 - 0x0110)
class USeqAct_SetMotionBlurParams : public USeqAct_Latent
{
public:
	float                                              MotionBlurAmount;                                 		// 0x0110 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              InterpolateSeconds;                               		// 0x0114 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              InterpolateElapsed;                               		// 0x0118 (0x0004) [0x0000000000000000]              
	float                                              OldMotionBlurAmount;                              		// 0x011C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_StreamInTextures
// 0x0034 (0x0144 - 0x0110)
class USeqAct_StreamInTextures : public USeqAct_Latent
{
public:
	unsigned long                                      bLocationBased : 1;                               		// 0x0110 (0x0004) [0x0000000020000000] [0x00000001] ( CPF_Deprecated )
	unsigned long                                      bStreamingActive : 1;                             		// 0x0110 (0x0004) [0x0000000000000002] [0x00000002] ( CPF_Const )
	unsigned long                                      bHasTriggeredAllLoaded : 1;                       		// 0x0110 (0x0004) [0x0000000000000002] [0x00000004] ( CPF_Const )
	float                                              Seconds;                                          		// 0x0114 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              StreamingDistanceMultiplier;                      		// 0x0118 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                NumWantingResourcesID;                            		// 0x011C (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              StopTimestamp;                                    		// 0x0120 (0x0004) [0x0000000000000002]              ( CPF_Const )
	TArray< class UObject* >                           LocationActors;                                   		// 0x0124 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class UMaterialInterface* >                ForceMaterials;                                   		// 0x0130 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FTextureGroupContainer                      CinematicTextureGroups;                           		// 0x013C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	int                                                SelectedCinematicTextureGroups;                   		// 0x0140 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.SeqAct_WaitForLevelsVisible
// 0x0010 (0x0120 - 0x0110)
class USeqAct_WaitForLevelsVisible : public USeqAct_Latent
{
public:
	TArray< struct FName >                             LevelNames;                                       		// 0x0110 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      bShouldBlockOnLoad : 1;                           		// 0x011C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.SeqAct_Log
// 0x0020 (0x011C - 0x00FC)
class USeqAct_Log : public USequenceAction
{
public:
	unsigned long                                      bOutputToScreen : 1;                              		// 0x00FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bIncludeObjComment : 1;                           		// 0x00FC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	float                                              TargetDuration;                                   		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     TargetOffset;                                     		// 0x0104 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     LogMessage;                                       		// 0x0110 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.SeqAct_ModifyCover
// 0x0014 (0x0110 - 0x00FC)
class USeqAct_ModifyCover : public USequenceAction
{
public:
	TArray< int >                                      Slots;                                            		// 0x00FC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned char                                      ManualCoverType;                                  		// 0x0108 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bManualAdjustPlayersOnly : 1;                     		// 0x010C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.SeqAct_ModifyHealth
// 0x0018 (0x0114 - 0x00FC)
class USeqAct_ModifyHealth : public USequenceAction
{
public:
	class UClass*                                      DamageType;                                       		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Momentum;                                         		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Amount;                                           		// 0x0104 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Radius;                                           		// 0x0108 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bHeal : 1;                                        		// 0x010C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bRadial : 1;                                      		// 0x010C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bFalloff : 1;                                     		// 0x010C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	class AActor*                                      Instigator;                                       		// 0x0110 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_ParticleEventGenerator
// 0x0048 (0x0144 - 0x00FC)
class USeqAct_ParticleEventGenerator : public USequenceAction
{
public:
	unsigned long                                      bEnabled : 1;                                     		// 0x00FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bUseEmitterLocation : 1;                          		// 0x00FC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	class AActor*                                      Instigator;                                       		// 0x0100 (0x0004) [0x0000000000000000]              
	TArray< struct FString >                           EventNames;                                       		// 0x0104 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              EventTime;                                        		// 0x0110 (0x0004) [0x0000000000000000]              
	struct FVector                                     EventLocation;                                    		// 0x0114 (0x000C) [0x0000000000000000]              
	struct FVector                                     EventDirection;                                   		// 0x0120 (0x000C) [0x0000000000000000]              
	struct FVector                                     EventVelocity;                                    		// 0x012C (0x000C) [0x0000000000000000]              
	struct FVector                                     EventNormal;                                      		// 0x0138 (0x000C) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_PlayCameraAnim
// 0x0020 (0x011C - 0x00FC)
class USeqAct_PlayCameraAnim : public USequenceAction
{
public:
	class UCameraAnim*                                 CameraAnim;                                       		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bLoop : 1;                                        		// 0x0100 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bRandomStartTime : 1;                             		// 0x0100 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	float                                              BlendInTime;                                      		// 0x0104 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BlendOutTime;                                     		// 0x0108 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Rate;                                             		// 0x010C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              IntensityScale;                                   		// 0x0110 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      PlaySpace;                                        		// 0x0114 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	class AActor*                                      UserDefinedSpaceActor;                            		// 0x0118 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqAct_PlayFaceFXAnim
// 0x0020 (0x011C - 0x00FC)
class USeqAct_PlayFaceFXAnim : public USequenceAction
{
public:
	class UFaceFXAnimSet*                              FaceFXAnimSetRef;                                 		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     FaceFXGroupName;                                  		// 0x0100 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     FaceFXAnimName;                                   		// 0x010C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class USoundCue*                                   SoundCueToPlay;                                   		// 0x0118 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqAct_PlayMusicTrack
// 0x0024 (0x0120 - 0x00FC)
class USeqAct_PlayMusicTrack : public USequenceAction
{
public:
	struct FMusicTrackStruct                           MusicTrack;                                       		// 0x00FC (0x0024) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqAct_Possess
// 0x0008 (0x0104 - 0x00FC)
class USeqAct_Possess : public USequenceAction
{
public:
	class APawn*                                       PawnToPossess;                                    		// 0x00FC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bKillOldPawn : 1;                                 		// 0x0100 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bTryToLeaveVehicle : 1;                           		// 0x0100 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
public:
};

// Class Engine.SeqAct_RangeSwitch
// 0x000C (0x0108 - 0x00FC)
class USeqAct_RangeSwitch : public USequenceAction
{
public:
	TArray< struct FSwitchRange >                      Ranges;                                           		// 0x00FC (0x000C) [0x0000000004400001]              ( CPF_Edit | CPF_NeedCtorLink | CPF_EditInline )
public:
};

// Class Engine.SeqAct_SetApexClothingParam
// 0x0004 (0x0100 - 0x00FC)
class USeqAct_SetApexClothingParam : public USequenceAction
{
public:
	unsigned long                                      bEnableApexClothingSimulation : 1;                		// 0x00FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.SeqAct_SetBlockRigidBody
// 0x0000 (0x00FC - 0x00FC)
class USeqAct_SetBlockRigidBody : public USequenceAction
{
public:
public:
};

// Class Engine.SeqAct_SetCameraTarget
// 0x0014 (0x0110 - 0x00FC)
class USeqAct_SetCameraTarget : public USequenceAction
{
public:
	class AActor*                                      CameraTarget;                                     		// 0x00FC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FViewTargetTransitionParams                 TransitionParams;                                 		// 0x0100 (0x0010) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
public:
};

// Class Engine.SeqAct_SetMaterial
// 0x0008 (0x0104 - 0x00FC)
class USeqAct_SetMaterial : public USequenceAction
{
public:
	class UMaterialInterface*                          NewMaterial;                                      		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                MaterialIndex;                                    		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqAct_SetMatInstScalarParam
// 0x0010 (0x010C - 0x00FC)
class USeqAct_SetMatInstScalarParam : public USequenceAction
{
public:
	class UMaterialInstanceConstant*                   MatInst;                                          		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       ParamName;                                        		// 0x0100 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	float                                              ScalarValue;                                      		// 0x0108 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqAct_SetMesh
// 0x0010 (0x010C - 0x00FC)
class USeqAct_SetMesh : public USequenceAction
{
public:
	class USkeletalMesh*                               NewSkeletalMesh;                                  		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UStaticMesh*                                 NewStaticMesh;                                    		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      MeshType;                                         		// 0x0104 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bIsAllowedToMove : 1;                             		// 0x0108 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bAllowDecalsToReattach : 1;                       		// 0x0108 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
public:
};

// Class Engine.SeqAct_SetPhysics
// 0x0001 (0x00FD - 0x00FC)
class USeqAct_SetPhysics : public USequenceAction
{
public:
	unsigned char                                      newPhysics;                                       		// 0x00FC (0x0001) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqAct_SetRigidBodyIgnoreVehicles
// 0x0000 (0x00FC - 0x00FC)
class USeqAct_SetRigidBodyIgnoreVehicles : public USequenceAction
{
public:
public:
};

// Class Engine.SeqAct_SetSequenceVariable
// 0x0000 (0x00FC - 0x00FC)
class USeqAct_SetSequenceVariable : public USequenceAction
{
public:
public:
};

// Class Engine.SeqAct_AccessObjectList
// 0x0008 (0x0104 - 0x00FC)
class USeqAct_AccessObjectList : public USeqAct_SetSequenceVariable
{
public:
	class UObject*                                     OutputObject;                                     		// 0x00FC (0x0004) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
	int                                                ObjectIndex;                                      		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqAct_AddFloat
// 0x0010 (0x010C - 0x00FC)
class USeqAct_AddFloat : public USeqAct_SetSequenceVariable
{
public:
	float                                              ValueA;                                           		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ValueB;                                           		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FloatResult;                                      		// 0x0104 (0x0004) [0x0000000000000000]              
	int                                                IntResult;                                        		// 0x0108 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_AddInt
// 0x0010 (0x010C - 0x00FC)
class USeqAct_AddInt : public USeqAct_SetSequenceVariable
{
public:
	int                                                ValueA;                                           		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                ValueB;                                           		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FloatResult;                                      		// 0x0104 (0x0004) [0x0000000000000000]              
	int                                                IntResult;                                        		// 0x0108 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_CastToFloat
// 0x0008 (0x0104 - 0x00FC)
class USeqAct_CastToFloat : public USeqAct_SetSequenceVariable
{
public:
	int                                                Value;                                            		// 0x00FC (0x0004) [0x0000000000000000]              
	float                                              FloatResult;                                      		// 0x0100 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_CastToInt
// 0x000C (0x0108 - 0x00FC)
class USeqAct_CastToInt : public USeqAct_SetSequenceVariable
{
public:
	unsigned long                                      bTruncate : 1;                                    		// 0x00FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              Value;                                            		// 0x0100 (0x0004) [0x0000000000000000]              
	int                                                IntResult;                                        		// 0x0104 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_DivideFloat
// 0x0010 (0x010C - 0x00FC)
class USeqAct_DivideFloat : public USeqAct_SetSequenceVariable
{
public:
	float                                              ValueA;                                           		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ValueB;                                           		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FloatResult;                                      		// 0x0104 (0x0004) [0x0000000000000000]              
	int                                                IntResult;                                        		// 0x0108 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_DivideInt
// 0x0010 (0x010C - 0x00FC)
class USeqAct_DivideInt : public USeqAct_SetSequenceVariable
{
public:
	int                                                ValueA;                                           		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                ValueB;                                           		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FloatResult;                                      		// 0x0104 (0x0004) [0x0000000000000000]              
	int                                                IntResult;                                        		// 0x0108 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_ModifyObjectList
// 0x0004 (0x0100 - 0x00FC)
class USeqAct_ModifyObjectList : public USeqAct_SetSequenceVariable
{
public:
	int                                                ListEntriesCount;                                 		// 0x00FC (0x0004) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
public:
};

// Class Engine.SeqAct_MultiplyFloat
// 0x0010 (0x010C - 0x00FC)
class USeqAct_MultiplyFloat : public USeqAct_SetSequenceVariable
{
public:
	float                                              ValueA;                                           		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ValueB;                                           		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FloatResult;                                      		// 0x0104 (0x0004) [0x0000000000000000]              
	int                                                IntResult;                                        		// 0x0108 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_MultiplyInt
// 0x0010 (0x010C - 0x00FC)
class USeqAct_MultiplyInt : public USeqAct_SetSequenceVariable
{
public:
	int                                                ValueA;                                           		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                ValueB;                                           		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FloatResult;                                      		// 0x0104 (0x0004) [0x0000000000000000]              
	int                                                IntResult;                                        		// 0x0108 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_SetBool
// 0x0004 (0x0100 - 0x00FC)
class USeqAct_SetBool : public USeqAct_SetSequenceVariable
{
public:
	unsigned long                                      DefaultValue : 1;                                 		// 0x00FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.SeqAct_SetFloat
// 0x0010 (0x010C - 0x00FC)
class USeqAct_SetFloat : public USeqAct_SetSequenceVariable
{
public:
	float                                              Target;                                           		// 0x00FC (0x0004) [0x0000000000000000]              
	TArray< float >                                    Value;                                            		// 0x0100 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqAct_SetInt
// 0x0010 (0x010C - 0x00FC)
class USeqAct_SetInt : public USeqAct_SetSequenceVariable
{
public:
	int                                                Target;                                           		// 0x00FC (0x0004) [0x0000000000000000]              
	TArray< int >                                      Value;                                            		// 0x0100 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqAct_SetLocation
// 0x0020 (0x011C - 0x00FC)
class USeqAct_SetLocation : public USeqAct_SetSequenceVariable
{
public:
	unsigned long                                      bSetLocation : 1;                                 		// 0x00FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bSetRotation : 1;                                 		// 0x00FC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	struct FVector                                     LocationValue;                                    		// 0x0100 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FRotator                                    RotationValue;                                    		// 0x010C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	class UObject*                                     Target;                                           		// 0x0118 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_SetObject
// 0x0008 (0x0104 - 0x00FC)
class USeqAct_SetObject : public USeqAct_SetSequenceVariable
{
public:
	class UObject*                                     DefaultValue;                                     		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UObject*                                     Value;                                            		// 0x0100 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_SetString
// 0x0018 (0x0114 - 0x00FC)
class USeqAct_SetString : public USeqAct_SetSequenceVariable
{
public:
	struct FString                                     Target;                                           		// 0x00FC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     Value;                                            		// 0x0108 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqAct_SubtractFloat
// 0x0010 (0x010C - 0x00FC)
class USeqAct_SubtractFloat : public USeqAct_SetSequenceVariable
{
public:
	float                                              ValueA;                                           		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ValueB;                                           		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FloatResult;                                      		// 0x0104 (0x0004) [0x0000000000000000]              
	int                                                IntResult;                                        		// 0x0108 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_SubtractInt
// 0x0010 (0x010C - 0x00FC)
class USeqAct_SubtractInt : public USeqAct_SetSequenceVariable
{
public:
	int                                                ValueA;                                           		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                ValueB;                                           		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FloatResult;                                      		// 0x0104 (0x0004) [0x0000000000000000]              
	int                                                IntResult;                                        		// 0x0108 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_SetVectorComponents
// 0x0018 (0x0114 - 0x00FC)
class USeqAct_SetVectorComponents : public USequenceAction
{
public:
	struct FVector                                     OutVector;                                        		// 0x00FC (0x000C) [0x0000000000000000]              
	float                                              X;                                                		// 0x0108 (0x0004) [0x0000000000000000]              
	float                                              Y;                                                		// 0x010C (0x0004) [0x0000000000000000]              
	float                                              Z;                                                		// 0x0110 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_Switch
// 0x0018 (0x0114 - 0x00FC)
class USeqAct_Switch : public USequenceAction
{
public:
	int                                                LinkCount;                                        		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                IncrementAmount;                                  		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bLooping : 1;                                     		// 0x0104 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bAutoDisableLinks : 1;                            		// 0x0104 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	TArray< int >                                      Indices;                                          		// 0x0108 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqAct_RandomSwitch
// 0x000C (0x0120 - 0x0114)
class USeqAct_RandomSwitch : public USeqAct_Switch
{
public:
	TArray< int >                                      AutoDisabledIndices;                              		// 0x0114 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.SeqAct_Timer
// 0x0008 (0x0104 - 0x00FC)
class USeqAct_Timer : public USequenceAction
{
public:
	float                                              ActivationTime;                                   		// 0x00FC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              Time;                                             		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqAct_Toggle
// 0x0000 (0x00FC - 0x00FC)
class USeqAct_Toggle : public USequenceAction
{
public:
public:
};

// Class Engine.SeqAct_Trace
// 0x003C (0x0138 - 0x00FC)
class USeqAct_Trace : public USequenceAction
{
public:
	unsigned long                                      bTraceActors : 1;                                 		// 0x00FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bTraceWorld : 1;                                  		// 0x00FC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	struct FVector                                     TraceExtent;                                      		// 0x0100 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     StartOffset;                                      		// 0x010C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     EndOffset;                                        		// 0x0118 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	class UObject*                                     HitObject;                                        		// 0x0124 (0x0004) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
	float                                              Distance;                                         		// 0x0128 (0x0004) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
	struct FVector                                     HitLocation;                                      		// 0x012C (0x000C) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
public:
};

// Class Engine.SequenceCondition
// 0x0000 (0x00E4 - 0x00E4)
class USequenceCondition : public USequenceOp
{
public:
public:
};

// Class Engine.SeqCond_CompareBool
// 0x0004 (0x00E8 - 0x00E4)
class USeqCond_CompareBool : public USequenceCondition
{
public:
	unsigned long                                      bResult : 1;                                      		// 0x00E4 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class Engine.SeqCond_CompareFloat
// 0x0008 (0x00EC - 0x00E4)
class USeqCond_CompareFloat : public USequenceCondition
{
public:
	float                                              ValueA;                                           		// 0x00E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ValueB;                                           		// 0x00E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqCond_CompareInt
// 0x0008 (0x00EC - 0x00E4)
class USeqCond_CompareInt : public USequenceCondition
{
public:
	int                                                ValueA;                                           		// 0x00E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                ValueB;                                           		// 0x00E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqCond_CompareObject
// 0x0000 (0x00E4 - 0x00E4)
class USeqCond_CompareObject : public USequenceCondition
{
public:
public:
};

// Class Engine.SeqCond_GetServerType
// 0x0000 (0x00E4 - 0x00E4)
class USeqCond_GetServerType : public USequenceCondition
{
public:
public:
};

// Class Engine.SeqCond_Increment
// 0x000C (0x00F0 - 0x00E4)
class USeqCond_Increment : public USequenceCondition
{
public:
	int                                                IncrementAmount;                                  		// 0x00E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                ValueA;                                           		// 0x00E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                ValueB;                                           		// 0x00EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqCond_IncrementFloat
// 0x000C (0x00F0 - 0x00E4)
class USeqCond_IncrementFloat : public USequenceCondition
{
public:
	float                                              IncrementAmount;                                  		// 0x00E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ValueA;                                           		// 0x00E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ValueB;                                           		// 0x00EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqCond_IsAlive
// 0x0000 (0x00E4 - 0x00E4)
class USeqCond_IsAlive : public USequenceCondition
{
public:
public:
};

// Class Engine.SeqCond_IsBenchmarking
// 0x0000 (0x00E4 - 0x00E4)
class USeqCond_IsBenchmarking : public USequenceCondition
{
public:
public:
};

// Class Engine.SeqCond_IsConsole
// 0x0000 (0x00E4 - 0x00E4)
class USeqCond_IsConsole : public USequenceCondition
{
public:
public:
};

// Class Engine.SeqCond_IsInCombat
// 0x0000 (0x00E4 - 0x00E4)
class USeqCond_IsInCombat : public USequenceCondition
{
public:
public:
};

// Class Engine.SeqCond_IsLoggedIn
// 0x0004 (0x00E8 - 0x00E4)
class USeqCond_IsLoggedIn : public USequenceCondition
{
public:
	int                                                NumNeededLoggedIn;                                		// 0x00E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqCond_IsPIE
// 0x0000 (0x00E4 - 0x00E4)
class USeqCond_IsPIE : public USequenceCondition
{
public:
public:
};

// Class Engine.SeqCond_IsSameTeam
// 0x0000 (0x00E4 - 0x00E4)
class USeqCond_IsSameTeam : public USequenceCondition
{
public:
public:
};

// Class Engine.SeqCond_MatureLanguage
// 0x0000 (0x00E4 - 0x00E4)
class USeqCond_MatureLanguage : public USequenceCondition
{
public:
public:
};

// Class Engine.SeqCond_ShowGore
// 0x0000 (0x00E4 - 0x00E4)
class USeqCond_ShowGore : public USequenceCondition
{
public:
public:
};

// Class Engine.SeqCond_SwitchBase
// 0x0000 (0x00E4 - 0x00E4)
class USeqCond_SwitchBase : public USequenceCondition
{
public:
public:
};

// Class Engine.SeqCond_SwitchClass
// 0x000C (0x00F0 - 0x00E4)
class USeqCond_SwitchClass : public USeqCond_SwitchBase
{
public:
	TArray< struct FSwitchClassInfo >                  ClassArray;                                       		// 0x00E4 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqCond_SwitchObject
// 0x000C (0x00F0 - 0x00E4)
class USeqCond_SwitchObject : public USeqCond_SwitchBase
{
public:
	TArray< struct FSwitchObjectCase >                 SupportedValues;                                  		// 0x00E4 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqCond_SwitchPlatform
// 0x0000 (0x00E4 - 0x00E4)
class USeqCond_SwitchPlatform : public USequenceCondition
{
public:
public:
};

// Class Engine.SequenceEvent
// 0x0030 (0x0114 - 0x00E4)
class USequenceEvent : public USequenceOp
{
public:
	TArray< class USequenceEvent* >                    DuplicateEvts;                                    		// 0x00E4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class AActor*                                      Originator;                                       		// 0x00F0 (0x0004) [0x0000000000000000]              
	class AActor*                                      Instigator;                                       		// 0x00F4 (0x0004) [0x0000000000000000]              
	float                                              ActivationTime;                                   		// 0x00F8 (0x0004) [0x0000000000000000]              
	int                                                TriggerCount;                                     		// 0x00FC (0x0004) [0x0000000000000000]              
	int                                                MaxTriggerCount;                                  		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ReTriggerDelay;                                   		// 0x0104 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bEnabled : 1;                                     		// 0x0108 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bPlayerOnly : 1;                                  		// 0x0108 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bRegistered : 1;                                  		// 0x0108 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bClientSideOnly : 1;                              		// 0x0108 (0x0004) [0x0000000000000003] [0x00000008] ( CPF_Edit | CPF_Const )
	unsigned char                                      Priority;                                         		// 0x010C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	int                                                MaxWidth;                                         		// 0x0110 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqEvent_AISeeEnemy
// 0x0004 (0x0118 - 0x0114)
class USeqEvent_AISeeEnemy : public USequenceEvent
{
public:
	float                                              MaxSightDistance;                                 		// 0x0114 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqEvent_AnalogInput
// 0x0014 (0x0128 - 0x0114)
class USeqEvent_AnalogInput : public USequenceEvent
{
public:
	unsigned long                                      bTrapInput : 1;                                   		// 0x0114 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	int                                                AllowedPlayerIndex;                               		// 0x0118 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FName >                             InputNames;                                       		// 0x011C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqEvent_AnimNotify
// 0x0008 (0x011C - 0x0114)
class USeqEvent_AnimNotify : public USequenceEvent
{
public:
	struct FName                                       NotifyName;                                       		// 0x0114 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqEvent_Console
// 0x0014 (0x0128 - 0x0114)
class USeqEvent_Console : public USequenceEvent
{
public:
	struct FName                                       ConsoleEventName;                                 		// 0x0114 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     EventDesc;                                        		// 0x011C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqEvent_ConstraintBroken
// 0x0000 (0x0114 - 0x0114)
class USeqEvent_ConstraintBroken : public USequenceEvent
{
public:
public:
};

// Class Engine.SeqEvent_Destroyed
// 0x0000 (0x0114 - 0x0114)
class USeqEvent_Destroyed : public USequenceEvent
{
public:
public:
};

// Class Engine.SeqEvent_GetInventory
// 0x0000 (0x0114 - 0x0114)
class USeqEvent_GetInventory : public USequenceEvent
{
public:
public:
};

// Class Engine.SeqEvent_Input
// 0x0014 (0x0128 - 0x0114)
class USeqEvent_Input : public USequenceEvent
{
public:
	unsigned long                                      bTrapInput : 1;                                   		// 0x0114 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	int                                                AllowedPlayerIndex;                               		// 0x0118 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FName >                             InputNames;                                       		// 0x011C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqEvent_LevelBeginning
// 0x0000 (0x0114 - 0x0114)
class USeqEvent_LevelBeginning : public USequenceEvent
{
public:
public:
};

// Class Engine.SeqEvent_LevelLoaded
// 0x0000 (0x0114 - 0x0114)
class USeqEvent_LevelLoaded : public USequenceEvent
{
public:
public:
};

// Class Engine.SeqEvent_LevelStartup
// 0x0000 (0x0114 - 0x0114)
class USeqEvent_LevelStartup : public USequenceEvent
{
public:
public:
};

// Class Engine.SeqEvent_Mover
// 0x0004 (0x0118 - 0x0114)
class USeqEvent_Mover : public USequenceEvent
{
public:
	float                                              StayOpenTime;                                     		// 0x0114 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqEvent_ParticleEvent
// 0x0034 (0x0148 - 0x0114)
class USeqEvent_ParticleEvent : public USequenceEvent
{
public:
	unsigned char                                      EventType;                                        		// 0x0114 (0x0001) [0x0000000000000000]              
	struct FVector                                     EventPosition;                                    		// 0x0118 (0x000C) [0x0000000000000000]              
	float                                              EventEmitterTime;                                 		// 0x0124 (0x0004) [0x0000000000000000]              
	struct FVector                                     EventVelocity;                                    		// 0x0128 (0x000C) [0x0000000000000000]              
	float                                              EventParticleTime;                                		// 0x0134 (0x0004) [0x0000000000000000]              
	struct FVector                                     EventNormal;                                      		// 0x0138 (0x000C) [0x0000000000000000]              
	unsigned long                                      UseRelfectedImpactVector : 1;                     		// 0x0144 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.SeqEvent_ProjectileLanded
// 0x0004 (0x0118 - 0x0114)
class USeqEvent_ProjectileLanded : public USequenceEvent
{
public:
	float                                              MaxDistance;                                      		// 0x0114 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqEvent_RemoteEvent
// 0x000C (0x0120 - 0x0114)
class USeqEvent_RemoteEvent : public USequenceEvent
{
public:
	struct FName                                       EventName;                                        		// 0x0114 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bStatusIsOk : 1;                                  		// 0x011C (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class Engine.SeqEvent_RigidBodyCollision
// 0x0004 (0x0118 - 0x0114)
class USeqEvent_RigidBodyCollision : public USequenceEvent
{
public:
	float                                              MinCollisionVelocity;                             		// 0x0114 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqEvent_SeeDeath
// 0x0000 (0x0114 - 0x0114)
class USeqEvent_SeeDeath : public USequenceEvent
{
public:
public:
};

// Class Engine.SeqEvent_SequenceActivated
// 0x000C (0x0120 - 0x0114)
class USeqEvent_SequenceActivated : public USequenceEvent
{
public:
	struct FString                                     InputLabel;                                       		// 0x0114 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqEvent_TakeDamage
// 0x0028 (0x013C - 0x0114)
class USeqEvent_TakeDamage : public USequenceEvent
{
public:
	float                                              MinDamageAmount;                                  		// 0x0114 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DamageThreshold;                                  		// 0x0118 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class UClass* >                            DamageTypes;                                      		// 0x011C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class UClass* >                            IgnoreDamageTypes;                                		// 0x0128 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              CurrentDamage;                                    		// 0x0134 (0x0004) [0x0000000000000000]              
	unsigned long                                      bResetDamageOnToggle : 1;                         		// 0x0138 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.SeqEvent_Touch
// 0x0028 (0x013C - 0x0114)
class USeqEvent_Touch : public USequenceEvent
{
public:
	TArray< class UClass* >                            ClassProximityTypes;                              		// 0x0114 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class UClass* >                            IgnoredClassProximityTypes;                       		// 0x0120 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      bForceOverlapping : 1;                            		// 0x012C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bUseInstigator : 1;                               		// 0x012C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bAllowDeadPawns : 1;                              		// 0x012C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	TArray< class AActor* >                            TouchedList;                                      		// 0x0130 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.SeqEvent_TouchInput
// 0x0010 (0x0124 - 0x0114)
class USeqEvent_TouchInput : public USequenceEvent
{
public:
	unsigned long                                      bTrapInput : 1;                                   		// 0x0114 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	int                                                AllowedPlayerIndex;                               		// 0x0118 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                AllowedTouchIndex;                                		// 0x011C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                AllowedTouchpadIndex;                             		// 0x0120 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqEvent_Used
// 0x0030 (0x0144 - 0x0114)
class USeqEvent_Used : public USequenceEvent
{
public:
	unsigned long                                      bAimToInteract : 1;                               		// 0x0114 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              InteractDistance;                                 		// 0x0118 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     InteractText;                                     		// 0x011C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class UTexture2D*                                  InteractIcon;                                     		// 0x0128 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class UClass* >                            ClassProximityTypes;                              		// 0x012C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class UClass* >                            IgnoredClassProximityTypes;                       		// 0x0138 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SequenceVariable
// 0x0008 (0x0098 - 0x0090)
class USequenceVariable : public USequenceObject
{
public:
	struct FName                                       VarName;                                          		// 0x0090 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.InterpData
// 0x0050 (0x00E8 - 0x0098)
class UInterpData : public USequenceVariable
{
public:
	float                                              InterpLength;                                     		// 0x0098 (0x0004) [0x0000000000000000]              
	float                                              PathBuildTime;                                    		// 0x009C (0x0004) [0x0000000000000000]              
	TArray< class UInterpGroup* >                      InterpGroups;                                     		// 0x00A0 (0x000C) [0x0000000000400008]              ( CPF_ExportObject | CPF_NeedCtorLink )
	class UInterpCurveEdSetup*                         CurveEdSetup;                                     		// 0x00AC (0x0004) [0x0000000000000008]              ( CPF_ExportObject )
	TArray< class UInterpFilter* >                     InterpFilters;                                    		// 0x00B0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class UInterpFilter*                               SelectedFilter;                                   		// 0x00BC (0x0004) [0x0000000000000000]              
	TArray< class UInterpFilter* >                     DefaultFilters;                                   		// 0x00C0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              EdSectionStart;                                   		// 0x00CC (0x0004) [0x0000000000000000]              
	float                                              EdSectionEnd;                                     		// 0x00D0 (0x0004) [0x0000000000000000]              
	unsigned long                                      bShouldBakeAndPrune : 1;                          		// 0x00D4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	TArray< struct FAnimSetBakeAndPruneStatus >        BakeAndPruneStatus;                               		// 0x00D8 (0x000C) [0x0000000000400041]              ( CPF_Edit | CPF_EditConstArray | CPF_NeedCtorLink )
	class UInterpGroupDirector*                        CachedDirectorGroup;                              		// 0x00E4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.SeqVar_Bool
// 0x0004 (0x009C - 0x0098)
class USeqVar_Bool : public USequenceVariable
{
public:
	int                                                bValue;                                           		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqVar_External
// 0x0010 (0x00A8 - 0x0098)
class USeqVar_External : public USequenceVariable
{
public:
	class UClass*                                      ExpectedType;                                     		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     VariableLabel;                                    		// 0x009C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqVar_Float
// 0x0004 (0x009C - 0x0098)
class USeqVar_Float : public USequenceVariable
{
public:
	float                                              FloatValue;                                       		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqVar_RandomFloat
// 0x0008 (0x00A4 - 0x009C)
class USeqVar_RandomFloat : public USeqVar_Float
{
public:
	float                                              Min;                                              		// 0x009C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Max;                                              		// 0x00A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqVar_Int
// 0x0004 (0x009C - 0x0098)
class USeqVar_Int : public USequenceVariable
{
public:
	int                                                IntValue;                                         		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqVar_RandomInt
// 0x0008 (0x00A4 - 0x009C)
class USeqVar_RandomInt : public USeqVar_Int
{
public:
	int                                                Min;                                              		// 0x009C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                Max;                                              		// 0x00A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqVar_Named
// 0x0010 (0x00A8 - 0x0098)
class USeqVar_Named : public USequenceVariable
{
public:
	class UClass*                                      ExpectedType;                                     		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       FindVarName;                                      		// 0x009C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bStatusIsOk : 1;                                  		// 0x00A4 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class Engine.SeqVar_Object
// 0x001C (0x00B4 - 0x0098)
class USeqVar_Object : public USequenceVariable
{
public:
	class UObject*                                     ObjValue;                                         		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     ActorLocation;                                    		// 0x009C (0x000C) [0x0000000000002000]              ( CPF_Transient )
	TArray< class UClass* >                            SupportedClasses;                                 		// 0x00A8 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqVar_Character
// 0x0004 (0x00B8 - 0x00B4)
class USeqVar_Character : public USeqVar_Object
{
public:
	class UClass*                                      PawnClass;                                        		// 0x00B4 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqVar_Group
// 0x0018 (0x00CC - 0x00B4)
class USeqVar_Group : public USeqVar_Object
{
public:
	struct FName                                       GroupName;                                        		// 0x00B4 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bCachedList : 1;                                  		// 0x00BC (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	TArray< class UObject* >                           Actors;                                           		// 0x00C0 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqVar_ObjectList
// 0x000C (0x00C0 - 0x00B4)
class USeqVar_ObjectList : public USeqVar_Object
{
public:
	TArray< class UObject* >                           ObjList;                                          		// 0x00B4 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqVar_ObjectVolume
// 0x0020 (0x00D4 - 0x00B4)
class USeqVar_ObjectVolume : public USeqVar_Object
{
public:
	float                                              LastUpdateTime;                                   		// 0x00B4 (0x0004) [0x0000000000000000]              
	TArray< class UObject* >                           ContainedObjects;                                 		// 0x00B8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< class UClass* >                            ExcludeClassList;                                 		// 0x00C4 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      bCollidingOnly : 1;                               		// 0x00D0 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.SeqVar_Player
// 0x0014 (0x00C8 - 0x00B4)
class USeqVar_Player : public USeqVar_Object
{
public:
	TArray< class UObject* >                           Players;                                          		// 0x00B4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned long                                      bAllPlayers : 1;                                  		// 0x00C0 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	int                                                PlayerIdx;                                        		// 0x00C4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqVar_String
// 0x000C (0x00A4 - 0x0098)
class USeqVar_String : public USequenceVariable
{
public:
	struct FString                                     StrValue;                                         		// 0x0098 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqVar_Vector
// 0x000C (0x00A4 - 0x0098)
class USeqVar_Vector : public USequenceVariable
{
public:
	struct FVector                                     VectValue;                                        		// 0x0098 (0x000C) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.AmbientSound
// 0x0008 (0x01E4 - 0x01DC)
class AAmbientSound : public AKeypoint
{
public:
	unsigned long                                      bAutoPlay : 1;                                    		// 0x01DC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bIsPlaying : 1;                                   		// 0x01DC (0x0004) [0x0000000000000000] [0x00000002] 
	class UAudioComponent*                             AudioComponent;                                   		// 0x01E0 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.AmbientSoundMovable
// 0x0020 (0x0204 - 0x01E4)
class AAmbientSoundMovable : public AAmbientSound
{
public:
	unsigned long                                      bCheckOcclusion : 1;                              		// 0x01E4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bOcclusionWithLowPassFilter : 1;                  		// 0x01E4 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	float                                              OcclusionLPFHighFrequencyGain;                    		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OcclusionFadeTime;                                		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OcclusionCheckInterval;                           		// 0x01F0 (0x0004) [0x0000000000004000]              ( CPF_Config )
	float                                              OcclusionMultiplier;                              		// 0x01F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class AKeypoint* >                         OcclusionTargets;                                 		// 0x01F8 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.AmbientSoundSimple
// 0x000C (0x01F0 - 0x01E4)
class AAmbientSoundSimple : public AAmbientSound
{
public:
	class USoundNodeAmbient*                           AmbientProperties;                                		// 0x01E4 (0x0004) [0x0000000004020001]              ( CPF_Edit | CPF_EditConst | CPF_EditInline )
	class USoundCue*                                   SoundCueInstance;                                 		// 0x01E8 (0x0004) [0x000000000440000A]              ( CPF_Const | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
	class USoundNodeAmbient*                           SoundNodeInstance;                                		// 0x01EC (0x0004) [0x000000000440000A]              ( CPF_Const | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
public:
};

// Class Engine.AmbientSoundNonLoop
// 0x0000 (0x01F0 - 0x01F0)
class AAmbientSoundNonLoop : public AAmbientSoundSimple
{
public:
public:
};

// Class Engine.AmbientSoundSimpleToggleable
// 0x0014 (0x0204 - 0x01F0)
class AAmbientSoundSimpleToggleable : public AAmbientSoundSimple
{
public:
	unsigned long                                      bCurrentlyPlaying : 1;                            		// 0x01F0 (0x0004) [0x0000000000000020] [0x00000001] ( CPF_Net )
	unsigned long                                      bFadeOnToggle : 1;                                		// 0x01F0 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bIgnoreAutoPlay : 1;                              		// 0x01F0 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	float                                              FadeInDuration;                                   		// 0x01F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FadeInVolumeLevel;                                		// 0x01F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FadeOutDuration;                                  		// 0x01FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FadeOutVolumeLevel;                               		// 0x0200 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.AmbientSoundNonLoopingToggleable
// 0x0000 (0x0204 - 0x0204)
class AAmbientSoundNonLoopingToggleable : public AAmbientSoundSimpleToggleable
{
public:
public:
};

// Class Engine.AmbientSoundSplineBase
// 0x0010 (0x01F4 - 0x01E4)
class AAmbientSoundSplineBase : public AAmbientSound
{
public:
	class USplineComponent*                            SplineComponent;                                  		// 0x01E4 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FVector                                     TestPoint;                                        		// 0x01E8 (0x000C) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.AmbientSoundSimpleSpline
// 0x000C (0x0200 - 0x01F4)
class AAmbientSoundSimpleSpline : public AAmbientSoundSplineBase
{
public:
	class USoundNodeAmbientSpline*                     AmbientProperties;                                		// 0x01F4 (0x0004) [0x0000000004020001]              ( CPF_Edit | CPF_EditConst | CPF_EditInline )
	class USoundCue*                                   SoundCueInstance;                                 		// 0x01F8 (0x0004) [0x000000000440000A]              ( CPF_Const | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
	class USoundNodeAmbientSpline*                     SoundNodeInstance;                                		// 0x01FC (0x0004) [0x000000000440000A]              ( CPF_Const | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
public:
};

// Class Engine.DistributionFloatSoundParameter
// 0x0003 (0x0070 - 0x006D)
class UDistributionFloatSoundParameter : public UDistributionFloatParameterBase
{
public:
public:
};

// Class Engine.SoundNode
// 0x0018 (0x0054 - 0x003C)
class USoundNode : public UObject
{
public:
	unsigned char                                      DetailMode;                                       		// 0x003C (0x0001) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	int                                                NodeUpdateHint;                                   		// 0x0040 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< class USoundNode* >                        ChildNodes;                                       		// 0x0044 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              OcclusionCheckInterval;                           		// 0x0050 (0x0004) [0x0000000000004000]              ( CPF_Config )
public:
};

// Class Engine.SoundNodeAmbient
// 0x0050 (0x00A4 - 0x0054)
class USoundNodeAmbient : public USoundNode
{
public:
	unsigned long                                      bAttenuate : 1;                                   		// 0x0054 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bSpatialize : 1;                                  		// 0x0054 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bAttenuateWithLPF : 1;                            		// 0x0054 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bCheckOcclusion : 1;                              		// 0x0054 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bOcclusionWithLowPassFilter : 1;                  		// 0x0054 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	float                                              dBAttenuationAtMax;                               		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      DistanceModel;                                    		// 0x005C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              RadiusMin;                                        		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RadiusMax;                                        		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LPFRadiusMin;                                     		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LPFRadiusMax;                                     		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              PitchMin;                                         		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              PitchMax;                                         		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              VolumeMin;                                        		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              VolumeMax;                                        		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FAmbientSoundSlot >                 SoundSlots;                                       		// 0x0080 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              OcclusionLPFHighFrequencyGain;                    		// 0x008C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OcclusionFadeTime;                                		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class AKeypoint* >                         OcclusionTargets;                                 		// 0x0094 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              OcclusionMultiplier;                              		// 0x00A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SoundNodeAmbientNonLoop
// 0x0024 (0x00C8 - 0x00A4)
class USoundNodeAmbientNonLoop : public USoundNodeAmbient
{
public:
	float                                              DelayMin;                                         		// 0x00A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DelayMax;                                         		// 0x00A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionFloat                       DelayTime;                                        		// 0x00AC (0x001C) [0x0000000020480000]              ( CPF_Component | CPF_NeedCtorLink | CPF_Deprecated )
public:
};

// Class Engine.SoundNodeAmbientNonLoopToggle
// 0x0000 (0x00C8 - 0x00C8)
class USoundNodeAmbientNonLoopToggle : public USoundNodeAmbientNonLoop
{
public:
public:
};

// Class Engine.SoundNodeAttenuation
// 0x001C (0x0070 - 0x0054)
class USoundNodeAttenuation : public USoundNode
{
public:
	unsigned long                                      bAttenuate : 1;                                   		// 0x0054 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bSpatialize : 1;                                  		// 0x0054 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bAttenuateWithLPF : 1;                            		// 0x0054 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	float                                              dBAttenuationAtMax;                               		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      DistanceAlgorithm;                                		// 0x005C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      DistanceType;                                     		// 0x005D (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              RadiusMin;                                        		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RadiusMax;                                        		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LPFRadiusMin;                                     		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LPFRadiusMax;                                     		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SoundNodeAttenuationAndGain
// 0x002C (0x0080 - 0x0054)
class USoundNodeAttenuationAndGain : public USoundNode
{
public:
	unsigned long                                      bAttenuate : 1;                                   		// 0x0054 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bSpatialize : 1;                                  		// 0x0054 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bAttenuateWithLPF : 1;                            		// 0x0054 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	float                                              dBAttenuationAtMax;                               		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      GainDistanceAlgorithm;                            		// 0x005C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      AttenuateDistanceAlgorithm;                       		// 0x005D (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      DistanceType;                                     		// 0x005E (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              MinimalVolume;                                    		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RadiusMin;                                        		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RadiusPeak;                                       		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RadiusMax;                                        		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LPFMinimal;                                       		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LPFRadiusMin;                                     		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LPFRadiusPeak;                                    		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LPFRadiusMax;                                     		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SoundNodeAmbientSpline
// 0x001C (0x009C - 0x0080)
class USoundNodeAmbientSpline : public USoundNodeAttenuationAndGain
{
public:
	float                                              PitchMin;                                         		// 0x0080 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              PitchMax;                                         		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              VolumeMin;                                        		// 0x0088 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              VolumeMax;                                        		// 0x008C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FAmbientSoundSlot >                 SoundSlots;                                       		// 0x0090 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SoundNodeConcatenator
// 0x000C (0x0060 - 0x0054)
class USoundNodeConcatenator : public USoundNode
{
public:
	TArray< float >                                    InputVolume;                                      		// 0x0054 (0x000C) [0x0000000000400049]              ( CPF_Edit | CPF_ExportObject | CPF_EditConstArray | CPF_NeedCtorLink )
public:
};

// Class Engine.SoundNodeConcatenatorRadio
// 0x0000 (0x0054 - 0x0054)
class USoundNodeConcatenatorRadio : public USoundNode
{
public:
public:
};

// Class Engine.SoundNodeDelay
// 0x0024 (0x0078 - 0x0054)
class USoundNodeDelay : public USoundNode
{
public:
	float                                              DelayMin;                                         		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DelayMax;                                         		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionFloat                       DelayDuration;                                    		// 0x005C (0x001C) [0x0000000020480000]              ( CPF_Component | CPF_NeedCtorLink | CPF_Deprecated )
public:
};

// Class Engine.SoundNodeDistanceCrossFade
// 0x000C (0x0060 - 0x0054)
class USoundNodeDistanceCrossFade : public USoundNode
{
public:
	TArray< struct FDistanceDatum >                    CrossFadeInput;                                   		// 0x0054 (0x000C) [0x0000000000480049]              ( CPF_Edit | CPF_ExportObject | CPF_EditConstArray | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.SoundNodeEnveloper
// 0x001C (0x0070 - 0x0054)
class USoundNodeEnveloper : public USoundNode
{
public:
	float                                              LoopStart;                                        		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LoopEnd;                                          		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DurationAfterLoop;                                		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                LoopCount;                                        		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bLoopIndefinitely : 1;                            		// 0x0064 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bLoop : 1;                                        		// 0x0064 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	class UDistributionFloatConstantCurve*             VolumeInterpCurve;                                		// 0x0068 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UDistributionFloatConstantCurve*             PitchInterpCurve;                                 		// 0x006C (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.SoundNodeLooping
// 0x0028 (0x007C - 0x0054)
class USoundNodeLooping : public USoundNode
{
public:
	unsigned long                                      bLoopIndefinitely : 1;                            		// 0x0054 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bNotified : 1;                                    		// 0x0054 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	float                                              LoopCountMin;                                     		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LoopCountMax;                                     		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionFloat                       LoopCount;                                        		// 0x0060 (0x001C) [0x0000000020480000]              ( CPF_Component | CPF_NeedCtorLink | CPF_Deprecated )
public:
};

// Class Engine.SoundNodeMature
// 0x0000 (0x0054 - 0x0054)
class USoundNodeMature : public USoundNode
{
public:
public:
};

// Class Engine.SoundNodeMixer
// 0x000C (0x0060 - 0x0054)
class USoundNodeMixer : public USoundNode
{
public:
	TArray< float >                                    InputVolume;                                      		// 0x0054 (0x000C) [0x0000000000400049]              ( CPF_Edit | CPF_ExportObject | CPF_EditConstArray | CPF_NeedCtorLink )
public:
};

// Class Engine.SoundNodeModulator
// 0x0048 (0x009C - 0x0054)
class USoundNodeModulator : public USoundNode
{
public:
	float                                              PitchMin;                                         		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              PitchMax;                                         		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              VolumeMin;                                        		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              VolumeMax;                                        		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionFloat                       PitchModulation;                                  		// 0x0064 (0x001C) [0x0000000020480000]              ( CPF_Component | CPF_NeedCtorLink | CPF_Deprecated )
	struct FRawDistributionFloat                       VolumeModulation;                                 		// 0x0080 (0x001C) [0x0000000020480000]              ( CPF_Component | CPF_NeedCtorLink | CPF_Deprecated )
public:
};

// Class Engine.SoundNodeModulatorContinuous
// 0x0038 (0x008C - 0x0054)
class USoundNodeModulatorContinuous : public USoundNode
{
public:
	struct FRawDistributionFloat                       PitchModulation;                                  		// 0x0054 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FRawDistributionFloat                       VolumeModulation;                                 		// 0x0070 (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
public:
};

// Class Engine.SoundNodeOscillator
// 0x0094 (0x00E8 - 0x0054)
class USoundNodeOscillator : public USoundNode
{
public:
	unsigned long                                      bModulateVolume : 1;                              		// 0x0054 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bModulatePitch : 1;                               		// 0x0054 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	float                                              AmplitudeMin;                                     		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AmplitudeMax;                                     		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FrequencyMin;                                     		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FrequencyMax;                                     		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OffsetMin;                                        		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OffsetMax;                                        		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CenterMin;                                        		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CenterMax;                                        		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionFloat                       Amplitude;                                        		// 0x0078 (0x001C) [0x0000000020480000]              ( CPF_Component | CPF_NeedCtorLink | CPF_Deprecated )
	struct FRawDistributionFloat                       Frequency;                                        		// 0x0094 (0x001C) [0x0000000020480000]              ( CPF_Component | CPF_NeedCtorLink | CPF_Deprecated )
	struct FRawDistributionFloat                       Offset;                                           		// 0x00B0 (0x001C) [0x0000000020480000]              ( CPF_Component | CPF_NeedCtorLink | CPF_Deprecated )
	struct FRawDistributionFloat                       Center;                                           		// 0x00CC (0x001C) [0x0000000020480000]              ( CPF_Component | CPF_NeedCtorLink | CPF_Deprecated )
public:
};

// Class Engine.SoundNodeRandom
// 0x0024 (0x0078 - 0x0054)
class USoundNodeRandom : public USoundNode
{
public:
	TArray< float >                                    Weights;                                          		// 0x0054 (0x000C) [0x0000000000400041]              ( CPF_Edit | CPF_EditConstArray | CPF_NeedCtorLink )
	int                                                PreselectAtLevelLoad;                             		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bRandomizeWithoutReplacement : 1;                 		// 0x0064 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	TArray< unsigned long >                            HasBeenUsed;                                      		// 0x0068 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                NumRandomUsed;                                    		// 0x0074 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.PBSoundNodeRandom
// 0x000C (0x0084 - 0x0078)
class UPBSoundNodeRandom : public USoundNodeRandom
{
public:
	float                                              mfFadeIn;                                         		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              mfFadeOut;                                        		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                mnLastTrack;                                      		// 0x0080 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.SoundNodeWave
// 0x01E0 (0x0234 - 0x0054)
class USoundNodeWave : public USoundNode
{
public:
	int                                                CompressionQuality;                               		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bForceRealTimeDecompression : 1;                  		// 0x0058 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bLoopingSound : 1;                                		// 0x0058 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bForceNativeDecompression : 1;                    		// 0x0058 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bDynamicResource : 1;                             		// 0x0058 (0x0004) [0x0000000000002002] [0x00000008] ( CPF_Const | CPF_Transient )
	unsigned long                                      bUseTTS : 1;                                      		// 0x0058 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bProcedural : 1;                                  		// 0x0058 (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      bMature : 1;                                      		// 0x0058 (0x0004) [0x0000000000008003] [0x00000040] ( CPF_Edit | CPF_Const | CPF_Localized )
	unsigned long                                      bManualWordWrap : 1;                              		// 0x0058 (0x0004) [0x0000000000008003] [0x00000080] ( CPF_Edit | CPF_Const | CPF_Localized )
	unsigned long                                      bSingleLine : 1;                                  		// 0x0058 (0x0004) [0x0000000000008003] [0x00000100] ( CPF_Edit | CPF_Const | CPF_Localized )
	unsigned long                                      bCheckOcclusion : 1;                              		// 0x0058 (0x0004) [0x0000000000000001] [0x00000200] ( CPF_Edit )
	unsigned long                                      bOcclusionWithLowPassFilter : 1;                  		// 0x0058 (0x0004) [0x0000000000000001] [0x00000400] ( CPF_Edit )
	unsigned char                                      TTSSpeaker;                                       		// 0x005C (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      DecompressionType;                                		// 0x005D (0x0001) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FString                                     SpokenText;                                       		// 0x0060 (0x000C) [0x0000000000408003]              ( CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	float                                              Volume;                                           		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Pitch;                                            		// 0x0070 (0x0004) [0x0000000000020003]              ( CPF_Edit | CPF_Const | CPF_EditConst )
	float                                              Duration;                                         		// 0x0074 (0x0004) [0x0000000000020003]              ( CPF_Edit | CPF_Const | CPF_EditConst )
	int                                                NumChannels;                                      		// 0x0078 (0x0004) [0x0000000000020003]              ( CPF_Edit | CPF_Const | CPF_EditConst )
	int                                                SampleRate;                                       		// 0x007C (0x0004) [0x0000000000020003]              ( CPF_Edit | CPF_Const | CPF_EditConst )
	TArray< int >                                      ChannelOffsets;                                   		// 0x0080 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< int >                                      ChannelSizes;                                     		// 0x008C (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	struct FUntypedBulkData_Mirror                     RawData;                                          		// 0x0098 (0x0034) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FPointer                                    VorbisDecompressor;                               		// 0x00CC (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FPointer                                    RawPCMData;                                       		// 0x00D0 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	int                                                RawPCMDataSize;                                   		// 0x00D4 (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FUntypedBulkData_Mirror                     CompressedPCData;                                 		// 0x00D8 (0x0034) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FUntypedBulkData_Mirror                     CompressedXbox360Data;                            		// 0x010C (0x0034) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FUntypedBulkData_Mirror                     CompressedPS3Data;                                		// 0x0140 (0x0034) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FUntypedBulkData_Mirror                     CompressedWiiUData;                               		// 0x0174 (0x0034) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FUntypedBulkData_Mirror                     CompressedIPhoneData;                             		// 0x01A8 (0x0034) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	int                                                ResourceID;                                       		// 0x01DC (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                ResourceSize;                                     		// 0x01E0 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FPointer                                    ResourceData;                                     		// 0x01E4 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< struct FSubtitleCue >                      Subtitles;                                        		// 0x01E8 (0x000C) [0x0000000000408003]              ( CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     Comment;                                          		// 0x01F4 (0x000C) [0x0000000000408003]              ( CPF_Edit | CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	float                                              OcclusionLPFHighFrequencyGain;                    		// 0x0200 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OcclusionFadeTime;                                		// 0x0204 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OcclusionMultiplier;                              		// 0x0208 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              StartOffset;                                      		// 0x020C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FLocalizedSubtitle >                LocalizedSubtitles;                               		// 0x0210 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     SourceFilePath;                                   		// 0x021C (0x000C) [0x0000000000420003]              ( CPF_Edit | CPF_Const | CPF_EditConst | CPF_NeedCtorLink )
	struct FString                                     SourceFileTimestamp;                              		// 0x0228 (0x000C) [0x0000000000420003]              ( CPF_Edit | CPF_Const | CPF_EditConst | CPF_NeedCtorLink )
public:
};

// Class Engine.SoundNodeWaveStreaming
// 0x000C (0x0240 - 0x0234)
class USoundNodeWaveStreaming : public USoundNodeWave
{
public:
	TArray< unsigned char >                            QueuedAudio;                                      		// 0x0234 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.SoundNodeWaveParam
// 0x0008 (0x005C - 0x0054)
class USoundNodeWaveParam : public USoundNode
{
public:
	struct FName                                       WaveParameterName;                                		// 0x0054 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.LandscapeProxy
// 0x00F0 (0x02C8 - 0x01D8)
class ALandscapeProxy : public AInfo
{
public:
	struct FGuid                                       LandscapeGuid;                                    		// 0x01D8 (0x0010) [0x0000000000000002]              ( CPF_Const )
	int                                                MaxLODLevel;                                      		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UPhysicalMaterial*                           DefaultPhysMaterial;                              		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              StreamingDistanceMultiplier;                      		// 0x01F0 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	class UMaterialInterface*                          LandscapeMaterial;                                		// 0x01F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class ULandscapeComponent* >               LandscapeComponents;                              		// 0x01F8 (0x000C) [0x000000000448000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	TArray< class ULandscapeHeightfieldCollisionComponent* > CollisionComponents;                              		// 0x0204 (0x000C) [0x000000000448000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	unsigned char                                      UnknownData00[ 0x3C ];                            		// 0x0210 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.LandscapeProxy.MaterialInstanceConstantMap
	unsigned char                                      UnknownData01[ 0x3C ];                            		// 0x024C (0x003C) UNKNOWN PROPERTY: MapProperty Engine.LandscapeProxy.WeightmapUsageMap
	float                                              StaticLightingResolution;                         		// 0x0288 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class ALandscape*                                  LandscapeActor;                                   		// 0x028C (0x0004) [0x0000000000002001]              ( CPF_Edit | CPF_Transient )
	unsigned long                                      bIsProxy : 1;                                     		// 0x0290 (0x0004) [0x0000000000000002] [0x00000001] ( CPF_Const )
	unsigned long                                      bIsSetup : 1;                                     		// 0x0290 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bResetup : 1;                                     		// 0x0290 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bIsMovingToLevel : 1;                             		// 0x0290 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	struct FLightmassPrimitiveSettings                 LightmassSettings;                                		// 0x0294 (0x001C) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FLandscapeLayerStruct >             LayerInfoObjs;                                    		// 0x02B0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                ComponentSizeQuads;                               		// 0x02BC (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                SubsectionSizeQuads;                              		// 0x02C0 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                NumSubsections;                                   		// 0x02C4 (0x0004) [0x0000000000000002]              ( CPF_Const )
public:
};

// Class Engine.Landscape
// 0x0018 (0x02E0 - 0x02C8)
class ALandscape : public ALandscapeProxy
{
public:
	TArray< struct FName >                             LayerNames;                                       		// 0x02C8 (0x000C) [0x0000000020400000]              ( CPF_NeedCtorLink | CPF_Deprecated )
	TArray< struct FLandscapeLayerInfo >               LayerInfos;                                       		// 0x02D4 (0x000C) [0x0000000020400000]              ( CPF_NeedCtorLink | CPF_Deprecated )
public:
};

// Class Engine.Terrain
// 0x0108 (0x02E0 - 0x01D8)
class ATerrain : public AInfo
{
public:
	TArray< struct FTerrainHeight >                    Heights;                                          		// 0x01D8 (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< struct FTerrainInfoData >                  InfoData;                                         		// 0x01E4 (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< struct FTerrainLayer >                     Layers;                                           		// 0x01F0 (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
	int                                                NormalMapLayer;                                   		// 0x01FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FTerrainDecoLayer >                 DecoLayers;                                       		// 0x0200 (0x000C) [0x0000000000480003]              ( CPF_Edit | CPF_Const | CPF_Component | CPF_NeedCtorLink )
	TArray< struct FAlphaMap >                         AlphaMaps;                                        		// 0x020C (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< class UTerrainComponent* >                 TerrainComponents;                                		// 0x0218 (0x000C) [0x000000000448000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	int                                                NumSectionsX;                                     		// 0x0224 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                NumSectionsY;                                     		// 0x0228 (0x0004) [0x0000000000000002]              ( CPF_Const )
	TArray< struct ATerrain_FTerrainWeightedMaterial > WeightedMaterials;                                		// 0x022C (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< class UTerrainWeightMapTexture* >          WeightedTextureMaps;                              		// 0x0238 (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	int                                                MaxTesselationLevel;                              		// 0x0244 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                MinTessellationLevel;                             		// 0x0248 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TesselationDistanceScale;                         		// 0x024C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TessellationCheckDistance;                        		// 0x0250 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                CollisionTesselationLevel;                        		// 0x0254 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FCachedTerrainMaterialArray                 CachedTerrainMaterials[ 0x2 ];                    		// 0x0258 (0x0018) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	int                                                NumVerticesX;                                     		// 0x0270 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                NumVerticesY;                                     		// 0x0274 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                NumPatchesX;                                      		// 0x0278 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                NumPatchesY;                                      		// 0x027C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                MaxComponentSize;                                 		// 0x0280 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                StaticLightingResolution;                         		// 0x0284 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bIsOverridingLightResolution : 1;                 		// 0x0288 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bBilinearFilterLightmapGeneration : 1;            		// 0x0288 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bCastShadow : 1;                                  		// 0x0288 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bForceDirectLightMap : 1;                         		// 0x0288 (0x0004) [0x0000000000000003] [0x00000008] ( CPF_Edit | CPF_Const )
	unsigned long                                      bCastDynamicShadow : 1;                           		// 0x0288 (0x0004) [0x0000000000000003] [0x00000010] ( CPF_Edit | CPF_Const )
	unsigned long                                      bEnableSpecular : 1;                              		// 0x0288 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bBlockRigidBody : 1;                              		// 0x0288 (0x0004) [0x0000000000000003] [0x00000040] ( CPF_Edit | CPF_Const )
	unsigned long                                      bAllowRigidBodyUnderneath : 1;                    		// 0x0288 (0x0004) [0x0000000000000003] [0x00000080] ( CPF_Edit | CPF_Const )
	unsigned long                                      bAcceptsDynamicLights : 1;                        		// 0x0288 (0x0004) [0x0000000000000003] [0x00000100] ( CPF_Edit | CPF_Const )
	unsigned long                                      bMorphingEnabled : 1;                             		// 0x0288 (0x0004) [0x0000000000000001] [0x00000200] ( CPF_Edit )
	unsigned long                                      bMorphingGradientsEnabled : 1;                    		// 0x0288 (0x0004) [0x0000000000000001] [0x00000400] ( CPF_Edit )
	unsigned long                                      bLocked : 1;                                      		// 0x0288 (0x0004) [0x0000000000000000] [0x00000800] 
	unsigned long                                      bHeightmapLocked : 1;                             		// 0x0288 (0x0004) [0x0000000000000000] [0x00001000] 
	unsigned long                                      bShowingCollision : 1;                            		// 0x0288 (0x0004) [0x0000000000000000] [0x00002000] 
	unsigned long                                      bUseWorldOriginTextureUVs : 1;                    		// 0x0288 (0x0004) [0x0000000000000001] [0x00004000] ( CPF_Edit )
	unsigned long                                      bShowWireframe : 1;                               		// 0x0288 (0x0004) [0x0000000000000001] [0x00008000] ( CPF_Edit )
	unsigned long                                      BeastTerrainDirty : 1;                            		// 0x0288 (0x0004) [0x0000000000202000] [0x00010000] ( CPF_Transient )
	class UPhysicalMaterial*                           TerrainPhysMaterialOverride;                      		// 0x028C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FLightingChannelContainer                   LightingChannels;                                 		// 0x0290 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FLightmassPrimitiveSettings                 LightmassSettings;                                		// 0x0294 (0x001C) [0x0000000000000001]              ( CPF_Edit )
	struct FPointer                                    ReleaseResourcesFence;                            		// 0x02B0 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	int                                                EditorTessellationLevel;                          		// 0x02B4 (0x0004) [0x0000000000002001]              ( CPF_Edit | CPF_Transient )
	TArray< struct FSelectedTerrainVertex >            SelectedVertices;                                 		// 0x02B8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FColor                                      WireframeColor;                                   		// 0x02C4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FGuid                                       LightingGuid;                                     		// 0x02C8 (0x0010) [0x0000000000000002]              ( CPF_Const )
	struct FBeastTerrainMaterialProperties             BeastMaterialProperties;                          		// 0x02D8 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.LandscapeGizmoActor
// 0x001C (0x01F4 - 0x01D8)
class ALandscapeGizmoActor : public AActor
{
public:
	float                                              Width;                                            		// 0x01D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Height;                                           		// 0x01DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LengthZ;                                          		// 0x01E0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MarginZ;                                          		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MinRelativeZ;                                     		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RelativeScaleZ;                                   		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class ULandscapeInfo*                              TargetLandscapeInfo;                              		// 0x01F0 (0x0004) [0x0000000000002001]              ( CPF_Edit | CPF_Transient )
public:
};

// Class Engine.LandscapeGizmoActiveActor
// 0x00F4 (0x02E8 - 0x01F4)
class ALandscapeGizmoActiveActor : public ALandscapeGizmoActor
{
public:
	unsigned char                                      DataType;                                         		// 0x01F4 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      UnknownData00[ 0x3C ];                            		// 0x01F8 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.LandscapeGizmoActiveActor.SelectedData
	class UTexture2D*                                  GizmoTexture;                                     		// 0x0234 (0x0004) [0x0000000000000000]              
	struct FVector2D                                   TextureScale;                                     		// 0x0238 (0x0008) [0x0000000000000000]              
	TArray< struct FVector >                           SampledHeight;                                    		// 0x0240 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FVector >                           SampledNormal;                                    		// 0x024C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                SampleSizeX;                                      		// 0x0258 (0x0004) [0x0000000000000000]              
	int                                                SampleSizeY;                                      		// 0x025C (0x0004) [0x0000000000000000]              
	float                                              CachedWidth;                                      		// 0x0260 (0x0004) [0x0000000000000000]              
	float                                              CachedHeight;                                     		// 0x0264 (0x0004) [0x0000000000000000]              
	float                                              CachedScaleXY;                                    		// 0x0268 (0x0004) [0x0000000000000000]              
	struct FVector                                     FrustumVerts[ 0x8 ];                              		// 0x026C (0x0060) [0x0000000000002000]              ( CPF_Transient )
	class UMaterial*                                   GizmoMaterial;                                    		// 0x02CC (0x0004) [0x0000000000000000]              
	class UMaterialInstance*                           GizmoDataMaterial;                                		// 0x02D0 (0x0004) [0x0000000000000000]              
	class UMaterial*                                   GizmoMeshMaterial;                                		// 0x02D4 (0x0004) [0x0000000000000000]              
	class UMaterial*                                   GizmoMeshMaterial2;                               		// 0x02D8 (0x0004) [0x0000000000000000]              
	TArray< struct FName >                             LayerNames;                                       		// 0x02DC (0x000C) [0x0000000000420001]              ( CPF_Edit | CPF_EditConst | CPF_NeedCtorLink )
public:
};

// Class Engine.LandscapeComponent
// 0x00E8 (0x02CC - 0x01E4)
class ULandscapeComponent : public UPrimitiveComponent
{
public:
	int                                                SectionBaseX;                                     		// 0x01E4 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                SectionBaseY;                                     		// 0x01E8 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                ComponentSizeQuads;                               		// 0x01EC (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                SubsectionSizeQuads;                              		// 0x01F0 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                NumSubsections;                                   		// 0x01F4 (0x0004) [0x0000000000000002]              ( CPF_Const )
	class UMaterialInterface*                          OverrideMaterial;                                 		// 0x01F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInstanceConstant*                   MaterialInstance;                                 		// 0x01FC (0x0004) [0x0000000000000000]              
	TArray< struct FWeightmapLayerAllocationInfo >     WeightmapLayerAllocations;                        		// 0x0200 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< class UTexture2D* >                        WeightmapTextures;                                		// 0x020C (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	unsigned char                                      UnknownData00[ 0x8 ];                             		// 0x0218 (0x0008) MISSED OFFSET
	struct FVector4                                    WeightmapScaleBias;                               		// 0x0220 (0x0010) [0x0000000000000000]              
	float                                              WeightmapSubsectionOffset;                        		// 0x0230 (0x0004) [0x0000000000000000]              
	unsigned char                                      UnknownData01[ 0xC ];                             		// 0x0234 (0x000C) MISSED OFFSET
	struct FVector4                                    HeightmapScaleBias;                               		// 0x0240 (0x0010) [0x0000000000000000]              
	class UTexture2D*                                  HeightmapTexture;                                 		// 0x0250 (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FBoxSphereBounds                            CachedBoxSphereBounds;                            		// 0x0254 (0x001C) [0x0000000000000002]              ( CPF_Const )
	struct FBox                                        CachedLocalBox;                                   		// 0x0270 (0x001C) [0x0000000000000002]              ( CPF_Const )
	struct FGuid                                       LightingGuid;                                     		// 0x028C (0x0010) [0x0000000000000002]              ( CPF_Const )
	TArray< class UShadowMap2D* >                      ShadowMaps;                                       		// 0x029C (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< struct FGuid >                             IrrelevantLights;                                 		// 0x02A8 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	struct FLightMapRef                                LightMap;                                         		// 0x02B4 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FPointer                                    EditToolRenderData;                               		// 0x02B8 (0x0004) [0x0000000000001000]              ( CPF_Native )
	int                                                CollisionMipLevel;                                		// 0x02BC (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FPointer                                    PlatformData;                                     		// 0x02C0 (0x0004) [0x0000000000001000]              ( CPF_Native )
	int                                                PlatformDataSize;                                 		// 0x02C4 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	unsigned long                                      bNeedPostUndo : 1;                                		// 0x02C8 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class Engine.LandscapeGizmoRenderComponent
// 0x0000 (0x01E4 - 0x01E4)
class ULandscapeGizmoRenderComponent : public UPrimitiveComponent
{
public:
public:
};

// Class Engine.LandscapeHeightfieldCollisionComponent
// 0x00BC (0x02A0 - 0x01E4)
class ULandscapeHeightfieldCollisionComponent : public UPrimitiveComponent
{
public:
	struct FUntypedBulkData_Mirror                     CollisionHeightData;                              		// 0x01E4 (0x0034) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< struct FName >                             ComponentLayers;                                  		// 0x0218 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	struct FUntypedBulkData_Mirror                     DominantLayerData;                                		// 0x0224 (0x0034) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	int                                                SectionBaseX;                                     		// 0x0258 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                SectionBaseY;                                     		// 0x025C (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                CollisionSizeQuads;                               		// 0x0260 (0x0004) [0x0000000000000000]              
	float                                              CollisionScale;                                   		// 0x0264 (0x0004) [0x0000000000000000]              
	TArray< unsigned char >                            CollisionQuadFlags;                               		// 0x0268 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< class UPhysicalMaterial* >                 PhysicalMaterials;                                		// 0x0274 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	struct FPointer                                    RBHeightfield;                                    		// 0x0280 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FBoxSphereBounds                            CachedBoxSphereBounds;                            		// 0x0284 (0x001C) [0x0000000000000002]              ( CPF_Const )
public:
};

// Class Engine.TerrainComponent
// 0x0074 (0x0258 - 0x01E4)
class UTerrainComponent : public UPrimitiveComponent
{
public:
	TArray< class UShadowMap2D* >                      ShadowMaps;                                       		// 0x01E4 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< struct FGuid >                             IrrelevantLights;                                 		// 0x01F0 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	struct FPointer                                    TerrainObject;                                    		// 0x01FC (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	int                                                SectionBaseX;                                     		// 0x0200 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                SectionBaseY;                                     		// 0x0204 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                SectionSizeX;                                     		// 0x0208 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                SectionSizeY;                                     		// 0x020C (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                TrueSectionSizeX;                                 		// 0x0210 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                TrueSectionSizeY;                                 		// 0x0214 (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FLightMapRef                                LightMap;                                         		// 0x0218 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< struct FTerrainPatchBounds >               PatchBounds;                                      		// 0x021C (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FTerrainMaterialMask >              BatchMaterials;                                   		// 0x0228 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	int                                                FullBatch;                                        		// 0x0234 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FTerrainBVTree                              BVTree;                                           		// 0x0238 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FVector >                           CollisionVertices;                                		// 0x0244 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FPointer                                    RBHeightfield;                                    		// 0x0250 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	unsigned long                                      bDisplayCollisionLevel : 1;                       		// 0x0254 (0x0004) [0x0000000000000002] [0x00000001] ( CPF_Const )
public:
};

// Class Engine.LandscapeInfo
// 0x0244 (0x0280 - 0x003C)
class ULandscapeInfo : public UObject
{
public:
	struct FGuid                                       LandscapeGuid;                                    		// 0x003C (0x0010) [0x0000000000000002]              ( CPF_Const )
	unsigned char                                      UnknownData00[ 0x3C ];                            		// 0x004C (0x003C) UNKNOWN PROPERTY: MapProperty Engine.LandscapeInfo.LayerInfoMap
	struct FPointer                                    DataInterface;                                    		// 0x0088 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	unsigned char                                      UnknownData01[ 0x3C ];                            		// 0x008C (0x003C) UNKNOWN PROPERTY: MapProperty Engine.LandscapeInfo.XYtoComponentMap
	unsigned char                                      UnknownData02[ 0x3C ];                            		// 0x00C8 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.LandscapeInfo.XYtoCollisionComponentMap
	class ALandscapeProxy*                             LandscapeProxy;                                   		// 0x0104 (0x0004) [0x0000000000000002]              ( CPF_Const )
	unsigned char                                      UnknownData03[ 0x3C ];                            		// 0x0108 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.LandscapeInfo.XYtoAddCollisionMap
	struct FSet_Mirror                                 Proxies;                                          		// 0x0144 (0x003C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FSet_Mirror                                 SelectedComponents;                               		// 0x0180 (0x003C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FSet_Mirror                                 SelectedCollisionComponents;                      		// 0x01BC (0x003C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FSet_Mirror                                 SelectedRegionComponents;                         		// 0x01F8 (0x003C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	unsigned char                                      UnknownData04[ 0x3C ];                            		// 0x0234 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.LandscapeInfo.SelectedRegion
	struct FString                                     HeightmapFilePath;                                		// 0x0270 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned long                                      bIsValid : 1;                                     		// 0x027C (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class Engine.LandscapeLayerInfoObject
// 0x0014 (0x0050 - 0x003C)
class ULandscapeLayerInfoObject : public UObject
{
public:
	struct FName                                       LayerName;                                        		// 0x003C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	class UPhysicalMaterial*                           PhysMaterial;                                     		// 0x0044 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Hardness;                                         		// 0x0048 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bNoWeightBlend : 1;                               		// 0x004C (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class Engine.LandscapeMaterialInstanceConstant
// 0x0004 (0x0258 - 0x0254)
class ULandscapeMaterialInstanceConstant : public UMaterialInstanceConstant
{
public:
	unsigned long                                      bIsLayerThumbnail : 1;                            		// 0x0254 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class Engine.TerrainWeightMapTexture
// 0x0010 (0x01C8 - 0x01B8)
class UTerrainWeightMapTexture : public UTexture2D
{
public:
	class ATerrain*                                    ParentTerrain;                                    		// 0x01B8 (0x0004) [0x0000000000000002]              ( CPF_Const )
	TArray< struct FPointer >                          WeightedMaterials;                                		// 0x01BC (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
public:
};

// Class Engine.TerrainLayerSetup
// 0x000C (0x0048 - 0x003C)
class UTerrainLayerSetup : public UObject
{
public:
	TArray< struct FTerrainFilteredMaterial >          Materials;                                        		// 0x003C (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
public:
};

// Class Engine.TerrainMaterial
// 0x0064 (0x00A0 - 0x003C)
class UTerrainMaterial : public UObject
{
public:
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x003C (0x0004) MISSED OFFSET
	struct FMatrix                                     LocalToMapping;                                   		// 0x0040 (0x0040) [0x0000000000000000]              
	unsigned char                                      MappingType;                                      		// 0x0080 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              MappingScale;                                     		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MappingRotation;                                  		// 0x0088 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MappingPanU;                                      		// 0x008C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MappingPanV;                                      		// 0x0090 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          Material;                                         		// 0x0094 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UTexture2D*                                  DisplacementMap;                                  		// 0x0098 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DisplacementScale;                                		// 0x009C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.DataStoreClient
// 0x003C (0x0084 - 0x0048)
class UDataStoreClient : public UUIRoot
{
public:
	TArray< struct FString >                           GlobalDataStoreClasses;                           		// 0x0048 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	TArray< class UUIDataStore* >                      GlobalDataStores;                                 		// 0x0054 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< struct FString >                           PlayerDataStoreClassNames;                        		// 0x0060 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	TArray< class UClass* >                            PlayerDataStoreClasses;                           		// 0x006C (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< struct FPlayerDataStoreGroup >             PlayerDataStores;                                 		// 0x0078 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
public:
};

// Class Engine.Console
// 0x015C (0x01D4 - 0x0078)
class UConsole : public UInteraction
{
public:
	class ULocalPlayer*                                ConsoleTargetPlayer;                              		// 0x0078 (0x0004) [0x0000000000000000]              
	class UTexture2D*                                  DefaultTexture_Black;                             		// 0x007C (0x0004) [0x0000000000000000]              
	class UTexture2D*                                  DefaultTexture_White;                             		// 0x0080 (0x0004) [0x0000000000000000]              
	struct FName                                       ConsoleKey;                                       		// 0x0084 (0x0008) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	struct FName                                       TypeKey;                                          		// 0x008C (0x0008) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	int                                                MaxScrollbackSize;                                		// 0x0094 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	TArray< struct FString >                           Scrollback;                                       		// 0x0098 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                SBHead;                                           		// 0x00A4 (0x0004) [0x0000000000000000]              
	int                                                SBPos;                                            		// 0x00A8 (0x0004) [0x0000000000000000]              
	int                                                HistoryTop;                                       		// 0x00AC (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                HistoryBot;                                       		// 0x00B0 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                HistoryCur;                                       		// 0x00B4 (0x0004) [0x0000000000004000]              ( CPF_Config )
	struct FString                                     History[ 0x10 ];                                  		// 0x00B8 (0x00C0) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	unsigned long                                      bNavigatingHistory : 1;                           		// 0x0178 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bCaptureKeyInput : 1;                             		// 0x0178 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bCtrl : 1;                                        		// 0x0178 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bEnableUI : 1;                                    		// 0x0178 (0x0004) [0x0000000000004000] [0x00000008] ( CPF_Config )
	unsigned long                                      bAutoCompleteLocked : 1;                          		// 0x0178 (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	unsigned long                                      bRequireCtrlToNavigateAutoComplete : 1;           		// 0x0178 (0x0004) [0x0000000000004000] [0x00000020] ( CPF_Config )
	unsigned long                                      bIsRuntimeAutoCompleteUpToDate : 1;               		// 0x0178 (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	unsigned long                                      bShowCursor : 1;                                  		// 0x0178 (0x0004) [0x0000000000000000] [0x00000080] 
	unsigned long                                      bDisableOpen : 1;                                 		// 0x0178 (0x0004) [0x0000000000000000] [0x00000100] 
	struct FString                                     TypedStr;                                         		// 0x017C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                TypedStrPos;                                      		// 0x0188 (0x0004) [0x0000000000000000]              
	TArray< struct FAutoCompleteCommand >              ManualAutoCompleteList;                           		// 0x018C (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	TArray< struct FAutoCompleteCommand >              AutoCompleteList;                                 		// 0x0198 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	int                                                AutoCompleteIndex;                                		// 0x01A4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FAutoCompleteNode                           AutoCompleteTree;                                 		// 0x01A8 (0x001C) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
	TArray< int >                                      AutoCompleteIndices;                              		// 0x01C4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              CursorBlinkTimeAccumulator;                       		// 0x01D0 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.Input
// 0x00A0 (0x0118 - 0x0078)
class UInput : public UInteraction
{
public:
	TArray< struct FKeyBind >                          Bindings;                                         		// 0x0078 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	TArray< struct FName >                             PressedKeys;                                      		// 0x0084 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                CurrentControllerId;                              		// 0x0090 (0x0004) [0x0000000000000002]              ( CPF_Const )
	unsigned char                                      CurrentEvent;                                     		// 0x0094 (0x0001) [0x0000000000000002]              ( CPF_Const )
	float                                              CurrentDelta;                                     		// 0x0098 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              CurrentDeltaTime;                                 		// 0x009C (0x0004) [0x0000000000000002]              ( CPF_Const )
	unsigned char                                      UnknownData00[ 0x3C ];                            		// 0x00A0 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.Input.NameToPtr
	TArray< struct FPointer >                          AxisArray;                                        		// 0x00DC (0x000C) [0x0000000000101002]              ( CPF_Const | CPF_Native )
	TArray< class USeqEvent_Input* >                   CachedInputEvents;                                		// 0x00E8 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< class USeqEvent_AnalogInput* >             CachedAnalogInputEvents;                          		// 0x00F4 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< class USeqEvent_TouchInput* >              CachedTouchInputEvents;                           		// 0x0100 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< struct FTouchTracker >                     CurrentTouches;                                   		// 0x010C (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
public:
};

// Class Engine.PlayerInput
// 0x0140 (0x0258 - 0x0118)
class UPlayerInput : public UInput
{
public:
	unsigned long                                      bUsingGamepad : 1;                                		// 0x0118 (0x0004) [0x0000000000000002] [0x00000001] ( CPF_Const )
	unsigned long                                      bInvertMouse : 1;                                 		// 0x0118 (0x0004) [0x0000000000044000] [0x00000002] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bSmoothMouse : 1;                                 		// 0x0118 (0x0004) [0x0000000000044000] [0x00000004] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bAccelerateMouse : 1;                             		// 0x0118 (0x0004) [0x0000000000044000] [0x00000008] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bInvertTurn : 1;                                  		// 0x0118 (0x0004) [0x0000000000044000] [0x00000010] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bWasForward : 1;                                  		// 0x0118 (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bWasBack : 1;                                     		// 0x0118 (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bWasLeft : 1;                                     		// 0x0118 (0x0004) [0x0000000000000000] [0x00000080] 
	unsigned long                                      bWasRight : 1;                                    		// 0x0118 (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      bEdgeForward : 1;                                 		// 0x0118 (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bEdgeBack : 1;                                    		// 0x0118 (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      bEdgeLeft : 1;                                    		// 0x0118 (0x0004) [0x0000000000000000] [0x00000800] 
	unsigned long                                      bEdgeRight : 1;                                   		// 0x0118 (0x0004) [0x0000000000000000] [0x00001000] 
	unsigned long                                      bEnableMouseSmoothing : 1;                        		// 0x0118 (0x0004) [0x0000000000044000] [0x00002000] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bEnableFOVScaling : 1;                            		// 0x0118 (0x0004) [0x0000000000000000] [0x00004000] 
	unsigned long                                      bLockTurnUntilRelease : 1;                        		// 0x0118 (0x0004) [0x0000000000002000] [0x00008000] ( CPF_Transient )
	struct FName                                       LastAxisKeyName;                                  		// 0x011C (0x0008) [0x0000000000000002]              ( CPF_Const )
	float                                              DoubleClickTimer;                                 		// 0x0124 (0x0004) [0x0000000000000000]              
	float                                              DoubleClickTime;                                  		// 0x0128 (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              MouseSensitivity;                                 		// 0x012C (0x0004) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	float                                              aBaseX;                                           		// 0x0130 (0x0004) [0x0000000000000004]              ( CPF_Input )
	float                                              aBaseY;                                           		// 0x0134 (0x0004) [0x0000000000000004]              ( CPF_Input )
	float                                              aBaseZ;                                           		// 0x0138 (0x0004) [0x0000000000000004]              ( CPF_Input )
	float                                              aMouseX;                                          		// 0x013C (0x0004) [0x0000000000000004]              ( CPF_Input )
	float                                              aMouseY;                                          		// 0x0140 (0x0004) [0x0000000000000004]              ( CPF_Input )
	float                                              aForward;                                         		// 0x0144 (0x0004) [0x0000000000000004]              ( CPF_Input )
	float                                              aTurn;                                            		// 0x0148 (0x0004) [0x0000000000000004]              ( CPF_Input )
	float                                              aStrafe;                                          		// 0x014C (0x0004) [0x0000000000000004]              ( CPF_Input )
	float                                              aUp;                                              		// 0x0150 (0x0004) [0x0000000000000004]              ( CPF_Input )
	float                                              aLookUp;                                          		// 0x0154 (0x0004) [0x0000000000000004]              ( CPF_Input )
	float                                              aRightAnalogTrigger;                              		// 0x0158 (0x0004) [0x0000000000000004]              ( CPF_Input )
	float                                              aLeftAnalogTrigger;                               		// 0x015C (0x0004) [0x0000000000000004]              ( CPF_Input )
	float                                              aPS3AccelX;                                       		// 0x0160 (0x0004) [0x0000000000000004]              ( CPF_Input )
	float                                              aPS3AccelY;                                       		// 0x0164 (0x0004) [0x0000000000000004]              ( CPF_Input )
	float                                              aPS3AccelZ;                                       		// 0x0168 (0x0004) [0x0000000000000004]              ( CPF_Input )
	float                                              aPS3Gyro;                                         		// 0x016C (0x0004) [0x0000000000000004]              ( CPF_Input )
	struct FVector                                     aTilt;                                            		// 0x0170 (0x000C) [0x0000000000000004]              ( CPF_Input )
	struct FVector                                     aRotationRate;                                    		// 0x017C (0x000C) [0x0000000000000004]              ( CPF_Input )
	struct FVector                                     aGravity;                                         		// 0x0188 (0x000C) [0x0000000000000004]              ( CPF_Input )
	struct FVector                                     aAcceleration;                                    		// 0x0194 (0x000C) [0x0000000000000004]              ( CPF_Input )
	struct FVector                                     aTouch[ 0x5 ];                                    		// 0x01A0 (0x003C) [0x0000000000000004]              ( CPF_Input )
	struct FVector                                     aBackTouch[ 0x5 ];                                		// 0x01DC (0x003C) [0x0000000000000004]              ( CPF_Input )
	float                                              RawJoyUp;                                         		// 0x0218 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              RawJoyRight;                                      		// 0x021C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              RawJoyLookRight;                                  		// 0x0220 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              RawJoyLookUp;                                     		// 0x0224 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              MoveForwardSpeed;                                 		// 0x0228 (0x0004) [0x0000000000004001]              ( CPF_Edit | CPF_Config )
	float                                              MoveStrafeSpeed;                                  		// 0x022C (0x0004) [0x0000000000004001]              ( CPF_Edit | CPF_Config )
	float                                              LookRightScale;                                   		// 0x0230 (0x0004) [0x0000000000004001]              ( CPF_Edit | CPF_Config )
	float                                              LookUpScale;                                      		// 0x0234 (0x0004) [0x0000000000004001]              ( CPF_Edit | CPF_Config )
	unsigned char                                      bStrafe;                                          		// 0x0238 (0x0001) [0x0000000000000004]              ( CPF_Input )
	unsigned char                                      bXAxis;                                           		// 0x0239 (0x0001) [0x0000000000000004]              ( CPF_Input )
	unsigned char                                      bYAxis;                                           		// 0x023A (0x0001) [0x0000000000000004]              ( CPF_Input )
	float                                              ZeroTime[ 0x2 ];                                  		// 0x023C (0x0008) [0x0000000000000000]              
	float                                              SmoothedMouse[ 0x2 ];                             		// 0x0244 (0x0008) [0x0000000000000000]              
	int                                                MouseSamples;                                     		// 0x024C (0x0004) [0x0000000000000000]              
	float                                              MouseSamplingTotal;                               		// 0x0250 (0x0004) [0x0000000000000000]              
	float                                              AutoUnlockTurnTime;                               		// 0x0254 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.PlayerManagerInteraction
// 0x0000 (0x0078 - 0x0078)
class UPlayerManagerInteraction : public UInteraction
{
public:
public:
};

// Class Engine.UISceneClient
// 0x00A0 (0x00E8 - 0x0048)
class UUISceneClient : public UUIRoot
{
public:
	struct FPointer                                    VfTable_FExec;                                    		// 0x0048 (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	struct FPointer                                    RenderViewport;                                   		// 0x004C (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FIntPoint                                   MousePosition;                                    		// 0x0050 (0x0008) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	class UDataStoreClient*                            DataStoreManager;                                 		// 0x0058 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x005C (0x0004) MISSED OFFSET
	struct FMatrix                                     CanvasToScreen;                                   		// 0x0060 (0x0040) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FMatrix                                     InvCanvasToScreen;                                		// 0x00A0 (0x0040) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	class UPostProcessChain*                           UIScenePostProcess;                               		// 0x00E0 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bEnablePostProcess : 1;                           		// 0x00E4 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
public:
};

// Class Engine.UISoundTheme
// 0x000C (0x0048 - 0x003C)
class UUISoundTheme : public UObject
{
public:
	TArray< struct FSoundEventMapping >                SoundEventBindings;                               		// 0x003C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.UIDataStoreSubscriber
// 0x0000 (0x003C - 0x003C)
class UUIDataStoreSubscriber : public UInterface
{
public:
public:
};

// Class Engine.UIDataStorePublisher
// 0x0000 (0x003C - 0x003C)
class UUIDataStorePublisher : public UUIDataStoreSubscriber
{
public:
public:
};

// Class Engine.UIDataProvider
// 0x0000 (0x0048 - 0x0048)
class UUIDataProvider : public UUIRoot
{
public:
public:
};

// Class Engine.UIDataProvider_OnlinePlayerDataBase
// 0x0008 (0x0050 - 0x0048)
class UUIDataProvider_OnlinePlayerDataBase : public UUIDataProvider
{
public:
	int                                                PlayerControllerId;                               		// 0x0048 (0x0004) [0x0000000000000000]              
	class ULocalPlayer*                                Player;                                           		// 0x004C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.UIDataProvider_OnlineFriendMessages
// 0x0054 (0x00A4 - 0x0050)
class UUIDataProvider_OnlineFriendMessages : public UUIDataProvider_OnlinePlayerDataBase
{
public:
	TArray< struct FOnlineFriendMessage >              Messages;                                         		// 0x0050 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     SendingPlayerNameCol;                             		// 0x005C (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     bIsFriendInviteCol;                               		// 0x0068 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     bWasAcceptedCol;                                  		// 0x0074 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     bWasDeniedCol;                                    		// 0x0080 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     MessageCol;                                       		// 0x008C (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     LastInviteFrom;                                   		// 0x0098 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.UIDataProvider_OnlineFriends
// 0x00B5 (0x0105 - 0x0050)
class UUIDataProvider_OnlineFriends : public UUIDataProvider_OnlinePlayerDataBase
{
public:
	TArray< struct FOnlineFriend >                     FriendsList;                                      		// 0x0050 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     NickNameCol;                                      		// 0x005C (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     PresenceInfoCol;                                  		// 0x0068 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     FriendStateCol;                                   		// 0x0074 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     bIsOnlineCol;                                     		// 0x0080 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     bIsPlayingCol;                                    		// 0x008C (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     bIsPlayingThisGameCol;                            		// 0x0098 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     bIsJoinableCol;                                   		// 0x00A4 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     bHasVoiceSupportCol;                              		// 0x00B0 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     bHaveInvitedCol;                                  		// 0x00BC (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     bHasInvitedYouCol;                                		// 0x00C8 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     OfflineText;                                      		// 0x00D4 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     OnlineText;                                       		// 0x00E0 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     AwayText;                                         		// 0x00EC (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     BusyText;                                         		// 0x00F8 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	unsigned char                                      m_GetFriendsStatus;                               		// 0x0104 (0x0001) [0x0000000000000000]              
public:
};

// Class Engine.UIDataProvider_OnlinePartyChatList
// 0x006C (0x00BC - 0x0050)
class UUIDataProvider_OnlinePartyChatList : public UUIDataProvider_OnlinePlayerDataBase
{
public:
	TArray< struct FOnlinePartyMember >                PartyMembersList;                                 		// 0x0050 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FString >                           NatTypes;                                         		// 0x005C (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NickNameCol;                                      		// 0x0068 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NatTypeCol;                                       		// 0x0074 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     IsLocalCol;                                       		// 0x0080 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     IsInPartyVoiceCol;                                		// 0x008C (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     IsTalkingCol;                                     		// 0x0098 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     IsInGameSessionCol;                               		// 0x00A4 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     IsPlayingThisGameCol;                             		// 0x00B0 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
public:
};

// Class Engine.UIDataProvider_OnlinePlayerStorage
// 0x0020 (0x0070 - 0x0050)
class UUIDataProvider_OnlinePlayerStorage : public UUIDataProvider_OnlinePlayerDataBase
{
public:
	class UOnlinePlayerStorage*                        Profile;                                          		// 0x0050 (0x0004) [0x0000000000000000]              
	struct FName                                       ProviderName;                                     		// 0x0054 (0x0008) [0x0000000000000002]              ( CPF_Const )
	unsigned long                                      bWasErrorLastRead : 1;                            		// 0x005C (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bIsExternalUIOpen : 1;                            		// 0x005C (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bNeedsDeferredRefresh : 1;                        		// 0x005C (0x0004) [0x0000000000000000] [0x00000004] 
	TArray< struct FPlayerStorageArrayProvider >       PlayerStorageArrayProviders;                      		// 0x0060 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                DeviceStorageSizeNeeded;                          		// 0x006C (0x0004) [0x0000000000004000]              ( CPF_Config )
public:
};

// Class Engine.UIDataProvider_OnlineProfileSettings
// 0x0000 (0x0070 - 0x0070)
class UUIDataProvider_OnlineProfileSettings : public UUIDataProvider_OnlinePlayerStorage
{
public:
public:
};

// Class Engine.UIDataProvider_PlayerAchievements
// 0x000C (0x005C - 0x0050)
class UUIDataProvider_PlayerAchievements : public UUIDataProvider_OnlinePlayerDataBase
{
public:
	TArray< struct FAchievementDetails >               Achievements;                                     		// 0x0050 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class Engine.UIDataProvider_OnlinePlayerStorageArray
// 0x0020 (0x0068 - 0x0048)
class UUIDataProvider_OnlinePlayerStorageArray : public UUIDataProvider
{
public:
	class UOnlinePlayerStorage*                        PlayerStorage;                                    		// 0x0048 (0x0004) [0x0000000000000000]              
	int                                                PlayerStorageId;                                  		// 0x004C (0x0004) [0x0000000000000000]              
	struct FString                                     ColumnHeaderText;                                 		// 0x0050 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< struct FName >                             Values;                                           		// 0x005C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.UIDataProvider_SettingsArray
// 0x0028 (0x0070 - 0x0048)
class UUIDataProvider_SettingsArray : public UUIDataProvider
{
public:
	class USettings*                                   Settings;                                         		// 0x0048 (0x0004) [0x0000000000000000]              
	int                                                SettingsId;                                       		// 0x004C (0x0004) [0x0000000000000000]              
	struct FName                                       SettingsName;                                     		// 0x0050 (0x0008) [0x0000000000000000]              
	struct FString                                     ColumnHeaderText;                                 		// 0x0058 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< struct FIdToStringMapping >                Values;                                           		// 0x0064 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.UIDataStore
// 0x0020 (0x0068 - 0x0048)
class UUIDataStore : public UUIDataProvider
{
public:
	struct FName                                       Tag;                                              		// 0x0048 (0x0008) [0x0000000000000000]              
	TArray< struct FScriptDelegate >                   RefreshSubscriberNotifies;                        		// 0x0050 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnDataStoreValueUpdated__Delegate;              		// 0x005C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.UIDataStore_DynamicResource
// 0x0050 (0x00B8 - 0x0068)
class UUIDataStore_DynamicResource : public UUIDataStore
{
public:
	class UUIDataProvider_OnlineProfileSettings*       ProfileProvider;                                  		// 0x0068 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UUIDataStore_GameResource*                   GameResourceDataStore;                            		// 0x006C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< struct FDynamicResourceProviderDefinition > ResourceProviderDefinitions;                      		// 0x0070 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	struct FMultiMap_Mirror                            ResourceProviders;                                		// 0x007C (0x003C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.UIDataStore_Fonts
// 0x0000 (0x0068 - 0x0068)
class UUIDataStore_Fonts : public UUIDataStore
{
public:
public:
};

// Class Engine.UIDataStore_GameResource
// 0x0048 (0x00B0 - 0x0068)
class UUIDataStore_GameResource : public UUIDataStore
{
public:
	TArray< struct FGameResourceDataProvider >         ElementProviderTypes;                             		// 0x0068 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	struct FMultiMap_Mirror                            ListElementProviders;                             		// 0x0074 (0x003C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.UIDataStore_MenuItems
// 0x0050 (0x0100 - 0x00B0)
class UUIDataStore_MenuItems : public UUIDataStore_GameResource
{
public:
	struct FName                                       CurrentGameSettingsTag;                           		// 0x00B0 (0x0008) [0x0000000000000002]              ( CPF_Const )
	struct FMultiMap_Mirror                            OptionProviders;                                  		// 0x00B8 (0x003C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< class UUIDataProvider_MenuItem* >          DynamicProviders;                                 		// 0x00F4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class Engine.UIDataStore_GameState
// 0x000C (0x0074 - 0x0068)
class UUIDataStore_GameState : public UUIDataStore
{
public:
	struct FScriptDelegate                             __OnRefreshDataFieldValue__Delegate;              		// 0x0068 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.UIDataStore_Registry
// 0x000C (0x0074 - 0x0068)
class UUIDataStore_Registry : public UUIDataStore
{
public:
	TArray< struct FRegistryKeyValuePair >             RegistryData;                                     		// 0x0068 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.UIDataStore_Remote
// 0x0000 (0x0068 - 0x0068)
class UUIDataStore_Remote : public UUIDataStore
{
public:
public:
};

// Class Engine.UIDataStore_OnlineGameSearch
// 0x0028 (0x0090 - 0x0068)
class UUIDataStore_OnlineGameSearch : public UUIDataStore_Remote
{
public:
	struct FName                                       SearchResultsName;                                		// 0x0068 (0x0008) [0x0000000000000002]              ( CPF_Const )
	class UOnlineSubsystem*                            OnlineSub;                                        		// 0x0070 (0x0004) [0x0000000000000000]              
	class UOnlineGameInterface*                        GameInterface;                                    		// 0x0074 (0x0008) [0x0000000000000000]              
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x0078 (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	TArray< struct FGameSearchCfg >                    GameSearchCfgList;                                		// 0x007C (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	int                                                SelectedIndex;                                    		// 0x0088 (0x0004) [0x0000000000000000]              
	int                                                ActiveSearchIndex;                                		// 0x008C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.UIDataStore_OnlinePlayerData
// 0x00A8 (0x0110 - 0x0068)
class UUIDataStore_OnlinePlayerData : public UUIDataStore_Remote
{
public:
	class UUIDataProvider_OnlineFriends*               FriendsProvider;                                  		// 0x0068 (0x0004) [0x0000000000000000]              
	int                                                PlayerControllerId;                               		// 0x006C (0x0004) [0x0000000000000000]              
	struct FString                                     PlayerNick;                                       		// 0x0070 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     ProfileSettingsClassName;                         		// 0x007C (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	class UClass*                                      ProfileSettingsClass;                             		// 0x0088 (0x0004) [0x0000000000000000]              
	class UUIDataProvider_OnlineProfileSettings*       ProfileProvider;                                  		// 0x008C (0x0004) [0x0000000000000000]              
	struct FString                                     ProfileProviderClassName;                         		// 0x0090 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	class UClass*                                      ProfileProviderClass;                             		// 0x009C (0x0004) [0x0000000000000000]              
	struct FString                                     PlayerStorageClassName;                           		// 0x00A0 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	class UClass*                                      PlayerStorageClass;                               		// 0x00AC (0x0004) [0x0000000000000000]              
	class UUIDataProvider_OnlinePlayerStorage*         StorageProvider;                                  		// 0x00B0 (0x0004) [0x0000000000000000]              
	struct FString                                     StorageProviderClassName;                         		// 0x00B4 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	class UClass*                                      StorageProviderClass;                             		// 0x00C0 (0x0004) [0x0000000000000000]              
	class UUIDataProvider_OnlineFriendMessages*        FriendMessagesProvider;                           		// 0x00C4 (0x0004) [0x0000000000000000]              
	class UUIDataProvider_PlayerAchievements*          AchievementsProvider;                             		// 0x00C8 (0x0004) [0x0000000000000000]              
	struct FString                                     FriendsProviderClassName;                         		// 0x00CC (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	class UClass*                                      FriendsProviderClass;                             		// 0x00D8 (0x0004) [0x0000000000000000]              
	struct FString                                     FriendMessagesProviderClassName;                  		// 0x00DC (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	class UClass*                                      FriendMessagesProviderClass;                      		// 0x00E8 (0x0004) [0x0000000000000000]              
	struct FString                                     AchievementsProviderClassName;                    		// 0x00EC (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	class UClass*                                      AchievementsProviderClass;                        		// 0x00F8 (0x0004) [0x0000000000000000]              
	struct FString                                     PartyChatProviderClassName;                       		// 0x00FC (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	class UClass*                                      PartyChatProviderClass;                           		// 0x0108 (0x0004) [0x0000000000000000]              
	class UUIDataProvider_OnlinePartyChatList*         PartyChatProvider;                                		// 0x010C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.UIDataStore_OnlineStats
// 0x0068 (0x00D0 - 0x0068)
class UUIDataStore_OnlineStats : public UUIDataStore_Remote
{
public:
	TArray< class UClass* >                            StatsReadClasses;                                 		// 0x0068 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FName                                       StatsReadName;                                    		// 0x0074 (0x0008) [0x0000000000000002]              ( CPF_Const )
	struct FPlayerNickMetaData                         PlayerNickData;                                   		// 0x007C (0x0014) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	struct FRankMetaData                               RankNameMetaData;                                 		// 0x0090 (0x0014) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	struct FName                                       TotalRowsName;                                    		// 0x00A4 (0x0008) [0x0000000000000002]              ( CPF_Const )
	TArray< class UOnlineStatsRead* >                  StatsReadObjects;                                 		// 0x00AC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class UOnlineStatsRead*                            StatsRead;                                        		// 0x00B8 (0x0004) [0x0000000000000000]              
	unsigned char                                      CurrentReadType;                                  		// 0x00BC (0x0001) [0x0000000000000000]              
	class UOnlineStatsInterface*                       StatsInterface;                                   		// 0x00C0 (0x0008) [0x0000000000000000]              
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x00C4 (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
	class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x00C8 (0x0008) [0x0000000000000000]              
	unsigned char                                      UnknownData01[ 0x4 ];                             		// 0x00CC (0x0004) FIX WRONG TYPE SIZE OF PREVIUS PROPERTY
public:
};

// Class Engine.UIDataStore_Settings
// 0x0000 (0x0068 - 0x0068)
class UUIDataStore_Settings : public UUIDataStore
{
public:
public:
};

// Class Engine.UIDataStore_OnlineGameSettings
// 0x0014 (0x007C - 0x0068)
class UUIDataStore_OnlineGameSettings : public UUIDataStore_Settings
{
public:
	TArray< struct FGameSettingsCfg >                  GameSettingsCfgList;                              		// 0x0068 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	class UClass*                                      SettingsProviderClass;                            		// 0x0074 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                SelectedIndex;                                    		// 0x0078 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.UIDataStore_StringBase
// 0x0000 (0x0068 - 0x0068)
class UUIDataStore_StringBase : public UUIDataStore
{
public:
public:
};

// Class Engine.UIDataStore_InputAlias
// 0x0048 (0x00B0 - 0x0068)
class UUIDataStore_InputAlias : public UUIDataStore_StringBase
{
public:
	TArray< struct FUIDataStoreInputAlias >            InputAliases;                                     		// 0x0068 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	unsigned char                                      UnknownData00[ 0x3C ];                            		// 0x0074 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.UIDataStore_InputAlias.InputAliasLookupMap
public:
};

// Class Engine.UIDataStore_StringAliasMap
// 0x004C (0x00B4 - 0x0068)
class UUIDataStore_StringAliasMap : public UUIDataStore_StringBase
{
public:
	TArray< struct FUIMenuInputMap >                   MenuInputMapArray;                                		// 0x0068 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	struct FMap_Mirror                                 MenuInputSets;                                    		// 0x0074 (0x003C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	int                                                PlayerIndex;                                      		// 0x00B0 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
public:
};

// Class Engine.UIPropertyDataProvider
// 0x0018 (0x0060 - 0x0048)
class UUIPropertyDataProvider : public UUIDataProvider
{
public:
	TArray< class UClass* >                            ComplexPropertyTypes;                             		// 0x0048 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	struct FScriptDelegate                             __CanSupportComplexPropertyType__Delegate;        		// 0x0054 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.UIDataProvider_Settings
// 0x0008 (0x0068 - 0x0060)
class UUIDataProvider_Settings : public UUIPropertyDataProvider
{
public:
	class USettings*                                   Settings;                                         		// 0x0060 (0x0004) [0x0000000000000000]              
	unsigned long                                      bIsAListRow : 1;                                  		// 0x0064 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class Engine.UIResourceDataProvider
// 0x0004 (0x0064 - 0x0060)
class UUIResourceDataProvider : public UUIPropertyDataProvider
{
public:
	unsigned long                                      bSkipDuringEnumeration : 1;                       		// 0x0060 (0x0004) [0x0000000000004000] [0x00000001] ( CPF_Config )
public:
};

// Class Engine.UIDataProvider_MenuItem
// 0x0088 (0x00EC - 0x0064)
class UUIDataProvider_MenuItem : public UUIResourceDataProvider
{
public:
	unsigned char                                      OptionType;                                       		// 0x0064 (0x0001) [0x0000000000004000]              ( CPF_Config )
	TArray< struct FName >                             OptionSet;                                        		// 0x0068 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	struct FString                                     DataStoreMarkup;                                  		// 0x0074 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	struct FString                                     DescriptionMarkup;                                		// 0x0080 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	struct FName                                       RequiredGameMode;                                 		// 0x008C (0x0008) [0x0000000000004000]              ( CPF_Config )
	struct FString                                     FriendlyName;                                     		// 0x0094 (0x000C) [0x000000000040C002]              ( CPF_Const | CPF_Config | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     CustomFriendlyName;                               		// 0x00A0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     Description;                                      		// 0x00AC (0x000C) [0x000000000040C002]              ( CPF_Const | CPF_Config | CPF_Localized | CPF_NeedCtorLink )
	unsigned long                                      bEditableCombo : 1;                               		// 0x00B8 (0x0004) [0x0000000000004000] [0x00000001] ( CPF_Config )
	unsigned long                                      bNumericCombo : 1;                                		// 0x00B8 (0x0004) [0x0000000000004000] [0x00000002] ( CPF_Config )
	unsigned long                                      bKeyboardOrMouseOption : 1;                       		// 0x00B8 (0x0004) [0x0000000000004000] [0x00000004] ( CPF_Config )
	unsigned long                                      bOnlineOnly : 1;                                  		// 0x00B8 (0x0004) [0x0000000000004000] [0x00000008] ( CPF_Config )
	unsigned long                                      bOfflineOnly : 1;                                 		// 0x00B8 (0x0004) [0x0000000000004000] [0x00000010] ( CPF_Config )
	unsigned long                                      bSearchAllInis : 1;                               		// 0x00B8 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bRemoveOn360 : 1;                                 		// 0x00B8 (0x0004) [0x0000000000004000] [0x00000040] ( CPF_Config )
	unsigned long                                      bRemoveOnPC : 1;                                  		// 0x00B8 (0x0004) [0x0000000000004000] [0x00000080] ( CPF_Config )
	unsigned long                                      bRemoveOnPS3 : 1;                                 		// 0x00B8 (0x0004) [0x0000000000004000] [0x00000100] ( CPF_Config )
	int                                                EditBoxMaxLength;                                 		// 0x00BC (0x0004) [0x0000000000004000]              ( CPF_Config )
	struct FUIRangeData                                RangeData;                                        		// 0x00C0 (0x0014) [0x0000000000004000]              ( CPF_Config )
	TArray< struct FName >                             SchemaCellFields;                                 		// 0x00D4 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	struct FString                                     IniName;                                          		// 0x00E0 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
public:
};

// Class Engine.UIResourceCombinationProvider
// 0x0008 (0x0050 - 0x0048)
class UUIResourceCombinationProvider : public UUIDataProvider
{
public:
	class UUIResourceDataProvider*                     StaticDataProvider;                               		// 0x0048 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UUIDataProvider_OnlineProfileSettings*       ProfileProvider;                                  		// 0x004C (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.GameUISceneClient
// 0x0074 (0x015C - 0x00E8)
class UGameUISceneClient : public UUISceneClient
{
public:
	float                                              LatestDeltaTime;                                  		// 0x00E8 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FDouble                                     DoubleClickStartTime;                             		// 0x00EC (0x0008) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FIntPoint                                   DoubleClickStartPosition;                         		// 0x00F4 (0x0008) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FMap_Mirror                                 InitialPressedKeys;                               		// 0x00FC (0x003C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	unsigned long                                      bUpdateInputProcessingStatus : 1;                 		// 0x0138 (0x0004) [0x0000000000002002] [0x00000001] ( CPF_Const | CPF_Transient )
	unsigned long                                      bUpdateSceneViewportSizes : 1;                    		// 0x0138 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bEnableDebugInput : 1;                            		// 0x0138 (0x0004) [0x0000000000004000] [0x00000004] ( CPF_Config )
	unsigned long                                      bRenderDebugInfo : 1;                             		// 0x0138 (0x0004) [0x0000000000004000] [0x00000008] ( CPF_Config )
	unsigned long                                      bCaptureUnprocessedInput : 1;                     		// 0x0138 (0x0004) [0x0000000000004002] [0x00000010] ( CPF_Const | CPF_Config )
	unsigned long                                      m_bCalculateTickStat : 1;                         		// 0x0138 (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      m_bTickStatScene : 1;                             		// 0x0138 (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	TArray< struct FName >                             NavAliases;                                       		// 0x013C (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FName >                             AxisInputKeys;                                    		// 0x0148 (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	struct FDouble                                     m_fFullTickTime;                                  		// 0x0154 (0x0008) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.Scene
// 0x0000 (0x003C - 0x003C)
class UScene : public UObject
{
public:
public:
};

// Class Engine.InstancedFoliageActor
// 0x004D (0x0225 - 0x01D8)
class AInstancedFoliageActor : public AActor
{
public:
	struct FMap_Mirror                                 FoliageMeshes;                                    		// 0x01D8 (0x003C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	class UStaticMesh*                                 SelectedMesh;                                     		// 0x0214 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	TArray< class UInstancedStaticMeshComponent* >     InstancedStaticMeshComponents;                    		// 0x0218 (0x000C) [0x000000000448200A]              ( CPF_Const | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	unsigned char                                      DetailMode;                                       		// 0x0224 (0x0001) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
public:
};

// Class Engine.InteractiveFoliageActor
// 0x0058 (0x0238 - 0x01E0)
class AInteractiveFoliageActor : public AStaticMeshActor
{
public:
	class UCylinderComponent*                          CylinderComponent;                                		// 0x01E0 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FVector                                     TouchingActorEntryPosition;                       		// 0x01E4 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     FoliageVelocity;                                  		// 0x01F0 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     FoliageForce;                                     		// 0x01FC (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     FoliagePosition;                                  		// 0x0208 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	float                                              FoliageDamageImpulseScale;                        		// 0x0214 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FoliageTouchImpulseScale;                         		// 0x0218 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FoliageStiffness;                                 		// 0x021C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FoliageStiffnessQuadratic;                        		// 0x0220 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FoliageDamping;                                   		// 0x0224 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxDamageImpulse;                                 		// 0x0228 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxTouchImpulse;                                  		// 0x022C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxForce;                                         		// 0x0230 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Mass;                                             		// 0x0234 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.InteractiveFoliageComponent
// 0x0004 (0x0270 - 0x026C)
class UInteractiveFoliageComponent : public UStaticMeshComponent
{
public:
	struct FPointer                                    FoliageSceneProxy;                                		// 0x026C (0x0004) [0x0000000000201002]              ( CPF_Const | CPF_Native )
public:
};

// Class Engine.ActorFactoryInteractiveFoliage
// 0x0000 (0x006C - 0x006C)
class UActorFactoryInteractiveFoliage : public UActorFactoryStaticMesh
{
public:
public:
};

// Class Engine.FluidInfluenceActor
// 0x0010 (0x01E8 - 0x01D8)
class AFluidInfluenceActor : public AActor
{
public:
	class UArrowComponent*                             FlowDirection;                                    		// 0x01D8 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	class USpriteComponent*                            Sprite;                                           		// 0x01DC (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UFluidInfluenceComponent*                    InfluenceComponent;                               		// 0x01E0 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	unsigned long                                      bActive : 1;                                      		// 0x01E4 (0x0004) [0x0000000000000020] [0x00000001] ( CPF_Net )
	unsigned long                                      bToggled : 1;                                     		// 0x01E4 (0x0004) [0x0000000000000020] [0x00000002] ( CPF_Net )
public:
};

// Class Engine.FluidSurfaceActor
// 0x0008 (0x01E0 - 0x01D8)
class AFluidSurfaceActor : public AActor
{
public:
	class UFluidSurfaceComponent*                      FluidComponent;                                   		// 0x01D8 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	class UParticleSystem*                             ProjectileEntryEffect;                            		// 0x01DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.FluidSurfaceActorMovable
// 0x0000 (0x01E0 - 0x01E0)
class AFluidSurfaceActorMovable : public AFluidSurfaceActor
{
public:
public:
};

// Class Engine.FluidInfluenceComponent
// 0x0060 (0x0244 - 0x01E4)
class UFluidInfluenceComponent : public UPrimitiveComponent
{
public:
	unsigned long                                      bActive : 1;                                      		// 0x01E4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      RaindropFillEntireFluid : 1;                      		// 0x01E4 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bIsToggleTriggered : 1;                           		// 0x01E4 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	class AFluidSurfaceActor*                          FluidActor;                                       		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      InfluenceType;                                    		// 0x01EC (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxDistance;                                      		// 0x01F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WaveStrength;                                     		// 0x01F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WaveFrequency;                                    		// 0x01F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WavePhase;                                        		// 0x01FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WaveRadius;                                       		// 0x0200 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RaindropAreaRadius;                               		// 0x0204 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RaindropRadius;                                   		// 0x0208 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RaindropStrength;                                 		// 0x020C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RaindropRate;                                     		// 0x0210 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FlowSpeed;                                        		// 0x0214 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                FlowNumRipples;                                   		// 0x0218 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FlowSideMotionRadius;                             		// 0x021C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FlowWaveRadius;                                   		// 0x0220 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FlowStrength;                                     		// 0x0224 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FlowFrequency;                                    		// 0x0228 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SphereOuterRadius;                                		// 0x022C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SphereInnerRadius;                                		// 0x0230 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SphereStrength;                                   		// 0x0234 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CurrentAngle;                                     		// 0x0238 (0x0004) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
	float                                              CurrentTimer;                                     		// 0x023C (0x0004) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
	class AFluidSurfaceActor*                          CurrentFluidActor;                                		// 0x0240 (0x0004) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
public:
};

// Class Engine.FluidSurfaceComponent
// 0x00E0 (0x02C4 - 0x01E4)
class UFluidSurfaceComponent : public UPrimitiveComponent
{
public:
	class UMaterialInterface*                          FluidMaterial;                                    		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                LightMapResolution;                               		// 0x01E8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FLightmassPrimitiveSettings                 LightmassSettings;                                		// 0x01EC (0x001C) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      EnableSimulation : 1;                             		// 0x0208 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      EnableDetail : 1;                                 		// 0x0208 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bTiling : 1;                                      		// 0x0208 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bPause : 1;                                       		// 0x0208 (0x0004) [0x0000000000002001] [0x00000008] ( CPF_Edit | CPF_Transient )
	unsigned long                                      bShowSimulationNormals : 1;                       		// 0x0208 (0x0004) [0x0000000000002001] [0x00000010] ( CPF_Edit | CPF_Transient )
	unsigned long                                      bShowSimulationPosition : 1;                      		// 0x0208 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bShowDetailNormals : 1;                           		// 0x0208 (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bShowDetailPosition : 1;                          		// 0x0208 (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bShowFluidSimulation : 1;                         		// 0x0208 (0x0004) [0x0000000000002001] [0x00000100] ( CPF_Edit | CPF_Transient )
	unsigned long                                      bShowFluidDetail : 1;                             		// 0x0208 (0x0004) [0x0000000000002001] [0x00000200] ( CPF_Edit | CPF_Transient )
	unsigned long                                      bTestRipple : 1;                                  		// 0x0208 (0x0004) [0x0000000000000001] [0x00000400] ( CPF_Edit )
	unsigned long                                      bTestRippleCenterOnDetail : 1;                    		// 0x0208 (0x0004) [0x0000000000000001] [0x00000800] ( CPF_Edit )
	int                                                SimulationQuadsX;                                 		// 0x020C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                SimulationQuadsY;                                 		// 0x0210 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              GridSpacing;                                      		// 0x0214 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              GridSpacingLowRes;                                		// 0x0218 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class AActor*                                      TargetSimulation;                                 		// 0x021C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              GPUTessellationFactor;                            		// 0x0220 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FluidDamping;                                     		// 0x0224 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FluidTravelSpeed;                                 		// 0x0228 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FluidHeightScale;                                 		// 0x022C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FluidUpdateRate;                                  		// 0x0230 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceImpact;                                      		// 0x0234 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ForceContinuous;                                  		// 0x0238 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LightingContrast;                                 		// 0x023C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class AActor*                                      TargetDetail;                                     		// 0x0240 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DeactivationDistance;                             		// 0x0244 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                DetailResolution;                                 		// 0x0248 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DetailSize;                                       		// 0x024C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DetailDamping;                                    		// 0x0250 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DetailTravelSpeed;                                		// 0x0254 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DetailTransfer;                                   		// 0x0258 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DetailHeightScale;                                		// 0x025C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              DetailUpdateRate;                                 		// 0x0260 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              NormalLength;                                     		// 0x0264 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TestRippleSpeed;                                  		// 0x0268 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TestRippleFrequency;                              		// 0x026C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TestRippleRadius;                                 		// 0x0270 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FluidWidth;                                       		// 0x0274 (0x0004) [0x0000000000000000]              
	float                                              FluidHeight;                                      		// 0x0278 (0x0004) [0x0000000000000000]              
	float                                              TestRippleTime;                                   		// 0x027C (0x0004) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
	float                                              TestRippleAngle;                                  		// 0x0280 (0x0004) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
	float                                              DeactivationTimer;                                		// 0x0284 (0x0004) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
	float                                              ViewDistance;                                     		// 0x0288 (0x0004) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
	struct FVector                                     SimulationPosition;                               		// 0x028C (0x000C) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
	struct FVector                                     DetailPosition;                                   		// 0x0298 (0x000C) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
	TArray< unsigned char >                            ClampMap;                                         		// 0x02A4 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< class UShadowMap2D* >                      ShadowMaps;                                       		// 0x02B0 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	struct FLightMapRef                                LightMap;                                         		// 0x02BC (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FPointer                                    FluidSimulation;                                  		// 0x02C0 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.SpeedTreeActor
// 0x0004 (0x01DC - 0x01D8)
class ASpeedTreeActor : public AActor
{
public:
	class USpeedTreeComponent*                         SpeedTreeComponent;                               		// 0x01D8 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.SpeedTreeComponent
// 0x00B8 (0x029C - 0x01E4)
class USpeedTreeComponent : public UPrimitiveComponent
{
public:
	class USpeedTree*                                  SpeedTree;                                        		// 0x01E4 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned long                                      bUseLeafCards : 1;                                		// 0x01E8 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bUseLeafMeshes : 1;                               		// 0x01E8 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bUseBranches : 1;                                 		// 0x01E8 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bUseFronds : 1;                                   		// 0x01E8 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bUseBillboards : 1;                               		// 0x01E8 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	float                                              Lod3DStart;                                       		// 0x01EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Lod3DEnd;                                         		// 0x01F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LodBillboardStart;                                		// 0x01F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LodBillboardEnd;                                  		// 0x01F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LodLevelOverride;                                 		// 0x01FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          Branch1Material;                                  		// 0x0200 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          Branch2Material;                                  		// 0x0204 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          FrondMaterial;                                    		// 0x0208 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          LeafCardMaterial;                                 		// 0x020C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          LeafMeshMaterial;                                 		// 0x0210 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          BillboardMaterial;                                		// 0x0214 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UTexture2D*                                  SpeedTreeIcon;                                    		// 0x0218 (0x0004) [0x0000000000000000]              
	TArray< struct FSpeedTreeStaticLight >             StaticLights;                                     		// 0x021C (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	struct FLightMapRef                                BranchLightMap;                                   		// 0x0228 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FLightMapRef                                FrondLightMap;                                    		// 0x022C (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FLightMapRef                                LeafMeshLightMap;                                 		// 0x0230 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FLightMapRef                                LeafCardLightMap;                                 		// 0x0234 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FLightMapRef                                BillboardLightMap;                                		// 0x0238 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x023C (0x0004) MISSED OFFSET
	struct FMatrix                                     RotationOnlyMatrix;                               		// 0x0240 (0x0040) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FLightmassPrimitiveSettings                 LightmassSettings;                                		// 0x0280 (0x001C) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SpeedTreeActorFactory
// 0x0004 (0x0060 - 0x005C)
class USpeedTreeActorFactory : public UActorFactory
{
public:
	class USpeedTree*                                  SpeedTree;                                        		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SpeedTreeComponentFactory
// 0x0004 (0x0044 - 0x0040)
class USpeedTreeComponentFactory : public UPrimitiveComponentFactory
{
public:
	class USpeedTreeComponent*                         SpeedTreeComponent;                               		// 0x0040 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.SpeedTree
// 0x0044 (0x0080 - 0x003C)
class USpeedTree : public UObject
{
public:
	unsigned long                                      bLegacySpeedTree : 1;                             		// 0x003C (0x0004) [0x0000000000000002] [0x00000001] ( CPF_Const )
	struct FPointer                                    SRH;                                              		// 0x0040 (0x0004) [0x0000000000201002]              ( CPF_Const | CPF_Native )
	float                                              LeafStaticShadowOpacity;                          		// 0x0044 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          Branch1Material;                                  		// 0x0048 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          Branch2Material;                                  		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          FrondMaterial;                                    		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          LeafCardMaterial;                                 		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          LeafMeshMaterial;                                 		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          BillboardMaterial;                                		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WindStrength;                                     		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     WindDirection;                                    		// 0x0064 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FGuid                                       LightingGuid;                                     		// 0x0070 (0x0010) [0x0000000000000002]              ( CPF_Const )
public:
};

// Class Engine.LensFlareSource
// 0x0008 (0x01E0 - 0x01D8)
class ALensFlareSource : public AActor
{
public:
	class ULensFlareComponent*                         LensFlareComp;                                    		// 0x01D8 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	unsigned long                                      bCurrentlyActive : 1;                             		// 0x01DC (0x0004) [0x0000000000000020] [0x00000001] ( CPF_Net )
public:
};

// Class Engine.LensFlareComponent
// 0x004C (0x0230 - 0x01E4)
class ULensFlareComponent : public UPrimitiveComponent
{
public:
	class ULensFlare*                                  Template;                                         		// 0x01E4 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	class UDrawLightConeComponent*                     PreviewInnerCone;                                 		// 0x01E8 (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UDrawLightConeComponent*                     PreviewOuterCone;                                 		// 0x01EC (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UDrawLightRadiusComponent*                   PreviewRadius;                                    		// 0x01F0 (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
	unsigned long                                      bAutoActivate : 1;                                		// 0x01F4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bIsActive : 1;                                    		// 0x01F4 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bHasTranslucency : 1;                             		// 0x01F4 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bHasUnlitTranslucency : 1;                        		// 0x01F4 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      bHasUnlitDistortion : 1;                          		// 0x01F4 (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	unsigned long                                      bUsesSceneColor : 1;                              		// 0x01F4 (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      bHasSeparateTranslucency : 1;                     		// 0x01F4 (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	unsigned long                                      bUseTrueConeCalculation : 1;                      		// 0x01F4 (0x0004) [0x0000000000002000] [0x00000080] ( CPF_Transient )
	unsigned long                                      bVisibleForMobile : 1;                            		// 0x01F4 (0x0004) [0x0000000000000000] [0x00000100] 
	float                                              OuterCone;                                        		// 0x01F8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              InnerCone;                                        		// 0x01FC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              ConeFudgeFactor;                                  		// 0x0200 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              Radius;                                           		// 0x0204 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              MinStrength;                                      		// 0x0208 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FLinearColor                                SourceColor;                                      		// 0x020C (0x0010) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FLensFlareElementMaterials >        Materials;                                        		// 0x021C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	struct FPointer                                    ReleaseResourcesFence;                            		// 0x0228 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              NextTraceTime;                                    		// 0x022C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.LensFlare
// 0x01C4 (0x0200 - 0x003C)
class ULensFlare : public UObject
{
public:
	struct FLensFlareElement                           SourceElement;                                    		// 0x003C (0x0144) [0x0000000004480008]              ( CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	class UStaticMesh*                                 SourceMesh;                                       		// 0x0180 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      SourceDPG;                                        		// 0x0184 (0x0001) [0x0000000000000002]              ( CPF_Const )
	unsigned char                                      ReflectionsDPG;                                   		// 0x0185 (0x0001) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	TArray< struct FLensFlareElement >                 Reflections;                                      		// 0x0188 (0x000C) [0x0000000004480008]              ( CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	float                                              OuterCone;                                        		// 0x0194 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              InnerCone;                                        		// 0x0198 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ConeFudgeFactor;                                  		// 0x019C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Radius;                                           		// 0x01A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bUseTrueConeCalculation : 1;                      		// 0x01A4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bUseFixedRelativeBoundingBox : 1;                 		// 0x01A4 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bRenderDebugLines : 1;                            		// 0x01A4 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      ThumbnailImageOutOfDate : 1;                      		// 0x01A4 (0x0004) [0x0000000000000000] [0x00000008] 
	float                                              MinStrength;                                      		// 0x01A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FRawDistributionFloat                       ScreenPercentageMap;                              		// 0x01AC (0x001C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FBox                                        FixedRelativeBoundingBox;                         		// 0x01C8 (0x001C) [0x0000000000000001]              ( CPF_Edit )
	class UInterpCurveEdSetup*                         CurveEdSetup;                                     		// 0x01E4 (0x0004) [0x0000000000000008]              ( CPF_ExportObject )
	int                                                ReflectionCount;                                  		// 0x01E8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FRotator                                    ThumbnailAngle;                                   		// 0x01EC (0x000C) [0x0000000000000000]              
	float                                              ThumbnailDistance;                                		// 0x01F8 (0x0004) [0x0000000000000000]              
	class UTexture2D*                                  ThumbnailImage;                                   		// 0x01FC (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.TextureFlipBook
// 0x0040 (0x01F8 - 0x01B8)
class UTextureFlipBook : public UTexture2D
{
public:
	struct FPointer                                    VfTable_FTickableObject;                          		// 0x01B8 (0x0004) [0x0000000000801002]              ( CPF_Const | CPF_Native | CPF_NoExport )
	float                                              TimeIntoMovie;                                    		// 0x01BC (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              TimeSinceLastFrame;                               		// 0x01C0 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              HorizontalScale;                                  		// 0x01C4 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              VerticalScale;                                    		// 0x01C8 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	unsigned long                                      bPaused : 1;                                      		// 0x01CC (0x0004) [0x0000000000000002] [0x00000001] ( CPF_Const )
	unsigned long                                      bStopped : 1;                                     		// 0x01CC (0x0004) [0x0000000000000002] [0x00000002] ( CPF_Const )
	unsigned long                                      bLooping : 1;                                     		// 0x01CC (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bAutoPlay : 1;                                    		// 0x01CC (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	int                                                HorizontalImages;                                 		// 0x01D0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                VerticalImages;                                   		// 0x01D4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      FBMethod;                                         		// 0x01D8 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              FrameRate;                                        		// 0x01DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FrameTime;                                        		// 0x01E0 (0x0004) [0x0000000000000000]              
	int                                                CurrentRow;                                       		// 0x01E4 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                CurrentColumn;                                    		// 0x01E8 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              RenderOffsetU;                                    		// 0x01EC (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              RenderOffsetV;                                    		// 0x01F0 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FPointer                                    ReleaseResourcesFence;                            		// 0x01F4 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
public:
};

// Class Engine.Texture2DComposite
// 0x0018 (0x0108 - 0x00F0)
class UTexture2DComposite : public UTexture
{
public:
	TArray< struct FSourceTexture2DRegion >            SourceRegions;                                    		// 0x00F0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                MaxTextureSize;                                   		// 0x00FC (0x0004) [0x0000000000000000]              
	int                                                DestSizeX;                                        		// 0x0100 (0x0004) [0x0000000000000000]              
	int                                                DestSizeY;                                        		// 0x0104 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.Texture2DDynamic
// 0x0014 (0x0104 - 0x00F0)
class UTexture2DDynamic : public UTexture
{
public:
	int                                                SizeX;                                            		// 0x00F0 (0x0004) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
	int                                                SizeY;                                            		// 0x00F4 (0x0004) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
	unsigned char                                      Format;                                           		// 0x00F8 (0x0001) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
	int                                                NumMips;                                          		// 0x00FC (0x0004) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
	unsigned long                                      bIsResolveTarget : 1;                             		// 0x0100 (0x0004) [0x0000000000003000] [0x00000001] ( CPF_Native | CPF_Transient )
public:
};

// Class Engine.TextureCube
// 0x002C (0x011C - 0x00F0)
class UTextureCube : public UTexture
{
public:
	int                                                SizeX;                                            		// 0x00F0 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                SizeY;                                            		// 0x00F4 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	unsigned char                                      Format;                                           		// 0x00F8 (0x0001) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                NumMips;                                          		// 0x00FC (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	unsigned long                                      bIsCubemapValid : 1;                              		// 0x0100 (0x0004) [0x0000000000002002] [0x00000001] ( CPF_Const | CPF_Transient )
	class UTexture2D*                                  FacePosX;                                         		// 0x0104 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	class UTexture2D*                                  FaceNegX;                                         		// 0x0108 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	class UTexture2D*                                  FacePosY;                                         		// 0x010C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	class UTexture2D*                                  FaceNegY;                                         		// 0x0110 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	class UTexture2D*                                  FacePosZ;                                         		// 0x0114 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	class UTexture2D*                                  FaceNegZ;                                         		// 0x0118 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
public:
};

// Class Engine.TextureMovie
// 0x0050 (0x0140 - 0x00F0)
class UTextureMovie : public UTexture
{
public:
	int                                                SizeX;                                            		// 0x00F0 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                SizeY;                                            		// 0x00F4 (0x0004) [0x0000000000000002]              ( CPF_Const )
	unsigned char                                      Format;                                           		// 0x00F8 (0x0001) [0x0000000000000002]              ( CPF_Const )
	unsigned char                                      AddressX;                                         		// 0x00F9 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      AddressY;                                         		// 0x00FA (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      MovieStreamSource;                                		// 0x00FB (0x0001) [0x0000000000000001]              ( CPF_Edit )
	class UClass*                                      DecoderClass;                                     		// 0x00FC (0x0004) [0x0000000000000002]              ( CPF_Const )
	class UCodecMovie*                                 Decoder;                                          		// 0x0100 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	unsigned long                                      Paused : 1;                                       		// 0x0104 (0x0004) [0x0000000000002002] [0x00000001] ( CPF_Const | CPF_Transient )
	unsigned long                                      Stopped : 1;                                      		// 0x0104 (0x0004) [0x0000000000002002] [0x00000002] ( CPF_Const | CPF_Transient )
	unsigned long                                      Looping : 1;                                      		// 0x0104 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      ResetOnLastFrame : 1;                             		// 0x0104 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      AutoPlay : 1;                                     		// 0x0104 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	struct FUntypedBulkData_Mirror                     Data;                                             		// 0x0108 (0x0034) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FPointer                                    ReleaseCodecFence;                                		// 0x013C (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
public:
};

// Class Engine.TextureRenderTarget
// 0x0008 (0x00F8 - 0x00F0)
class UTextureRenderTarget : public UTexture
{
public:
	unsigned long                                      bUpdateImmediate : 1;                             		// 0x00F0 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bNeedsTwoCopies : 1;                              		// 0x00F0 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bRenderOnce : 1;                                  		// 0x00F0 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	float                                              TargetGamma;                                      		// 0x00F4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.TextureRenderTarget2D
// 0x0020 (0x0118 - 0x00F8)
class UTextureRenderTarget2D : public UTextureRenderTarget
{
public:
	int                                                SizeX;                                            		// 0x00F8 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	int                                                SizeY;                                            		// 0x00FC (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned char                                      Format;                                           		// 0x0100 (0x0001) [0x0000000000000002]              ( CPF_Const )
	unsigned char                                      AddressX;                                         		// 0x0101 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      AddressY;                                         		// 0x0102 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearColor                                ClearColor;                                       		// 0x0104 (0x0010) [0x0000000000000002]              ( CPF_Const )
	unsigned long                                      bForceLinearGamma : 1;                            		// 0x0114 (0x0004) [0x0000000000002003] [0x00000001] ( CPF_Edit | CPF_Const | CPF_Transient )
public:
};

// Class Engine.ScriptedTexture
// 0x0010 (0x0128 - 0x0118)
class UScriptedTexture : public UTextureRenderTarget2D
{
public:
	unsigned long                                      bNeedsUpdate : 1;                                 		// 0x0118 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bSkipNextClear : 1;                               		// 0x0118 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	struct FScriptDelegate                             __Render__Delegate;                               		// 0x011C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.TextureRenderTargetCube
// 0x0005 (0x00FD - 0x00F8)
class UTextureRenderTargetCube : public UTextureRenderTarget
{
public:
	int                                                SizeX;                                            		// 0x00F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      Format;                                           		// 0x00FC (0x0001) [0x0000000000000002]              ( CPF_Const )
public:
};

// Class Engine.AudioDevice
// 0x02A8 (0x02E8 - 0x0040)
class UAudioDevice : public USubsystem
{
public:
	int                                                MaxChannels;                                      		// 0x0040 (0x0004) [0x0000000000004002]              ( CPF_Const | CPF_Config )
	int                                                CommonAudioPoolSize;                              		// 0x0044 (0x0004) [0x0000000000004002]              ( CPF_Const | CPF_Config )
	float                                              LowPassFilterResonance;                           		// 0x0048 (0x0004) [0x0000000000004002]              ( CPF_Const | CPF_Config )
	float                                              MinCompressedDurationEditor;                      		// 0x004C (0x0004) [0x0000000000004002]              ( CPF_Const | CPF_Config )
	float                                              MinCompressedDurationGame;                        		// 0x0050 (0x0004) [0x0000000000004002]              ( CPF_Const | CPF_Config )
	float                                              DeafFactor;                                       		// 0x0054 (0x0004) [0x0000000000000000]              
	float                                              fAGPB_GlobalPitchModifier;                        		// 0x0058 (0x0004) [0x0000000000000000]              
	float                                              fAGPB_GlobalHFGainModifier;                       		// 0x005C (0x0004) [0x0000000000000000]              
	unsigned long                                      bMuteAllSounds : 1;                               		// 0x0060 (0x0004) [0x0000000000004000] [0x00000001] ( CPF_Config )
	unsigned long                                      bAllowSoundsInBg : 1;                             		// 0x0060 (0x0004) [0x0000000000004000] [0x00000002] ( CPF_Config )
	unsigned long                                      bGameWasTicking : 1;                              		// 0x0060 (0x0004) [0x0000000000001002] [0x00000004] ( CPF_Const | CPF_Native )
	unsigned long                                      bInitialized : 1;                                 		// 0x0060 (0x0004) [0x0000000000001000] [0x00000008] ( CPF_Native )
	unsigned long                                      bVoiceChat : 1;                                   		// 0x0060 (0x0004) [0x0000000000004000] [0x00000010] ( CPF_Config )
	unsigned long                                      bMicrophone : 1;                                  		// 0x0060 (0x0004) [0x0000000000004000] [0x00000020] ( CPF_Config )
	unsigned long                                      bPushToTalk : 1;                                  		// 0x0060 (0x0004) [0x0000000000004000] [0x00000040] ( CPF_Config )
	struct FString                                     ChirpInSoundNodeWaveName;                         		// 0x0064 (0x000C) [0x0000000000404002]              ( CPF_Const | CPF_Config | CPF_NeedCtorLink )
	class USoundNodeWave*                              ChirpInSoundNodeWave;                             		// 0x0070 (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FString                                     ChirpOutSoundNodeWaveName;                        		// 0x0074 (0x000C) [0x0000000000404002]              ( CPF_Const | CPF_Config | CPF_NeedCtorLink )
	class USoundNodeWave*                              ChirpOutSoundNodeWave;                            		// 0x0080 (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FPointer                                    CommonAudioPool;                                  		// 0x0084 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	int                                                CommonAudioPoolFreeBytes;                         		// 0x0088 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< class UAudioComponent* >                   AudioComponents;                                  		// 0x008C (0x000C) [0x000000000448200A]              ( CPF_Const | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	TArray< struct FPointer >                          Sources;                                          		// 0x0098 (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< struct FPointer >                          FreeSources;                                      		// 0x00A4 (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	unsigned char                                      UnknownData00[ 0x3C ];                            		// 0x00B0 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.AudioDevice.WaveInstanceSourceMap
	TArray< struct FListener >                         Listeners;                                        		// 0x00EC (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FQWord                                      CurrentTick;                                      		// 0x00F8 (0x0008) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	unsigned char                                      UnknownData01[ 0x3C ];                            		// 0x0100 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.AudioDevice.SoundClasses
	unsigned char                                      UnknownData02[ 0x3C ];                            		// 0x013C (0x003C) UNKNOWN PROPERTY: MapProperty Engine.AudioDevice.SourceSoundClasses
	unsigned char                                      UnknownData03[ 0x3C ];                            		// 0x0178 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.AudioDevice.CurrentSoundClasses
	unsigned char                                      UnknownData04[ 0x3C ];                            		// 0x01B4 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.AudioDevice.DestinationSoundClasses
	TArray< struct FSoundClassVolume >                 ClassVolumes;                                     		// 0x01F0 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	unsigned char                                      UnknownData05[ 0x3C ];                            		// 0x01FC (0x003C) UNKNOWN PROPERTY: MapProperty Engine.AudioDevice.SoundModes
	struct FPointer                                    Effects;                                          		// 0x0238 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FName                                       BaseSoundModeName;                                		// 0x023C (0x0008) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	class USoundMode*                                  CurrentMode;                                      		// 0x0244 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FDouble                                     SoundModeStartTime;                               		// 0x0248 (0x0008) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FDouble                                     SoundModeFadeInStartTime;                         		// 0x0250 (0x0008) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FDouble                                     SoundModeFadeInEndTime;                           		// 0x0258 (0x0008) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FDouble                                     SoundModeEndTime;                                 		// 0x0260 (0x0008) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	int                                                ListenerVolumeIndex;                              		// 0x0268 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FInteriorSettings                           ListenerInteriorSettings;                         		// 0x026C (0x0024) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FDouble                                     InteriorStartTime;                                		// 0x0290 (0x0008) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FDouble                                     InteriorEndTime;                                  		// 0x0298 (0x0008) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FDouble                                     ExteriorEndTime;                                  		// 0x02A0 (0x0008) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FDouble                                     InteriorLPFEndTime;                               		// 0x02A8 (0x0008) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FDouble                                     ExteriorLPFEndTime;                               		// 0x02B0 (0x0008) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              InteriorVolumeInterp;                             		// 0x02B8 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              InteriorLPFInterp;                                		// 0x02BC (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              ExteriorVolumeInterp;                             		// 0x02C0 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              ExteriorLPFInterp;                                		// 0x02C4 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	class UAudioComponent*                             TestAudioComponent;                               		// 0x02C8 (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FPointer                                    TextToSpeech;                                     		// 0x02CC (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	unsigned char                                      DebugState;                                       		// 0x02D0 (0x0001) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              TransientMasterVolume;                            		// 0x02D4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              LastUpdateTime;                                   		// 0x02D8 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                nVoiceChatVolume;                                 		// 0x02DC (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                nMicrophoneVolume;                                		// 0x02E0 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                nMicrophoneThreshold;                             		// 0x02E4 (0x0004) [0x0000000000004000]              ( CPF_Config )
public:
};

// Class Engine.SoundClass
// 0x0070 (0x00AC - 0x003C)
class USoundClass : public UObject
{
public:
	struct FSoundClassProperties                       Properties;                                       		// 0x003C (0x0020) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FName >                             ChildClassNames;                                  		// 0x005C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      bIsChild : 1;                                     		// 0x0068 (0x0004) [0x0000000000000000] [0x00000001] 
	int                                                MenuID;                                           		// 0x006C (0x0004) [0x0000000000000000]              
	unsigned char                                      UnknownData00[ 0x3C ];                            		// 0x0070 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.SoundClass.EditorData
public:
};

// Class Engine.SoundMode
// 0x0050 (0x008C - 0x003C)
class USoundMode : public UObject
{
public:
	unsigned long                                      bApplyEQ : 1;                                     		// 0x003C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	struct FAudioEQEffect                              EQSettings;                                       		// 0x0040 (0x0024) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FSoundClassAdjuster >               SoundClassEffects;                                		// 0x0064 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              InitialDelay;                                     		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FadeInTime;                                       		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              Duration;                                         		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FadeOutTime;                                      		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     Description;                                      		// 0x0080 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.DebugCameraController
// 0x0030 (0x0610 - 0x05E0)
class ADebugCameraController : public APlayerController
{
public:
	struct FName                                       PrimaryKey;                                       		// 0x05E0 (0x0008) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	struct FName                                       SecondaryKey;                                     		// 0x05E8 (0x0008) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	struct FName                                       UnselectKey;                                      		// 0x05F0 (0x0008) [0x0000000000044000]              ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bShowSelectedInfo : 1;                            		// 0x05F8 (0x0004) [0x0000000000044000] [0x00000001] ( CPF_Config | CPF_GlobalConfig )
	unsigned long                                      bIsFrozenRendering : 1;                           		// 0x05F8 (0x0004) [0x0000000000000000] [0x00000002] 
	class APlayerController*                           OryginalControllerRef;                            		// 0x05FC (0x0004) [0x0000000000000000]              
	class UPlayer*                                     OryginalPlayer;                                   		// 0x0600 (0x0004) [0x0000000000000000]              
	class UDrawFrustumComponent*                       DrawFrustum;                                      		// 0x0604 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	class AActor*                                      SelectedActor;                                    		// 0x0608 (0x0004) [0x0000000000000000]              
	class UPrimitiveComponent*                         SelectedComponent;                                		// 0x060C (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.MatineePawn
// 0x0004 (0x04A8 - 0x04A4)
class AMatineePawn : public APawn
{
public:
	class USkeletalMesh*                               PreviewMesh;                                      		// 0x04A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.Scout
// 0x008C (0x0530 - 0x04A4)
class AScout : public APawn
{
public:
	TArray< struct FPathSizeInfo >                     PathSizes;                                        		// 0x04A4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              TestJumpZ;                                        		// 0x04B0 (0x0004) [0x0000000000000000]              
	float                                              TestGroundSpeed;                                  		// 0x04B4 (0x0004) [0x0000000000000000]              
	float                                              TestMaxFallSpeed;                                 		// 0x04B8 (0x0004) [0x0000000000000000]              
	float                                              TestFallSpeed;                                    		// 0x04BC (0x0004) [0x0000000000000000]              
	float                                              MaxLandingVelocity;                               		// 0x04C0 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                MinNumPlayerStarts;                               		// 0x04C4 (0x0004) [0x0000000000000000]              
	class UClass*                                      DefaultReachSpecClass;                            		// 0x04C8 (0x0004) [0x0000000000000000]              
	TArray< struct FColor >                            EdgePathColors;                                   		// 0x04CC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              NavMeshGen_StepSize;                              		// 0x04D8 (0x0004) [0x0000000000000000]              
	float                                              NavMeshGen_EntityHalfHeight;                      		// 0x04DC (0x0004) [0x0000000000000000]              
	float                                              NavMeshGen_StartingHeightOffset;                  		// 0x04E0 (0x0004) [0x0000000000000000]              
	float                                              NavMeshGen_MaxDropHeight;                         		// 0x04E4 (0x0004) [0x0000000000000000]              
	float                                              NavMeshGen_MaxStepHeight;                         		// 0x04E8 (0x0004) [0x0000000000000000]              
	float                                              NavMeshGen_VertZDeltaSnapThresh;                  		// 0x04EC (0x0004) [0x0000000000000000]              
	float                                              NavMeshGen_MinPolyArea;                           		// 0x04F0 (0x0004) [0x0000000000000000]              
	float                                              NavMeshGen_BorderBackfill_CheckDist;              		// 0x04F4 (0x0004) [0x0000000000000000]              
	float                                              NavMeshGen_MinMergeDotAreaThreshold;              		// 0x04F8 (0x0004) [0x0000000000000000]              
	float                                              NavMeshGen_MinMergeDotSmallArea;                  		// 0x04FC (0x0004) [0x0000000000000000]              
	float                                              NavMeshGen_MinMergeDotLargeArea;                  		// 0x0500 (0x0004) [0x0000000000000000]              
	float                                              NavMeshGen_MaxPolyHeight;                         		// 0x0504 (0x0004) [0x0000000000000000]              
	float                                              NavMeshGen_HeightMergeThreshold;                  		// 0x0508 (0x0004) [0x0000000000000000]              
	float                                              NavMeshGen_EdgeMaxDelta;                          		// 0x050C (0x0004) [0x0000000000000000]              
	float                                              NavMeshGen_MaxGroundCheckSize;                    		// 0x0510 (0x0004) [0x0000000000000000]              
	float                                              NavMeshGen_MinEdgeLength;                         		// 0x0514 (0x0004) [0x0000000000000000]              
	unsigned long                                      NavMeshGen_ExpansionDoObstacleMeshSimplification : 1;		// 0x0518 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bHightlightOneWayReachSpecs : 1;                  		// 0x0518 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	float                                              MinMantleFallDist;                                		// 0x051C (0x0004) [0x0000000000000000]              
	float                                              MaxMantleFallDist;                                		// 0x0520 (0x0004) [0x0000000000000000]              
	float                                              MinMantleLateralDist;                             		// 0x0524 (0x0004) [0x0000000000000000]              
	float                                              MaxMantleLateralDist;                             		// 0x0528 (0x0004) [0x0000000000000000]              
	float                                              MaxMantleFallTime;                                		// 0x052C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.Light
// 0x0008 (0x01E0 - 0x01D8)
class ALight : public AActor
{
public:
	class ULightComponent*                             LightComponent;                                   		// 0x01D8 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	unsigned long                                      bEnabled : 1;                                     		// 0x01DC (0x0004) [0x0000000000000020] [0x00000001] ( CPF_Net )
public:
};

// Class Engine.DirectionalLight
// 0x0000 (0x01E0 - 0x01E0)
class ADirectionalLight : public ALight
{
public:
public:
};

// Class Engine.DirectionalLightToggleable
// 0x0000 (0x01E0 - 0x01E0)
class ADirectionalLightToggleable : public ADirectionalLight
{
public:
public:
};

// Class Engine.DominantDirectionalLight
// 0x0000 (0x01E0 - 0x01E0)
class ADominantDirectionalLight : public ADirectionalLight
{
public:
public:
};

// Class Engine.DominantDirectionalLightMovable
// 0x0000 (0x01E0 - 0x01E0)
class ADominantDirectionalLightMovable : public ADominantDirectionalLight
{
public:
public:
};

// Class Engine.PointLight
// 0x0000 (0x01E0 - 0x01E0)
class APointLight : public ALight
{
public:
public:
};

// Class Engine.DominantPointLight
// 0x0000 (0x01E0 - 0x01E0)
class ADominantPointLight : public APointLight
{
public:
public:
};

// Class Engine.PointLightMovable
// 0x0000 (0x01E0 - 0x01E0)
class APointLightMovable : public APointLight
{
public:
public:
};

// Class Engine.PointLightToggleable
// 0x0000 (0x01E0 - 0x01E0)
class APointLightToggleable : public APointLight
{
public:
public:
};

// Class Engine.SkyLight
// 0x0000 (0x01E0 - 0x01E0)
class ASkyLight : public ALight
{
public:
public:
};

// Class Engine.SkyLightToggleable
// 0x0000 (0x01E0 - 0x01E0)
class ASkyLightToggleable : public ASkyLight
{
public:
public:
};

// Class Engine.SpotLight
// 0x0000 (0x01E0 - 0x01E0)
class ASpotLight : public ALight
{
public:
public:
};

// Class Engine.DominantSpotLight
// 0x0000 (0x01E0 - 0x01E0)
class ADominantSpotLight : public ASpotLight
{
public:
public:
};

// Class Engine.GeneratedMeshAreaLight
// 0x0000 (0x01E0 - 0x01E0)
class AGeneratedMeshAreaLight : public ASpotLight
{
public:
public:
};

// Class Engine.SpotLightMovable
// 0x0000 (0x01E0 - 0x01E0)
class ASpotLightMovable : public ASpotLight
{
public:
public:
};

// Class Engine.SpotLightToggleable
// 0x0000 (0x01E0 - 0x01E0)
class ASpotLightToggleable : public ASpotLight
{
public:
public:
};

// Class Engine.StaticLightCollectionActor
// 0x0010 (0x01F0 - 0x01E0)
class AStaticLightCollectionActor : public ALight
{
public:
	TArray< class ULightComponent* >                   LightComponents;                                  		// 0x01E0 (0x000C) [0x000000000448000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	int                                                MaxLightComponents;                               		// 0x01EC (0x0004) [0x0000000000004000]              ( CPF_Config )
public:
};

// Class Engine.LightComponent
// 0x012F (0x0184 - 0x0055)
class ULightComponent : public UActorComponent
{
public:
	struct FPointer                                    SceneInfo;                                        		// 0x0058 (0x0004) [0x0000000001003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x005C (0x0004) MISSED OFFSET
	struct FMatrix                                     WorldToLight;                                     		// 0x0060 (0x0040) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FMatrix                                     LightToWorld;                                     		// 0x00A0 (0x0040) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FGuid                                       LightGuid;                                        		// 0x00E0 (0x0010) [0x0000000000200002]              ( CPF_Const )
	struct FGuid                                       LightmapGuid;                                     		// 0x00F0 (0x0010) [0x0000000000200002]              ( CPF_Const )
	float                                              Brightness;                                       		// 0x0100 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FColor                                      LightColor;                                       		// 0x0104 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	class ULightFunction*                              Function;                                         		// 0x0108 (0x0004) [0x000000000440000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
	unsigned long                                      bEnabled : 1;                                     		// 0x010C (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	unsigned long                                      CastShadows : 1;                                  		// 0x010C (0x0004) [0x0000000000000003] [0x00000002] ( CPF_Edit | CPF_Const )
	unsigned long                                      CastStaticShadows : 1;                            		// 0x010C (0x0004) [0x0000000000000003] [0x00000004] ( CPF_Edit | CPF_Const )
	unsigned long                                      CastDynamicShadows : 1;                           		// 0x010C (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bCastCompositeShadow : 1;                         		// 0x010C (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bAffectCompositeShadowDirection : 1;              		// 0x010C (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bNonModulatedSelfShadowing : 1;                   		// 0x010C (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bSelfShadowOnly : 1;                              		// 0x010C (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bAllowPreShadow : 1;                              		// 0x010C (0x0004) [0x0000000000000001] [0x00000100] ( CPF_Edit )
	unsigned long                                      bForceDynamicLight : 1;                           		// 0x010C (0x0004) [0x0000000000000002] [0x00000200] ( CPF_Const )
	unsigned long                                      UseDirectLightMap : 1;                            		// 0x010C (0x0004) [0x0000000000000002] [0x00000400] ( CPF_Const )
	unsigned long                                      bHasLightEverBeenBuiltIntoLightMap : 1;           		// 0x010C (0x0004) [0x0000000000000002] [0x00000800] ( CPF_Const )
	unsigned long                                      bCanAffectDynamicPrimitivesOutsideDynamicChannel : 1;		// 0x010C (0x0004) [0x0000000000000002] [0x00001000] ( CPF_Const )
	unsigned long                                      bRenderLightShafts : 1;                           		// 0x010C (0x0004) [0x0000000000000001] [0x00002000] ( CPF_Edit )
	unsigned long                                      bUseImageReflectionSpecular : 1;                  		// 0x010C (0x0004) [0x0000000000000001] [0x00004000] ( CPF_Edit )
	unsigned long                                      bPrecomputedLightingIsValid : 1;                  		// 0x010C (0x0004) [0x0000000000000002] [0x00008000] ( CPF_Const )
	unsigned long                                      bExplicitlyAssignedLight : 1;                     		// 0x010C (0x0004) [0x0000000000000002] [0x00010000] ( CPF_Const )
	unsigned long                                      bAllowCompositingIntoDLE : 1;                     		// 0x010C (0x0004) [0x0000000000000000] [0x00020000] 
	class ULightEnvironmentComponent*                  LightEnvironment;                                 		// 0x0110 (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FLightingChannelContainer                   LightingChannels;                                 		// 0x0114 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned char                                      LightAffectsClassification;                       		// 0x0118 (0x0001) [0x0000000000020003]              ( CPF_Edit | CPF_Const | CPF_EditConst )
	unsigned char                                      LightShadowMode;                                  		// 0x0119 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearColor                                ModShadowColor;                                   		// 0x011C (0x0010) [0x0000000000000001]              ( CPF_Edit )
	float                                              ModShadowFadeoutTime;                             		// 0x012C (0x0004) [0x0000000000000000]              
	float                                              ModShadowFadeoutExponent;                         		// 0x0130 (0x0004) [0x0000000000000000]              
	int                                                LightListIndex;                                   		// 0x0134 (0x0004) [0x0000000000201002]              ( CPF_Const | CPF_Native )
	unsigned char                                      ShadowProjectionTechnique;                        		// 0x0138 (0x0001) [0x0000000000000000]              
	unsigned char                                      ShadowFilterQuality;                              		// 0x0139 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	int                                                MinShadowResolution;                              		// 0x013C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FBeastPropertiesContainer                   BeastProperties;                                  		// 0x0140 (0x001C) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	int                                                MaxShadowResolution;                              		// 0x015C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                ShadowFadeResolution;                             		// 0x0160 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OcclusionDepthRange;                              		// 0x0164 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BloomScale;                                       		// 0x0168 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BloomThreshold;                                   		// 0x016C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BloomScreenBlendThreshold;                        		// 0x0170 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      BloomTint;                                        		// 0x0174 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RadialBlurPercent;                                		// 0x0178 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OcclusionMaskDarkness;                            		// 0x017C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ReflectionSpecularBrightness;                     		// 0x0180 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.DirectionalLightComponent
// 0x0024 (0x01A8 - 0x0184)
class UDirectionalLightComponent : public ULightComponent
{
public:
	float                                              TraceDistance;                                    		// 0x0184 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WholeSceneDynamicShadowRadius;                    		// 0x0188 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                NumWholeSceneDynamicShadowCascades;               		// 0x018C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              CascadeDistributionExponent;                      		// 0x0190 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              CascadeExpansion;                                 		// 0x0194 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FLightmassDirectionalLightSettings          LightmassSettings;                                		// 0x0198 (0x0010) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.DominantDirectionalLightComponent
// 0x00C4 (0x026C - 0x01A8)
class UDominantDirectionalLightComponent : public UDirectionalLightComponent
{
public:
	unsigned char                                      UnknownData00[ 0x8 ];                             		// 0x01A8 (0x0008) MISSED OFFSET
	struct FDominantShadowInfo                         DominantLightShadowInfo;                          		// 0x01B0 (0x00B0) [0x0000000000000002]              ( CPF_Const )
	struct FArray_Mirror                               DominantLightShadowMap;                           		// 0x0260 (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
public:
};

// Class Engine.PointLightComponent
// 0x0094 (0x0218 - 0x0184)
class UPointLightComponent : public ULightComponent
{
public:
	float                                              ShadowRadiusMultiplier;                           		// 0x0184 (0x0004) [0x0000000000000000]              
	float                                              Radius;                                           		// 0x0188 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FalloffExponent;                                  		// 0x018C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ShadowFalloffExponent;                            		// 0x0190 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MinShadowFalloffRadius;                           		// 0x0194 (0x0004) [0x0000000000000000]              
	unsigned char                                      UnknownData00[ 0x8 ];                             		// 0x0198 (0x0008) MISSED OFFSET
	struct FMatrix                                     CachedParentToWorld;                              		// 0x01A0 (0x0040) [0x0000000000000002]              ( CPF_Const )
	struct FVector                                     Translation;                                      		// 0x01E0 (0x000C) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned char                                      UnknownData01[ 0x4 ];                             		// 0x01EC (0x0004) MISSED OFFSET
	struct FPlane                                      ShadowPlane;                                      		// 0x01F0 (0x0010) [0x0000000000000002]              ( CPF_Const )
	class UDrawLightRadiusComponent*                   PreviewLightRadius;                               		// 0x0200 (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FLightmassPointLightSettings                LightmassSettings;                                		// 0x0204 (0x0010) [0x0000000000000001]              ( CPF_Edit )
	class UDrawLightRadiusComponent*                   PreviewLightSourceRadius;                         		// 0x0214 (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.DominantPointLightComponent
// 0x0000 (0x0218 - 0x0218)
class UDominantPointLightComponent : public UPointLightComponent
{
public:
public:
};

// Class Engine.SpotLightComponent
// 0x0020 (0x0238 - 0x0218)
class USpotLightComponent : public UPointLightComponent
{
public:
	float                                              InnerConeAngle;                                   		// 0x0218 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OuterConeAngle;                                   		// 0x021C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LightShaftConeAngle;                              		// 0x0220 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UDrawLightConeComponent*                     PreviewInnerCone;                                 		// 0x0224 (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UDrawLightConeComponent*                     PreviewOuterCone;                                 		// 0x0228 (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
	struct FRotator                                    Rotation;                                         		// 0x022C (0x000C) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
public:
};

// Class Engine.DominantSpotLightComponent
// 0x00C4 (0x02FC - 0x0238)
class UDominantSpotLightComponent : public USpotLightComponent
{
public:
	unsigned char                                      UnknownData00[ 0x8 ];                             		// 0x0238 (0x0008) MISSED OFFSET
	struct FDominantShadowInfo                         DominantLightShadowInfo;                          		// 0x0240 (0x00B0) [0x0000000000000002]              ( CPF_Const )
	struct FArray_Mirror                               DominantLightShadowMap;                           		// 0x02F0 (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
public:
};

// Class Engine.SkyLightComponent
// 0x0020 (0x01A4 - 0x0184)
class USkyLightComponent : public ULightComponent
{
public:
	float                                              LowerBrightness;                                  		// 0x0184 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FColor                                      LowerColor;                                       		// 0x0188 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	int                                                SampleCount;                                      		// 0x018C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned long                                      bRandomizeEachSample : 1;                         		// 0x0190 (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUseLightingCache : 1;                            		// 0x0190 (0x0004) [0x0000000000000003] [0x00000002] ( CPF_Edit | CPF_Const )
	float                                              ColorPower;                                       		// 0x0194 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FBeastSkyLightPropertiesContainer           BeastSkyLightProperties;                          		// 0x0198 (0x000C) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
public:
};

// Class Engine.SphericalHarmonicLightComponent
// 0x00A0 (0x0224 - 0x0184)
class USphericalHarmonicLightComponent : public ULightComponent
{
public:
	unsigned char                                      UnknownData00[ 0xC ];                             		// 0x0184 (0x000C) MISSED OFFSET
	struct FSHVectorRGB                                WorldSpaceIncidentLighting;                       		// 0x0190 (0x0090) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bRenderBeforeModShadows : 1;                      		// 0x0220 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class Engine.LightEnvironmentComponent
// 0x001B (0x0070 - 0x0055)
class ULightEnvironmentComponent : public UActorComponent
{
public:
	unsigned long                                      bEnabled : 1;                                     		// 0x0058 (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	unsigned long                                      bForceNonCompositeDynamicLights : 1;              		// 0x0058 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bAllowDynamicShadowsOnTranslucency : 1;           		// 0x0058 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bAllowPreShadow : 1;                              		// 0x0058 (0x0004) [0x0000000000002002] [0x00000008] ( CPF_Const | CPF_Transient )
	unsigned long                                      bTranslucencyShadowed : 1;                        		// 0x0058 (0x0004) [0x0000000000002002] [0x00000010] ( CPF_Const | CPF_Transient )
	float                                              DominantShadowFactor;                             		// 0x005C (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	class ULightComponent*                             AffectingDominantLight;                           		// 0x0060 (0x0004) [0x000000000408200A]              ( CPF_Const | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	TArray< class UPrimitiveComponent* >               AffectedComponents;                               		// 0x0064 (0x000C) [0x000000000448200A]              ( CPF_Const | CPF_ExportObject | CPF_Transient | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
public:
};

// Class Engine.DynamicLightEnvironmentComponent
// 0x00A8 (0x0118 - 0x0070)
class UDynamicLightEnvironmentComponent : public ULightEnvironmentComponent
{
public:
	struct FPointer                                    State;                                            		// 0x0070 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	float                                              InvisibleUpdateTime;                              		// 0x0074 (0x0004) [0x0000000000000000]              
	float                                              MinTimeBetweenFullUpdates;                        		// 0x0078 (0x0004) [0x0000000000000000]              
	float                                              VelocityUpdateTimeScale;                          		// 0x007C (0x0004) [0x0000000000000000]              
	float                                              ShadowInterpolationSpeed;                         		// 0x0080 (0x0004) [0x0000000000000000]              
	int                                                NumVolumeVisibilitySamples;                       		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LightingBoundsScale;                              		// 0x0088 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearColor                                AmbientShadowColor;                               		// 0x008C (0x0010) [0x0000000000000000]              
	struct FVector                                     AmbientShadowSourceDirection;                     		// 0x009C (0x000C) [0x0000000000000000]              
	struct FLinearColor                                AmbientGlow;                                      		// 0x00A8 (0x0010) [0x0000000000000000]              
	float                                              LightDistance;                                    		// 0x00B8 (0x0004) [0x0000000000000000]              
	float                                              ShadowDistance;                                   		// 0x00BC (0x0004) [0x0000000000000000]              
	unsigned long                                      bCastShadows : 1;                                 		// 0x00C0 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bCompositeShadowsFromDynamicLights : 1;           		// 0x00C0 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bForceCompositeAllLights : 1;                     		// 0x00C0 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bAffectedBySmallDynamicLights : 1;                		// 0x00C0 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bUseBooleanEnvironmentShadowing : 1;              		// 0x00C0 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bShadowFromEnvironment : 1;                       		// 0x00C0 (0x0004) [0x0000000000000000] [0x00000020] 
	unsigned long                                      bDynamic : 1;                                     		// 0x00C0 (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bSynthesizeDirectionalLight : 1;                  		// 0x00C0 (0x0004) [0x0000000000000000] [0x00000080] 
	unsigned long                                      bSynthesizeSHLight : 1;                           		// 0x00C0 (0x0004) [0x0000000000000001] [0x00000100] ( CPF_Edit )
	unsigned long                                      bRequiresNonLatentUpdates : 1;                    		// 0x00C0 (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bTraceFromClosestBoundsPoint : 1;                 		// 0x00C0 (0x0004) [0x0000000000000000] [0x00000400] 
	unsigned long                                      bIsCharacterLightEnvironment : 1;                 		// 0x00C0 (0x0004) [0x0000000000000000] [0x00000800] 
	unsigned long                                      bOverrideOwnerLightingChannels : 1;               		// 0x00C0 (0x0004) [0x0000000000000000] [0x00001000] 
	unsigned long                                      bAlwaysInfluencedByDominantDirectionalLight : 1;  		// 0x00C0 (0x0004) [0x0000000000000000] [0x00002000] 
	unsigned long                                      bDisableTick : 1;                                 		// 0x00C0 (0x0004) [0x0000000000000000] [0x00004000] 
	float                                              ModShadowFadeoutTime;                             		// 0x00C4 (0x0004) [0x0000000000000000]              
	float                                              ModShadowFadeoutExponent;                         		// 0x00C8 (0x0004) [0x0000000000000000]              
	struct FLinearColor                                MaxModulatedShadowColor;                          		// 0x00CC (0x0010) [0x0000000000000000]              
	float                                              DominantShadowTransitionStartDistance;            		// 0x00DC (0x0004) [0x0000000000000000]              
	float                                              DominantShadowTransitionEndDistance;              		// 0x00E0 (0x0004) [0x0000000000000000]              
	float                                              MinShadowAngle;                                   		// 0x00E4 (0x0004) [0x0000000000000000]              
	unsigned char                                      BoundsMethod;                                     		// 0x00E8 (0x0001) [0x0000000000000000]              
	struct FBoxSphereBounds                            OverriddenBounds;                                 		// 0x00EC (0x001C) [0x0000000000000000]              
	struct FLightingChannelContainer                   OverriddenLightingChannels;                       		// 0x0108 (0x0004) [0x0000000000000000]              
	TArray< class ULightComponent* >                   OverriddenLightComponents;                        		// 0x010C (0x000C) [0x000000000448000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
public:
};

// Class Engine.ParticleLightEnvironmentComponent
// 0x0014 (0x012C - 0x0118)
class UParticleLightEnvironmentComponent : public UDynamicLightEnvironmentComponent
{
public:
	int                                                ReferenceCount;                                   		// 0x0118 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                NumPooledReuses;                                  		// 0x011C (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	class AActor*                                      SharedInstigator;                                 		// 0x0120 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	class UParticleSystem*                             SharedParticleSystem;                             		// 0x0124 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	unsigned long                                      bAllowDLESharing : 1;                             		// 0x0128 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class Engine.DrawLightConeComponent
// 0x0000 (0x01F4 - 0x01F4)
class UDrawLightConeComponent : public UDrawConeComponent
{
public:
public:
};

// Class Engine.DrawLightRadiusComponent
// 0x0000 (0x01F8 - 0x01F8)
class UDrawLightRadiusComponent : public UDrawSphereComponent
{
public:
public:
};

// Class Engine.LightFunction
// 0x0014 (0x0050 - 0x003C)
class ULightFunction : public UObject
{
public:
	class UMaterialInterface*                          SourceMaterial;                                   		// 0x003C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FVector                                     Scale;                                            		// 0x0040 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              DisabledBrightness;                               		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SkeletalMeshComponent
// 0x0415 (0x0605 - 0x01F0)
class USkeletalMeshComponent : public UMeshComponent
{
public:
	class USkeletalMesh*                               SkeletalMesh;                                     		// 0x01F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USkeletalMeshComponent*                      AttachedToSkelComponent;                          		// 0x01F4 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UAnimTree*                                   AnimTreeTemplate;                                 		// 0x01F8 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	class UAnimNode*                                   Animations;                                       		// 0x01FC (0x0004) [0x000000000440000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
	TArray< class UAnimNode* >                         AnimTickArray;                                    		// 0x0200 (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	TArray< class UAnimNode* >                         AnimAlwaysTickArray;                              		// 0x020C (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	TArray< int >                                      AnimTickRelevancyArray;                           		// 0x0218 (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	TArray< float >                                    AnimTickWeightsArray;                             		// 0x0224 (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	TArray< class USkelControlBase* >                  SkelControlTickArray;                             		// 0x0230 (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	class UPhysicsAsset*                               PhysicsAsset;                                     		// 0x023C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	class UPhysicsAssetInstance*                       PhysicsAssetInstance;                             		// 0x0240 (0x0004) [0x000000000440200A]              ( CPF_Const | CPF_ExportObject | CPF_Transient | CPF_NeedCtorLink | CPF_EditInline )
	struct FPointer                                    ApexClothing;                                     		// 0x0244 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	float                                              PhysicsWeight;                                    		// 0x0248 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              GlobalAnimRateScale;                              		// 0x024C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              StreamingDistanceMultiplier;                      		// 0x0250 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FPointer                                    MeshObject;                                       		// 0x0254 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FColor                                      WireframeColor;                                   		// 0x0258 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FBoneAtom >                         SpaceBases;                                       		// 0x025C (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FBoneAtom >                         LocalAtoms;                                       		// 0x0268 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FBoneAtom >                         CachedLocalAtoms;                                 		// 0x0274 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FBoneAtom >                         CachedSpaceBases;                                 		// 0x0280 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	int                                                LowUpdateFrameRate;                               		// 0x028C (0x0004) [0x0000000000044002]              ( CPF_Const | CPF_Config | CPF_GlobalConfig )
	TArray< float >                                    ScaleMultipliers;                                 		// 0x0290 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< unsigned char >                            RequiredBones;                                    		// 0x029C (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< unsigned char >                            ComposeOrderedRequiredBones;                      		// 0x02A8 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	class USkeletalMeshComponent*                      ParentAnimComponent;                              		// 0x02B4 (0x0004) [0x000000000408000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
	TArray< int >                                      ParentBoneMap;                                    		// 0x02B8 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< class UAnimSet* >                          AnimSets;                                         		// 0x02C4 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class UAnimSet* >                          TemporarySavedAnimSets;                           		// 0x02D0 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< class UMorphTargetSet* >                   MorphSets;                                        		// 0x02DC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FActiveMorph >                      ActiveMorphs;                                     		// 0x02E8 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	TArray< struct FActiveMorph >                      ActiveCurveMorphs;                                		// 0x02F4 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	unsigned char                                      UnknownData00[ 0x3C ];                            		// 0x0300 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.SkeletalMeshComponent.MorphTargetIndexMap
	TArray< struct FAttachment >                       Attachments;                                      		// 0x033C (0x000C) [0x0000000000680002]              ( CPF_Const | CPF_Component | CPF_NeedCtorLink )
	TArray< unsigned char >                            SkelControlIndex;                                 		// 0x0348 (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	TArray< unsigned char >                            PostPhysSkelControlIndex;                         		// 0x0354 (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	int                                                ForcedLodModel;                                   		// 0x0360 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                MinLodModel;                                      		// 0x0364 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                PredictedLODLevel;                                		// 0x0368 (0x0004) [0x0000000000000000]              
	int                                                OldPredictedLODLevel;                             		// 0x036C (0x0004) [0x0000000000000000]              
	float                                              AnimationLODDistanceFactor;                       		// 0x0370 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                AnimationLODFrameRate;                            		// 0x0374 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MaxDistanceFactor;                                		// 0x0378 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                ChunkIndexPreview;                                		// 0x037C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                SectionIndexPreview;                              		// 0x0380 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                bForceWireframe;                                  		// 0x0384 (0x0004) [0x0000000000000000]              
	int                                                bForceRefpose;                                    		// 0x0388 (0x0004) [0x0000000000000000]              
	int                                                bOldForceRefPose;                                 		// 0x038C (0x0004) [0x0000000000000000]              
	unsigned long                                      bNoSkeletonUpdate : 1;                            		// 0x0390 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	int                                                bDisplayBones;                                    		// 0x0394 (0x0004) [0x0000000000000000]              
	int                                                bShowPrePhysBones;                                		// 0x0398 (0x0004) [0x0000000000000000]              
	int                                                bHideSkin;                                        		// 0x039C (0x0004) [0x0000000000000000]              
	int                                                bForceRawOffset;                                  		// 0x03A0 (0x0004) [0x0000000000000000]              
	int                                                bIgnoreControllers;                               		// 0x03A4 (0x0004) [0x0000000000000000]              
	int                                                bTransformFromAnimParent;                         		// 0x03A8 (0x0004) [0x0000000000000000]              
	int                                                TickTag;                                          		// 0x03AC (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                InitTag;                                          		// 0x03B0 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                CachedAtomsTag;                                   		// 0x03B4 (0x0004) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	int                                                bUseSingleBodyPhysics;                            		// 0x03B8 (0x0004) [0x0000000000000002]              ( CPF_Const )
	int                                                bRequiredBonesUpToDate;                           		// 0x03BC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              MinDistFactorForKinematicUpdate;                  		// 0x03C0 (0x0004) [0x0000000000000000]              
	int                                                FramesPhysicsAsleep;                              		// 0x03C4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bHasValidBodies : 1;                              		// 0x03C8 (0x0004) [0x0000000000002002] [0x00000001] ( CPF_Const | CPF_Transient )
	unsigned long                                      bSkipAllUpdateWhenPhysicsAsleep : 1;              		// 0x03C8 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bComponentUseFixedSkelBounds : 1;                 		// 0x03C8 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bUseBoundsFromParentAnimComponent : 1;            		// 0x03C8 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bConsiderAllBodiesForBounds : 1;                  		// 0x03C8 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bUpdateSkelWhenNotRendered : 1;                   		// 0x03C8 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bIgnoreControllersWhenNotRendered : 1;            		// 0x03C8 (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bTickAnimNodesWhenNotRendered : 1;                		// 0x03C8 (0x0004) [0x0000000000000000] [0x00000080] 
	unsigned long                                      bNotUpdatingKinematicDueToDistance : 1;           		// 0x03C8 (0x0004) [0x0000000000000002] [0x00000100] ( CPF_Const )
	unsigned long                                      bForceDiscardRootMotion : 1;                      		// 0x03C8 (0x0004) [0x0000000000000001] [0x00000200] ( CPF_Edit )
	unsigned long                                      bNotifyRootMotionProcessed : 1;                   		// 0x03C8 (0x0004) [0x0000000000000001] [0x00000400] ( CPF_Edit )
	unsigned long                                      bRootMotionModeChangeNotify : 1;                  		// 0x03C8 (0x0004) [0x0000000000000000] [0x00000800] 
	unsigned long                                      bRootMotionExtractedNotify : 1;                   		// 0x03C8 (0x0004) [0x0000000000000000] [0x00001000] 
	unsigned long                                      bProcessingRootMotion : 1;                        		// 0x03C8 (0x0004) [0x0000000000002000] [0x00002000] ( CPF_Transient )
	unsigned long                                      bDisableFaceFXMaterialInstanceCreation : 1;       		// 0x03C8 (0x0004) [0x0000000000000001] [0x00004000] ( CPF_Edit )
	unsigned long                                      bDisableFaceFX : 1;                               		// 0x03C8 (0x0004) [0x0000000000000001] [0x00008000] ( CPF_Edit )
	unsigned long                                      bAnimTreeInitialised : 1;                         		// 0x03C8 (0x0004) [0x0000000000002002] [0x00010000] ( CPF_Const | CPF_Transient )
	unsigned long                                      bForceMeshObjectUpdate : 1;                       		// 0x03C8 (0x0004) [0x0000000000002000] [0x00020000] ( CPF_Transient )
	unsigned long                                      bHasPhysicsAssetInstance : 1;                     		// 0x03C8 (0x0004) [0x0000000000000003] [0x00040000] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUpdateKinematicBonesFromAnimation : 1;           		// 0x03C8 (0x0004) [0x0000000000000001] [0x00080000] ( CPF_Edit )
	unsigned long                                      bUpdateJointsFromAnimation : 1;                   		// 0x03C8 (0x0004) [0x0000000000000001] [0x00100000] ( CPF_Edit )
	unsigned long                                      bSkelCompFixed : 1;                               		// 0x03C8 (0x0004) [0x0000000000000002] [0x00200000] ( CPF_Const )
	unsigned long                                      bHasHadPhysicsBlendedIn : 1;                      		// 0x03C8 (0x0004) [0x0000000000000002] [0x00400000] ( CPF_Const )
	unsigned long                                      bForceUpdateAttachmentsInTick : 1;                		// 0x03C8 (0x0004) [0x0000000000000001] [0x00800000] ( CPF_Edit )
	unsigned long                                      bEnableFullAnimWeightBodies : 1;                  		// 0x03C8 (0x0004) [0x0000000000002000] [0x01000000] ( CPF_Transient )
	unsigned long                                      bPerBoneVolumeEffects : 1;                        		// 0x03C8 (0x0004) [0x0000000000000001] [0x02000000] ( CPF_Edit )
	unsigned long                                      bPerBoneMotionBlur : 1;                           		// 0x03C8 (0x0004) [0x0000000000000001] [0x04000000] ( CPF_Edit )
	unsigned long                                      bSyncActorLocationToRootRigidBody : 1;            		// 0x03C8 (0x0004) [0x0000000000000001] [0x08000000] ( CPF_Edit )
	unsigned long                                      bUseRawData : 1;                                  		// 0x03C8 (0x0004) [0x0000000000000002] [0x10000000] ( CPF_Const )
	unsigned long                                      bDisableWarningWhenAnimNotFound : 1;              		// 0x03C8 (0x0004) [0x0000000000000000] [0x20000000] 
	unsigned long                                      bOverrideAttachmentOwnerVisibility : 1;           		// 0x03C8 (0x0004) [0x0000000000000000] [0x40000000] 
	unsigned long                                      bNeedsToDeleteHitMask : 1;                        		// 0x03C8 (0x0004) [0x0000000000002002] [0x80000000] ( CPF_Const | CPF_Transient )
	unsigned long                                      bPauseAnims : 1;                                  		// 0x03CC (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bChartDistanceFactor : 1;                         		// 0x03CC (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bEnableLineCheckWithBounds : 1;                   		// 0x03CC (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bCanHighlightSelectedSections : 1;                		// 0x03CC (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      bUpdateMorphWhenParentAnimComponentExists : 1;    		// 0x03CC (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	struct FVector                                     LineCheckBoundsScale;                             		// 0x03D0 (0x000C) [0x0000000000000000]              
	unsigned long                                      bEnableClothSimulation : 1;                       		// 0x03DC (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	unsigned long                                      bDisableClothCollision : 1;                       		// 0x03DC (0x0004) [0x0000000000000003] [0x00000002] ( CPF_Edit | CPF_Const )
	unsigned long                                      bClothFrozen : 1;                                 		// 0x03DC (0x0004) [0x0000000000000003] [0x00000004] ( CPF_Edit | CPF_Const )
	unsigned long                                      bAutoFreezeClothWhenNotRendered : 1;              		// 0x03DC (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bClothAwakeOnStartup : 1;                         		// 0x03DC (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bClothBaseVelClamp : 1;                           		// 0x03DC (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bClothBaseVelInterp : 1;                          		// 0x03DC (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
	unsigned long                                      bAttachClothVertsToBaseBody : 1;                  		// 0x03DC (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bIsClothOnStaticObject : 1;                       		// 0x03DC (0x0004) [0x0000000000000001] [0x00000100] ( CPF_Edit )
	unsigned long                                      bUpdatedFixedClothVerts : 1;                      		// 0x03DC (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bClothPositionalDampening : 1;                    		// 0x03DC (0x0004) [0x0000000000000001] [0x00000400] ( CPF_Edit )
	unsigned long                                      bClothWindRelativeToOwner : 1;                    		// 0x03DC (0x0004) [0x0000000000000001] [0x00000800] ( CPF_Edit )
	unsigned long                                      bRecentlyRendered : 1;                            		// 0x03DC (0x0004) [0x0000000000002000] [0x00001000] ( CPF_Transient )
	unsigned long                                      bCacheAnimSequenceNodes : 1;                      		// 0x03DC (0x0004) [0x0000000000000000] [0x00002000] 
	unsigned long                                      bNeedsInstanceWeightUpdate : 1;                   		// 0x03DC (0x0004) [0x0000000000002002] [0x00004000] ( CPF_Const | CPF_Transient )
	unsigned long                                      bAlwaysUseInstanceWeights : 1;                    		// 0x03DC (0x0004) [0x0000000000002002] [0x00008000] ( CPF_Const | CPF_Transient )
	unsigned long                                      bUpdateComposeSkeletonPasses : 1;                 		// 0x03DC (0x0004) [0x0000000000002002] [0x00010000] ( CPF_Const | CPF_Transient )
	unsigned long                                      bValidTemporarySavedAnimSets : 1;                 		// 0x03DC (0x0004) [0x0000000000003002] [0x00020000] ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FBonePair >                         InstanceVertexWeightBones;                        		// 0x03E0 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FSkelMeshComponentLODInfo >         LODInfo;                                          		// 0x03EC (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	struct FVector                                     FrozenLocalToWorldPos;                            		// 0x03F8 (0x000C) [0x0000000000000002]              ( CPF_Const )
	struct FRotator                                    FrozenLocalToWorldRot;                            		// 0x0404 (0x000C) [0x0000000000000002]              ( CPF_Const )
	struct FVector                                     ClothExternalForce;                               		// 0x0410 (0x000C) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FVector                                     ClothWind;                                        		// 0x041C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     ClothBaseVelClampRange;                           		// 0x0428 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              ClothBlendWeight;                                 		// 0x0434 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ClothDynamicBlendWeight;                          		// 0x0438 (0x0004) [0x0000000000000000]              
	float                                              ClothBlendMinDistanceFactor;                      		// 0x043C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ClothBlendMaxDistanceFactor;                      		// 0x0440 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     MinPosDampRange;                                  		// 0x0444 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     MaxPosDampRange;                                  		// 0x0450 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     MinPosDampScale;                                  		// 0x045C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     MaxPosDampScale;                                  		// 0x0468 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FPointer                                    ClothSim;                                         		// 0x0474 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	int                                                SceneIndex;                                       		// 0x0478 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FVector >                           ClothMeshPosData;                                 		// 0x047C (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< struct FVector >                           ClothMeshNormalData;                              		// 0x0488 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< int >                                      ClothMeshIndexData;                               		// 0x0494 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	int                                                NumClothMeshVerts;                                		// 0x04A0 (0x0004) [0x0000000000000000]              
	int                                                NumClothMeshIndices;                              		// 0x04A4 (0x0004) [0x0000000000000000]              
	TArray< int >                                      ClothMeshParentData;                              		// 0x04A8 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	int                                                NumClothMeshParentIndices;                        		// 0x04B4 (0x0004) [0x0000000000000000]              
	TArray< struct FVector >                           ClothMeshWeldedPosData;                           		// 0x04B8 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FVector >                           ClothMeshWeldedNormalData;                        		// 0x04C4 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< int >                                      ClothMeshWeldedIndexData;                         		// 0x04D0 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	int                                                ClothDirtyBufferFlag;                             		// 0x04DC (0x0004) [0x0000000000000000]              
	unsigned char                                      ClothRBChannel;                                   		// 0x04E0 (0x0001) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FRBCollisionChannelContainer                ClothRBCollideWithChannels;                       		// 0x04E4 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              ClothForceScale;                                  		// 0x04E8 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              ClothImpulseScale;                                		// 0x04EC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ClothAttachmentTearFactor;                        		// 0x04F0 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned long                                      bClothUseCompartment : 1;                         		// 0x04F4 (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	float                                              MinDistanceForClothReset;                         		// 0x04F8 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FVector                                     LastClothLocation;                                		// 0x04FC (0x000C) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	unsigned char                                      ApexClothingRBChannel;                            		// 0x0508 (0x0001) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FRBCollisionChannelContainer                ApexClothingRBCollideWithChannels;                		// 0x050C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned char                                      ApexClothingCollisionRBChannel;                   		// 0x0510 (0x0001) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned long                                      bAutoFreezeApexClothingWhenNotRendered : 1;       		// 0x0514 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bLocalSpaceWind : 1;                              		// 0x0514 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	struct FVector                                     WindVelocity;                                     		// 0x0518 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              WindVelocityBlendTime;                            		// 0x0524 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bSkipInitClothing : 1;                            		// 0x0528 (0x0004) [0x0000000000002002] [0x00000001] ( CPF_Const | CPF_Transient )
	struct FPointer                                    SoftBodySim;                                      		// 0x052C (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	int                                                SoftBodySceneIndex;                               		// 0x0530 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	unsigned long                                      bEnableSoftBodySimulation : 1;                    		// 0x0534 (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	TArray< struct FVector >                           SoftBodyTetraPosData;                             		// 0x0538 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< int >                                      SoftBodyTetraIndexData;                           		// 0x0544 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	int                                                NumSoftBodyTetraVerts;                            		// 0x0550 (0x0004) [0x0000000000000000]              
	int                                                NumSoftBodyTetraIndices;                          		// 0x0554 (0x0004) [0x0000000000000000]              
	float                                              SoftBodyImpulseScale;                             		// 0x0558 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bSoftBodyFrozen : 1;                              		// 0x055C (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	unsigned long                                      bAutoFreezeSoftBodyWhenNotRendered : 1;           		// 0x055C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bSoftBodyAwakeOnStartup : 1;                      		// 0x055C (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bSoftBodyUseCompartment : 1;                      		// 0x055C (0x0004) [0x0000000000000003] [0x00000008] ( CPF_Edit | CPF_Const )
	unsigned char                                      SoftBodyRBChannel;                                		// 0x0560 (0x0001) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FRBCollisionChannelContainer                SoftBodyRBCollideWithChannels;                    		// 0x0564 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	struct FPointer                                    SoftBodyASVPlane;                                 		// 0x0568 (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	class UMaterial*                                   LimitMaterial;                                    		// 0x056C (0x0004) [0x0000000000000000]              
	struct FBoneAtom                                   RootMotionDelta;                                  		// 0x0570 (0x0020) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     RootMotionVelocity;                               		// 0x0590 (0x000C) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     RootBoneTranslation;                              		// 0x059C (0x000C) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	struct FVector                                     RootMotionAccelScale;                             		// 0x05A8 (0x000C) [0x0000000000000000]              
	unsigned char                                      RootMotionMode;                                   		// 0x05B4 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      PreviousRMM;                                      		// 0x05B5 (0x0001) [0x0000000000000002]              ( CPF_Const )
	unsigned char                                      PendingRMM;                                       		// 0x05B6 (0x0001) [0x0000000000000000]              
	unsigned char                                      OldPendingRMM;                                    		// 0x05B7 (0x0001) [0x0000000000000000]              
	int                                                bRMMOneFrameDelay;                                		// 0x05B8 (0x0004) [0x0000000000000002]              ( CPF_Const )
	unsigned char                                      RootMotionRotationMode;                           		// 0x05BC (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      AnimRotationOnly;                                 		// 0x05BD (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      FaceFXBlendMode;                                  		// 0x05BE (0x0001) [0x0000000000000001]              ( CPF_Edit )
	struct FPointer                                    FaceFXActorInstance;                              		// 0x05C0 (0x0004) [0x0000000000003000]              ( CPF_Native | CPF_Transient )
	class UAudioComponent*                             CachedFaceFXAudioComp;                            		// 0x05C4 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	TArray< unsigned char >                            BoneVisibilityStates;                             		// 0x05C8 (0x000C) [0x0000000000402002]              ( CPF_Const | CPF_Transient | CPF_NeedCtorLink )
	unsigned char                                      UnknownData01[ 0xC ];                             		// 0x05D4 (0x000C) MISSED OFFSET
	struct FBoneAtom                                   LocalToWorldBoneAtom;                             		// 0x05E0 (0x0020) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	float                                              ProgressiveDrawingFraction;                       		// 0x0600 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      CustomSortAlternateIndexMode;                     		// 0x0604 (0x0001) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.SkeletalMesh
// 0x0390 (0x03CC - 0x003C)
class USkeletalMesh : public UObject
{
public:
	struct FBoxSphereBounds                            Bounds;                                           		// 0x003C (0x001C) [0x0000000000001003]              ( CPF_Edit | CPF_Const | CPF_Native )
	TArray< class UMaterialInterface* >                Materials;                                        		// 0x0058 (0x000C) [0x0000000000001003]              ( CPF_Edit | CPF_Const | CPF_Native )
	TArray< class UApexClothingAsset* >                ClothingAssets;                                   		// 0x0064 (0x000C) [0x0000000000001003]              ( CPF_Edit | CPF_Const | CPF_Native )
	struct FVector                                     Origin;                                           		// 0x0070 (0x000C) [0x0000000000001003]              ( CPF_Edit | CPF_Const | CPF_Native )
	struct FRotator                                    RotOrigin;                                        		// 0x007C (0x000C) [0x0000000000001003]              ( CPF_Edit | CPF_Const | CPF_Native )
	TArray< int >                                      RefSkeleton;                                      		// 0x0088 (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	int                                                SkeletalDepth;                                    		// 0x0094 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	unsigned char                                      UnknownData00[ 0x3C ];                            		// 0x0098 (0x003C) UNKNOWN PROPERTY: MapProperty Engine.SkeletalMesh.NameIndexMap
	struct FIndirectArray_Mirror                       LODModels;                                        		// 0x00D4 (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	struct FPointer                                    SourceData;                                       		// 0x00E0 (0x0004) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< struct FBoneAtom >                         RefBasesInvMatrix;                                		// 0x00E4 (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< struct FBoneMirrorInfo >                   SkelMirrorTable;                                  		// 0x00F0 (0x000C) [0x0000000000400041]              ( CPF_Edit | CPF_EditConstArray | CPF_NeedCtorLink )
	unsigned char                                      SkelMirrorAxis;                                   		// 0x00FC (0x0001) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      SkelMirrorFlipAxis;                               		// 0x00FD (0x0001) [0x0000000000000001]              ( CPF_Edit )
	TArray< class USkeletalMeshSocket* >               Sockets;                                          		// 0x0100 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FString >                           BoneBreakNames;                                   		// 0x010C (0x000C) [0x0000000000021003]              ( CPF_Edit | CPF_Const | CPF_Native | CPF_EditConst )
	TArray< unsigned char >                            BoneBreakOptions;                                 		// 0x0118 (0x000C) [0x0000000000001003]              ( CPF_Edit | CPF_Const | CPF_Native )
	TArray< struct FSkeletalMeshLODInfo >              LODInfo;                                          		// 0x0124 (0x000C) [0x0000000000400041]              ( CPF_Edit | CPF_EditConstArray | CPF_NeedCtorLink )
	TArray< struct FSkeletalMeshOptimizationSettings > OptimizationSettings;                             		// 0x0130 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FName >                             PerPolyCollisionBones;                            		// 0x013C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FName >                             AddToParentPerPolyCollisionBone;                  		// 0x0148 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< int >                                      PerPolyBoneKDOPs;                                 		// 0x0154 (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	unsigned long                                      bPerPolyUseSoftWeighting : 1;                     		// 0x0160 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bUseSimpleLineCollision : 1;                      		// 0x0160 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bUseSimpleBoxCollision : 1;                       		// 0x0160 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bForceCPUSkinning : 1;                            		// 0x0160 (0x0004) [0x0000000000000003] [0x00000008] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUseFullPrecisionUVs : 1;                         		// 0x0160 (0x0004) [0x0000000000000003] [0x00000010] ( CPF_Edit | CPF_Const )
	unsigned long                                      bHasBeenSimplified : 1;                           		// 0x0160 (0x0004) [0x0000000000000000] [0x00000020] 
	TArray< struct FBoneProperty >                     BoneProperties;                                   		// 0x0164 (0x000C) [0x0000000000001043]              ( CPF_Edit | CPF_Const | CPF_EditConstArray | CPF_Native )
	class UFaceFXAsset*                                FaceFXAsset;                                      		// 0x0170 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UPhysicsAsset*                               BoundsPreviewAsset;                               		// 0x0174 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class UMorphTargetSet* >                   PreviewMorphSets;                                 		// 0x0178 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                LODBiasPC;                                        		// 0x0184 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                LODBiasPS3;                                       		// 0x0188 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                LODBiasXbox360;                                   		// 0x018C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     SourceFilePath;                                   		// 0x0190 (0x000C) [0x0000000000420003]              ( CPF_Edit | CPF_Const | CPF_EditConst | CPF_NeedCtorLink )
	struct FString                                     SourceFileTimestamp;                              		// 0x019C (0x000C) [0x0000000000420003]              ( CPF_Edit | CPF_Const | CPF_EditConst | CPF_NeedCtorLink )
	TArray< struct FPointer >                          ClothMesh;                                        		// 0x01A8 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< float >                                    ClothMeshScale;                                   		// 0x01B4 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< int >                                      ClothToGraphicsVertMap;                           		// 0x01C0 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< float >                                    ClothMovementScale;                               		// 0x01CC (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	unsigned char                                      ClothMovementScaleGenMode;                        		// 0x01D8 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              ClothToAnimMeshMaxDist;                           		// 0x01DC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bLimitClothToAnimMesh : 1;                        		// 0x01E0 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	TArray< int >                                      ClothWeldingMap;                                  		// 0x01E4 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	int                                                ClothWeldingDomain;                               		// 0x01F0 (0x0004) [0x0000000000000002]              ( CPF_Const )
	TArray< int >                                      ClothWeldedIndices;                               		// 0x01F4 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	unsigned long                                      bForceNoWelding : 1;                              		// 0x0200 (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	int                                                NumFreeClothVerts;                                		// 0x0204 (0x0004) [0x0000000000000002]              ( CPF_Const )
	TArray< int >                                      ClothIndexBuffer;                                 		// 0x0208 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< struct FName >                             ClothBones;                                       		// 0x0214 (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
	int                                                ClothHierarchyLevels;                             		// 0x0220 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned long                                      bEnableClothBendConstraints : 1;                  		// 0x0224 (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	unsigned long                                      bEnableClothDamping : 1;                          		// 0x0224 (0x0004) [0x0000000000000003] [0x00000002] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUseClothCOMDamping : 1;                          		// 0x0224 (0x0004) [0x0000000000000003] [0x00000004] ( CPF_Edit | CPF_Const )
	float                                              ClothStretchStiffness;                            		// 0x0228 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              ClothBendStiffness;                               		// 0x022C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              ClothDensity;                                     		// 0x0230 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              ClothThickness;                                   		// 0x0234 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              ClothDamping;                                     		// 0x0238 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	int                                                ClothIterations;                                  		// 0x023C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	int                                                ClothHierarchicalIterations;                      		// 0x0240 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              ClothFriction;                                    		// 0x0244 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              ClothRelativeGridSpacing;                         		// 0x0248 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              ClothPressure;                                    		// 0x024C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              ClothCollisionResponseCoefficient;                		// 0x0250 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              ClothAttachmentResponseCoefficient;               		// 0x0254 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              ClothAttachmentTearFactor;                        		// 0x0258 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              ClothSleepLinearVelocity;                         		// 0x025C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              HardStretchLimitFactor;                           		// 0x0260 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned long                                      bHardStretchLimit : 1;                            		// 0x0264 (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	unsigned long                                      bEnableClothOrthoBendConstraints : 1;             		// 0x0264 (0x0004) [0x0000000000000003] [0x00000002] ( CPF_Edit | CPF_Const )
	unsigned long                                      bEnableClothSelfCollision : 1;                    		// 0x0264 (0x0004) [0x0000000000000003] [0x00000004] ( CPF_Edit | CPF_Const )
	unsigned long                                      bEnableClothPressure : 1;                         		// 0x0264 (0x0004) [0x0000000000000003] [0x00000008] ( CPF_Edit | CPF_Const )
	unsigned long                                      bEnableClothTwoWayCollision : 1;                  		// 0x0264 (0x0004) [0x0000000000000003] [0x00000010] ( CPF_Edit | CPF_Const )
	TArray< struct FClothSpecialBoneInfo >             ClothSpecialBones;                                		// 0x0268 (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
	unsigned long                                      bEnableClothLineChecks : 1;                       		// 0x0274 (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	unsigned long                                      bClothMetal : 1;                                  		// 0x0274 (0x0004) [0x0000000000000003] [0x00000002] ( CPF_Edit | CPF_Const )
	float                                              ClothMetalImpulseThreshold;                       		// 0x0278 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              ClothMetalPenetrationDepth;                       		// 0x027C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              ClothMetalMaxDeformationDistance;                 		// 0x0280 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned long                                      bEnableClothTearing : 1;                          		// 0x0284 (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	float                                              ClothTearFactor;                                  		// 0x0288 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	int                                                ClothTearReserve;                                 		// 0x028C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned long                                      bEnableValidBounds : 1;                           		// 0x0290 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	struct FVector                                     ValidBoundsMin;                                   		// 0x0294 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     ValidBoundsMax;                                   		// 0x02A0 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FMap_Mirror                                 ClothTornTriMap;                                  		// 0x02AC (0x003C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< int >                                      SoftBodySurfaceToGraphicsVertMap;                 		// 0x02E8 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< int >                                      SoftBodySurfaceIndices;                           		// 0x02F4 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< struct FVector >                           SoftBodyTetraVertsUnscaled;                       		// 0x0300 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< int >                                      SoftBodyTetraIndices;                             		// 0x030C (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< struct FSoftBodyTetraLink >                SoftBodyTetraLinks;                               		// 0x0318 (0x000C) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	TArray< struct FPointer >                          CachedSoftBodyMeshes;                             		// 0x0324 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< float >                                    CachedSoftBodyMeshScales;                         		// 0x0330 (0x000C) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	TArray< struct FName >                             SoftBodyBones;                                    		// 0x033C (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
	TArray< struct FSoftBodySpecialBoneInfo >          SoftBodySpecialBones;                             		// 0x0348 (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
	float                                              SoftBodyVolumeStiffness;                          		// 0x0354 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              SoftBodyStretchingStiffness;                      		// 0x0358 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              SoftBodyDensity;                                  		// 0x035C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              SoftBodyParticleRadius;                           		// 0x0360 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              SoftBodyDamping;                                  		// 0x0364 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	int                                                SoftBodySolverIterations;                         		// 0x0368 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              SoftBodyFriction;                                 		// 0x036C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              SoftBodyRelativeGridSpacing;                      		// 0x0370 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              SoftBodySleepLinearVelocity;                      		// 0x0374 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned long                                      bEnableSoftBodySelfCollision : 1;                 		// 0x0378 (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	float                                              SoftBodyAttachmentResponse;                       		// 0x037C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              SoftBodyCollisionResponse;                        		// 0x0380 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	float                                              SoftBodyDetailLevel;                              		// 0x0384 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	int                                                SoftBodySubdivisionLevel;                         		// 0x0388 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned long                                      bSoftBodyIsoSurface : 1;                          		// 0x038C (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	unsigned long                                      bEnableSoftBodyDamping : 1;                       		// 0x038C (0x0004) [0x0000000000000003] [0x00000002] ( CPF_Edit | CPF_Const )
	unsigned long                                      bUseSoftBodyCOMDamping : 1;                       		// 0x038C (0x0004) [0x0000000000000003] [0x00000004] ( CPF_Edit | CPF_Const )
	float                                              SoftBodyAttachmentThreshold;                      		// 0x0390 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned long                                      bEnableSoftBodyTwoWayCollision : 1;               		// 0x0394 (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	float                                              SoftBodyAttachmentTearFactor;                     		// 0x0398 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	unsigned long                                      bEnableSoftBodyLineChecks : 1;                    		// 0x039C (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
	unsigned long                                      bHasVertexColors : 1;                             		// 0x039C (0x0004) [0x0000000000000000] [0x00000002] 
	TArray< unsigned long >                            GraphicsIndexIsCloth;                             		// 0x03A0 (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	TArray< float >                                    CachedStreamingTextureFactors;                    		// 0x03AC (0x000C) [0x0000000000001002]              ( CPF_Const | CPF_Native )
	float                                              StreamingDistanceMultiplier;                      		// 0x03B8 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	int                                                ReleaseResourcesFence;                            		// 0x03BC (0x0004) [0x0000000000003002]              ( CPF_Const | CPF_Native | CPF_Transient )
	struct FQWord                                      SkelMeshRUID;                                     		// 0x03C0 (0x0008) [0x0000000000002002]              ( CPF_Const | CPF_Transient )
	unsigned long                                      bUseClothingAssetMaterial : 1;                    		// 0x03C8 (0x0004) [0x0000000000000003] [0x00000001] ( CPF_Edit | CPF_Const )
public:
};

// Class Engine.SkeletalMeshSocket
// 0x0044 (0x0080 - 0x003C)
class USkeletalMeshSocket : public UObject
{
public:
	struct FName                                       SocketName;                                       		// 0x003C (0x0008) [0x0000000000020003]              ( CPF_Edit | CPF_Const | CPF_EditConst )
	struct FName                                       BoneName;                                         		// 0x0044 (0x0008) [0x0000000000020003]              ( CPF_Edit | CPF_Const | CPF_EditConst )
	struct FVector                                     RelativeLocation;                                 		// 0x004C (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FRotator                                    RelativeRotation;                                 		// 0x0058 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     RelativeScale;                                    		// 0x0064 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	class USkeletalMesh*                               PreviewSkelMesh;                                  		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USkeletalMeshComponent*                      PreviewSkelComp;                                  		// 0x0074 (0x0004) [0x00000000040A200B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_Transient | CPF_EditConst | CPF_Component | CPF_EditInline )
	class UStaticMesh*                                 PreviewStaticMesh;                                		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UParticleSystem*                             PreviewParticleSystem;                            		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SplineActor
// 0x0050 (0x0228 - 0x01D8)
class ASplineActor : public AActor
{
public:
	TArray< struct FSplineConnection >                 Connections;                                      		// 0x01D8 (0x000C) [0x0000000000480000]              ( CPF_Component | CPF_NeedCtorLink )
	struct FVector                                     SplineActorTangent;                               		// 0x01E4 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      SplineColor;                                      		// 0x01F0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bDisableDestination : 1;                          		// 0x01F4 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bAlreadyVisited : 1;                              		// 0x01F4 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	TArray< class ASplineActor* >                      LinksFrom;                                        		// 0x01F8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class ASplineActor*                                nextOrdered;                                      		// 0x0204 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class ASplineActor*                                prevOrdered;                                      		// 0x0208 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class ASplineActor*                                previousPath;                                     		// 0x020C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                bestPathWeight;                                   		// 0x0210 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                visitedWeight;                                    		// 0x0214 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FInterpCurveFloat                           SplineVelocityOverTime;                           		// 0x0218 (0x0010) [0x0000000004400001]              ( CPF_Edit | CPF_NeedCtorLink | CPF_EditInline )
public:
};

// Class Engine.SplineLoftActor
// 0x0048 (0x0270 - 0x0228)
class ASplineLoftActor : public ASplineActor
{
public:
	float                                              ScaleX;                                           		// 0x0228 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ScaleY;                                           		// 0x022C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class USplineMeshComponent* >              SplineMeshComps;                                  		// 0x0230 (0x000C) [0x0000000004480008]              ( CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	class UStaticMesh*                                 DeformMesh;                                       		// 0x023C (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
	TArray< class UMaterialInterface* >                DeformMeshMaterials;                              		// 0x0240 (0x000C) [0x0000000000400003]              ( CPF_Edit | CPF_Const | CPF_NeedCtorLink )
	float                                              Roll;                                             		// 0x024C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     WorldXDir;                                        		// 0x0250 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FVector2D                                   Offset;                                           		// 0x025C (0x0008) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bSmoothInterpRollAndScale : 1;                    		// 0x0264 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bAcceptsLights : 1;                               		// 0x0264 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	class UDynamicLightEnvironmentComponent*           MeshLightEnvironment;                             		// 0x0268 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	float                                              MeshMaxDrawDistance;                              		// 0x026C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SplineLoftActorMovable
// 0x0000 (0x0270 - 0x0270)
class ASplineLoftActorMovable : public ASplineLoftActor
{
public:
public:
};

// Class Engine.SplineComponent
// 0x0034 (0x0218 - 0x01E4)
class USplineComponent : public UPrimitiveComponent
{
public:
	struct FInterpCurveVector                          SplineInfo;                                       		// 0x01E4 (0x0010) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              SplineCurviness;                                  		// 0x01F4 (0x0004) [0x0000000000020001]              ( CPF_Edit | CPF_EditConst )
	struct FColor                                      SplineColor;                                      		// 0x01F8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SplineDrawRes;                                    		// 0x01FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              SplineArrowSize;                                  		// 0x0200 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bSplineDisabled : 1;                              		// 0x0204 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	struct FInterpCurveFloat                           SplineReparamTable;                               		// 0x0208 (0x0010) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.ProcBuilding
// 0x00D4 (0x02E8 - 0x0214)
class AProcBuilding : public AVolume
{
public:
	class UProcBuildingRuleset*                        Ruleset;                                          		// 0x0214 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FPBMeshCompInfo >                   BuildingMeshCompInfos;                            		// 0x0218 (0x000C) [0x00000000004A0003]              ( CPF_Edit | CPF_Const | CPF_EditConst | CPF_Component | CPF_NeedCtorLink )
	TArray< struct FPBFracMeshCompInfo >               BuildingFracMeshCompInfos;                        		// 0x0224 (0x000C) [0x00000000004A0003]              ( CPF_Edit | CPF_Const | CPF_EditConst | CPF_Component | CPF_NeedCtorLink )
	class UStaticMeshComponent*                        SimpleMeshComp;                                   		// 0x0230 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	unsigned long                                      bGenerateRoofMesh : 1;                            		// 0x0234 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bGenerateFloorMesh : 1;                           		// 0x0234 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bApplyRulesToRoof : 1;                            		// 0x0234 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bApplyRulesToFloor : 1;                           		// 0x0234 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bSplitWallsAtRoofLevels : 1;                      		// 0x0234 (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bSplitWallsAtWallEdges : 1;                       		// 0x0234 (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bQuickEdited : 1;                                 		// 0x0234 (0x0004) [0x0000000000002000] [0x00000040] ( CPF_Transient )
	unsigned long                                      bBuildingBrushCollision : 1;                      		// 0x0234 (0x0004) [0x0000000000000001] [0x00000080] ( CPF_Edit )
	unsigned long                                      bDebugDrawEdgeInfo : 1;                           		// 0x0234 (0x0004) [0x0000000000000001] [0x00000100] ( CPF_Edit )
	unsigned long                                      bDebugDrawScopes : 1;                             		// 0x0234 (0x0004) [0x0000000000000001] [0x00000200] ( CPF_Edit )
	TArray< class UStaticMeshComponent* >              LODMeshComps;                                     		// 0x0238 (0x000C) [0x000000000448000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	TArray< struct FPBFaceUVInfo >                     LODMeshUVInfos;                                   		// 0x0244 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FPBScope2D >                        TopLevelScopes;                                   		// 0x0250 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                NumMeshedTopLevelScopes;                          		// 0x025C (0x0004) [0x0000000000000000]              
	TArray< struct FPBFaceUVInfo >                     TopLevelScopeUVInfos;                             		// 0x0260 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FPBScopeProcessInfo >               TopLevelScopeInfos;                               		// 0x026C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FPBEdgeInfo >                       EdgeInfos;                                        		// 0x0278 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              MaxFacadeZ;                                       		// 0x0284 (0x0004) [0x0000000000000000]              
	float                                              MinFacadeZ;                                       		// 0x0288 (0x0004) [0x0000000000000000]              
	TArray< class AProcBuilding* >                     OverlappingBuildings;                             		// 0x028C (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              SimpleMeshMassiveLODDistance;                     		// 0x0298 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RenderToTexturePullBackAmount;                    		// 0x029C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                RoofLightmapRes;                                  		// 0x02A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                NonRectWallLightmapRes;                           		// 0x02A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              LODRenderToTextureScale;                          		// 0x02A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       ParamSwatchName;                                  		// 0x02AC (0x0008) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FPBMaterialParam >                  BuildingMaterialParams;                           		// 0x02B4 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class UMaterialInstanceConstant* >         BuildingMatParamMICs;                             		// 0x02C0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class AStaticMeshActor*                            LowLODPersistentActor;                            		// 0x02CC (0x0004) [0x0000000000220003]              ( CPF_Edit | CPF_Const | CPF_EditConst )
	class UStaticMeshComponent*                        CurrentSimpleMeshComp;                            		// 0x02D0 (0x0004) [0x0000000004082008]              ( CPF_ExportObject | CPF_Transient | CPF_Component | CPF_EditInline )
	class AActor*                                      CurrentSimpleMeshActor;                           		// 0x02D4 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	TArray< class AProcBuilding* >                     AttachedBuildings;                                		// 0x02D8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                BuildingInstanceVersion;                          		// 0x02E4 (0x0004) [0x0000000000000002]              ( CPF_Const )
public:
};

// Class Engine.ProcBuilding_SimpleLODActor
// 0x0000 (0x01E0 - 0x01E0)
class AProcBuilding_SimpleLODActor : public AStaticMeshActor
{
public:
public:
};

// Class Engine.PBRuleNodeBase
// 0x002C (0x0068 - 0x003C)
class UPBRuleNodeBase : public UObject
{
public:
	TArray< struct FPBRuleLink >                       NextRules;                                        		// 0x003C (0x000C) [0x0000000000400040]              ( CPF_EditConstArray | CPF_NeedCtorLink )
	struct FString                                     Comment;                                          		// 0x0048 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	int                                                RulePosX;                                         		// 0x0054 (0x0004) [0x0000000000000000]              
	int                                                RulePosY;                                         		// 0x0058 (0x0004) [0x0000000000000000]              
	int                                                InDrawY;                                          		// 0x005C (0x0004) [0x0000000000000000]              
	int                                                DrawWidth;                                        		// 0x0060 (0x0004) [0x0000000000000000]              
	int                                                DrawHeight;                                       		// 0x0064 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.PBRuleNodeAlternate
// 0x0010 (0x0078 - 0x0068)
class UPBRuleNodeAlternate : public UPBRuleNodeBase
{
public:
	unsigned char                                      RepeatAxis;                                       		// 0x0068 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              ASize;                                            		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BMaxSize;                                         		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bInvertPatternOrder : 1;                          		// 0x0074 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bEqualSizeAB : 1;                                 		// 0x0074 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
public:
};

// Class Engine.PBRuleNodeComment
// 0x0018 (0x0080 - 0x0068)
class UPBRuleNodeComment : public UPBRuleNodeBase
{
public:
	int                                                SizeX;                                            		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                SizeY;                                            		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                BorderWidth;                                      		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FColor                                      BorderColor;                                      		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bFilled : 1;                                      		// 0x0078 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	struct FColor                                      FillColor;                                        		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.PBRuleNodeCorner
// 0x0028 (0x0090 - 0x0068)
class UPBRuleNodeCorner : public UPBRuleNodeBase
{
public:
	float                                              CornerSize;                                       		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FRBCornerAngleInfo >                Angles;                                           		// 0x006C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	float                                              FlatThreshold;                                    		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bNoMeshForConcaveCorners : 1;                     		// 0x007C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bUseAdjacentRulesetForRightGap : 1;               		// 0x007C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned char                                      CornerType;                                       		// 0x0080 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              CornerShapeOffset;                                		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                RoundTesselation;                                 		// 0x0088 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RoundCurvature;                                   		// 0x008C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.PBRuleNodeCycle
// 0x0010 (0x0078 - 0x0068)
class UPBRuleNodeCycle : public UPBRuleNodeBase
{
public:
	unsigned char                                      RepeatAxis;                                       		// 0x0068 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              RepeatSize;                                       		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                CycleSize;                                        		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bFixRepeatSize : 1;                               		// 0x0074 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.PBRuleNodeEdgeAngle
// 0x0010 (0x0078 - 0x0068)
class UPBRuleNodeEdgeAngle : public UPBRuleNodeBase
{
public:
	unsigned char                                      Edge;                                             		// 0x0068 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FRBEdgeAngleInfo >                  Angles;                                           		// 0x006C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.PBRuleNodeEdgeMesh
// 0x0008 (0x0070 - 0x0068)
class UPBRuleNodeEdgeMesh : public UPBRuleNodeBase
{
public:
	float                                              FlatThreshold;                                    		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              MainXPullIn;                                      		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.PBRuleNodeExtractTopBottom
// 0x0010 (0x0078 - 0x0068)
class UPBRuleNodeExtractTopBottom : public UPBRuleNodeBase
{
public:
	float                                              ExtractTopZ;                                      		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ExtractNotTopZ;                                   		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ExtractBottomZ;                                   		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              ExtractNotBottomZ;                                		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.PBRuleNodeLODQuad
// 0x0004 (0x006C - 0x0068)
class UPBRuleNodeLODQuad : public UPBRuleNodeBase
{
public:
	float                                              MassiveLODDistanceScale;                          		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.PBRuleNodeMesh
// 0x0048 (0x00B0 - 0x0068)
class UPBRuleNodeMesh : public UPBRuleNodeBase
{
public:
	TArray< struct FBuildingMeshInfo >                 BuildingMeshes;                                   		// 0x0068 (0x000C) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	struct FBuildingMeshInfo                           PartialOccludedBuildingMesh;                      		// 0x0074 (0x0038) [0x0000000000480001]              ( CPF_Edit | CPF_Component | CPF_NeedCtorLink )
	unsigned long                                      bDoOcclusionTest : 1;                             		// 0x00AC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bBlockAll : 1;                                    		// 0x00AC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
public:
};

// Class Engine.PBRuleNodeOcclusion
// 0x0000 (0x0068 - 0x0068)
class UPBRuleNodeOcclusion : public UPBRuleNodeBase
{
public:
public:
};

// Class Engine.PBRuleNodeQuad
// 0x0018 (0x0080 - 0x0068)
class UPBRuleNodeQuad : public UPBRuleNodeBase
{
public:
	class UMaterialInterface*                          Material;                                         		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RepeatMaxSizeX;                                   		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RepeatMaxSizeZ;                                   		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                QuadLightmapRes;                                  		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              YOffset;                                          		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bDisableMaterialRepeat : 1;                       		// 0x007C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.PBRuleNodeRandom
// 0x000C (0x0074 - 0x0068)
class UPBRuleNodeRandom : public UPBRuleNodeBase
{
public:
	int                                                NumOutputs;                                       		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                MinNumExecuted;                                   		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	int                                                MaxNumExecuted;                                   		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.PBRuleNodeRepeat
// 0x0008 (0x0070 - 0x0068)
class UPBRuleNodeRepeat : public UPBRuleNodeBase
{
public:
	unsigned char                                      RepeatAxis;                                       		// 0x0068 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              RepeatMaxSize;                                    		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.PBRuleNodeSize
// 0x000C (0x0074 - 0x0068)
class UPBRuleNodeSize : public UPBRuleNodeBase
{
public:
	unsigned char                                      SizeAxis;                                         		// 0x0068 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	float                                              DecisionSize;                                     		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bUseTopLevelScopeSize : 1;                        		// 0x0070 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.PBRuleNodeSplit
// 0x0010 (0x0078 - 0x0068)
class UPBRuleNodeSplit : public UPBRuleNodeBase
{
public:
	unsigned char                                      SplitAxis;                                        		// 0x0068 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FRBSplitInfo >                      SplitSetup;                                       		// 0x006C (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.PBRuleNodeSubRuleset
// 0x0004 (0x006C - 0x0068)
class UPBRuleNodeSubRuleset : public UPBRuleNodeBase
{
public:
	class UProcBuildingRuleset*                        SubRuleset;                                       		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.PBRuleNodeTransform
// 0x000C (0x0074 - 0x0068)
class UPBRuleNodeTransform : public UPBRuleNodeBase
{
public:
	class UDistributionVector*                         Translation;                                      		// 0x0068 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UDistributionVector*                         Rotation;                                         		// 0x006C (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UDistributionVector*                         Scale;                                            		// 0x0070 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.PBRuleNodeVariation
// 0x0004 (0x006C - 0x0068)
class UPBRuleNodeVariation : public UPBRuleNodeBase
{
public:
	unsigned long                                      bVariationOfScopeOnLeft : 1;                      		// 0x0068 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.PBRuleNodeWindowWall
// 0x0024 (0x008C - 0x0068)
class UPBRuleNodeWindowWall : public UPBRuleNodeBase
{
public:
	float                                              CellMaxSizeX;                                     		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              CellMaxSizeZ;                                     		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WindowSizeX;                                      		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WindowSizeZ;                                      		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WindowPosX;                                       		// 0x0078 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WindowPosZ;                                       		// 0x007C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bScaleWindowWithCell : 1;                         		// 0x0080 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              YOffset;                                          		// 0x0084 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          Material;                                         		// 0x0088 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ProcBuildingRuleset
// 0x0060 (0x009C - 0x003C)
class UProcBuildingRuleset : public UObject
{
public:
	class UPBRuleNodeBase*                             RootRule;                                         		// 0x003C (0x0004) [0x0000000004400008]              ( CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
	unsigned long                                      bBeingEdited : 1;                                 		// 0x0040 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bEnableInteriorTexture : 1;                       		// 0x0040 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bLODOnlyRoof : 1;                                 		// 0x0040 (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bPickRandomSwatch : 1;                            		// 0x0040 (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	class UMaterialInterface*                          DefaultRoofMaterial;                              		// 0x0044 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          DefaultFloorMaterial;                             		// 0x0048 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UMaterialInterface*                          DefaultNonRectWallMaterial;                       		// 0x004C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RoofZOffset;                                      		// 0x0050 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              NotRoofZOffset;                                   		// 0x0054 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FloorZOffset;                                     		// 0x0058 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              NotFloorZOffset;                                  		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RoofPolyInset;                                    		// 0x0060 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              FloorPolyInset;                                   		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              BuildingLODSpecular;                              		// 0x0068 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RoofEdgeScopeRaise;                               		// 0x006C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UTexture*                                    LODCubemap;                                       		// 0x0070 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UTexture*                                    InteriorTexture;                                  		// 0x0074 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< struct FPBVariationInfo >                  Variations;                                       		// 0x0078 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< struct FPBParamSwatch >                    ParamSwatches;                                    		// 0x0084 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	TArray< class UPBRuleNodeComment* >                Comments;                                         		// 0x0090 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.ReplicationInfo
// 0x0000 (0x01D8 - 0x01D8)
class AReplicationInfo : public AInfo
{
public:
public:
};

// Class Engine.GameReplicationInfo
// 0x005C (0x0234 - 0x01D8)
class AGameReplicationInfo : public AReplicationInfo
{
public:
	class UClass*                                      GameClass;                                        		// 0x01D8 (0x0004) [0x0000000000000020]              ( CPF_Net )
	unsigned long                                      bStopCountDown : 1;                               		// 0x01DC (0x0004) [0x0000000000000020] [0x00000001] ( CPF_Net )
	unsigned long                                      bMatchHasBegun : 1;                               		// 0x01DC (0x0004) [0x0000000000000020] [0x00000002] ( CPF_Net )
	unsigned long                                      bMatchIsOver : 1;                                 		// 0x01DC (0x0004) [0x0000000000000020] [0x00000004] ( CPF_Net )
	int                                                RemainingTime;                                    		// 0x01E0 (0x0004) [0x0000000000000020]              ( CPF_Net )
	int                                                ElapsedTime;                                      		// 0x01E4 (0x0004) [0x0000000000000020]              ( CPF_Net )
	int                                                RemainingMinute;                                  		// 0x01E8 (0x0004) [0x0000000000000020]              ( CPF_Net )
	int                                                GoalScore;                                        		// 0x01EC (0x0004) [0x0000000000000020]              ( CPF_Net )
	int                                                TimeLimit;                                        		// 0x01F0 (0x0004) [0x0000000000000020]              ( CPF_Net )
	TArray< class ATeamInfo* >                         Teams;                                            		// 0x01F4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     ServerName;                                       		// 0x0200 (0x000C) [0x0000000000444021]              ( CPF_Edit | CPF_Net | CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	class AActor*                                      Winner;                                           		// 0x020C (0x0004) [0x0000000000000020]              ( CPF_Net )
	TArray< class APlayerReplicationInfo* >            PRIArray;                                         		// 0x0210 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< class APlayerReplicationInfo* >            InactivePRIArray;                                 		// 0x021C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< class AVolume* >                           turretVolumes;                                    		// 0x0228 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
public:
};

// Class Engine.PlayerReplicationInfo
// 0x00C8 (0x02A0 - 0x01D8)
class APlayerReplicationInfo : public AReplicationInfo
{
public:
	float                                              Score;                                            		// 0x01D8 (0x0004) [0x0000000000000020]              ( CPF_Net )
	int                                                Deaths;                                           		// 0x01DC (0x0004) [0x0000000000000020]              ( CPF_Net )
	unsigned char                                      Ping;                                             		// 0x01E0 (0x0001) [0x0000000000000020]              ( CPF_Net )
	unsigned char                                      TTSSpeaker;                                       		// 0x01E1 (0x0001) [0x0000000000002000]              ( CPF_Transient )
	int                                                NumLives;                                         		// 0x01E4 (0x0004) [0x0000000000000000]              
	struct FString                                     PlayerName;                                       		// 0x01E8 (0x000C) [0x0000000000400020]              ( CPF_Net | CPF_NeedCtorLink )
	struct FString                                     OldName;                                          		// 0x01F4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                PlayerID;                                         		// 0x0200 (0x0004) [0x0000000000000020]              ( CPF_Net )
	class ATeamInfo*                                   Team;                                             		// 0x0204 (0x0004) [0x0000000004000020]              ( CPF_Net | CPF_EditInline )
	unsigned long                                      bAdmin : 1;                                       		// 0x0208 (0x0004) [0x0000000000000020] [0x00000001] ( CPF_Net )
	unsigned long                                      bIsFemale : 1;                                    		// 0x0208 (0x0004) [0x0000000000000020] [0x00000002] ( CPF_Net )
	unsigned long                                      bIsSpectator : 1;                                 		// 0x0208 (0x0004) [0x0000000000000020] [0x00000004] ( CPF_Net )
	unsigned long                                      bOnlySpectator : 1;                               		// 0x0208 (0x0004) [0x0000000000000020] [0x00000008] ( CPF_Net )
	unsigned long                                      bWaitingPlayer : 1;                               		// 0x0208 (0x0004) [0x0000000000000020] [0x00000010] ( CPF_Net )
	unsigned long                                      bReadyToPlay : 1;                                 		// 0x0208 (0x0004) [0x0000000000000020] [0x00000020] ( CPF_Net )
	unsigned long                                      bOutOfLives : 1;                                  		// 0x0208 (0x0004) [0x0000000000000020] [0x00000040] ( CPF_Net )
	unsigned long                                      bBot : 1;                                         		// 0x0208 (0x0004) [0x0000000000000020] [0x00000080] ( CPF_Net )
	unsigned long                                      bHasBeenWelcomed : 1;                             		// 0x0208 (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      bDontSaveInactivePRI : 1;                         		// 0x0208 (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bServerVerified : 1;                              		// 0x0208 (0x0004) [0x0000000000002000] [0x00000400] ( CPF_Transient )
	unsigned long                                      bIsInactive : 1;                                  		// 0x0208 (0x0004) [0x0000000000000020] [0x00000800] ( CPF_Net )
	unsigned long                                      bFromPreviousLevel : 1;                           		// 0x0208 (0x0004) [0x0000000000000020] [0x00001000] ( CPF_Net )
	struct FGuid                                       guidUserId;                                       		// 0x020C (0x0010) [0x0000000000002000]              ( CPF_Transient )
	int                                                StartTime;                                        		// 0x021C (0x0004) [0x0000000000000020]              ( CPF_Net )
	struct FString                                     StringSpectating;                                 		// 0x0220 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     StringUnknown;                                    		// 0x022C (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	int                                                Kills;                                            		// 0x0238 (0x0004) [0x0000000000000020]              ( CPF_Net )
	class UClass*                                      GameMessageClass;                                 		// 0x023C (0x0004) [0x0000000000000000]              
	float                                              ExactPing;                                        		// 0x0240 (0x0004) [0x0000000000000000]              
	struct FString                                     SavedNetworkAddress;                              		// 0x0244 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FUniqueNetId                                UniqueId;                                         		// 0x0250 (0x0008) [0x0000000000000020]              ( CPF_Net )
	struct FName                                       SessionName;                                      		// 0x0258 (0x0008) [0x0000000000000002]              ( CPF_Const )
	struct FAutomatedTestingDatum                      AutomatedTestingData;                             		// 0x0260 (0x0008) [0x0000000000000000]              
	int                                                StatConnectionCounts;                             		// 0x0268 (0x0004) [0x0000000000000000]              
	int                                                StatPingTotals;                                   		// 0x026C (0x0004) [0x0000000000000000]              
	int                                                StatPingMin;                                      		// 0x0270 (0x0004) [0x0000000000000000]              
	int                                                StatPingMax;                                      		// 0x0274 (0x0004) [0x0000000000000000]              
	int                                                StatPKLTotal;                                     		// 0x0278 (0x0004) [0x0000000000000000]              
	int                                                StatPKLMin;                                       		// 0x027C (0x0004) [0x0000000000000000]              
	int                                                StatPKLMax;                                       		// 0x0280 (0x0004) [0x0000000000000000]              
	int                                                StatMaxInBPS;                                     		// 0x0284 (0x0004) [0x0000000000000000]              
	int                                                StatAvgInBPS;                                     		// 0x0288 (0x0004) [0x0000000000000000]              
	int                                                StatMaxOutBPS;                                    		// 0x028C (0x0004) [0x0000000000000000]              
	int                                                StatAvgOutBPS;                                    		// 0x0290 (0x0004) [0x0000000000000000]              
	class UTexture2D*                                  Avatar;                                           		// 0x0294 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	int                                                ObjectiveScore;                                   		// 0x0298 (0x0004) [0x0000000000000020]              ( CPF_Net )
	int                                                DamageScore;                                      		// 0x029C (0x0004) [0x0000000000000020]              ( CPF_Net )
public:
};

// Class Engine.TeamInfo
// 0x001C (0x01F4 - 0x01D8)
class ATeamInfo : public AReplicationInfo
{
public:
	struct FString                                     TeamName;                                         		// 0x01D8 (0x000C) [0x0000000000408022]              ( CPF_Const | CPF_Net | CPF_Localized | CPF_NeedCtorLink )
	int                                                Size;                                             		// 0x01E4 (0x0004) [0x0000000000000020]              ( CPF_Net )
	float                                              Score;                                            		// 0x01E8 (0x0004) [0x0000000000000020]              ( CPF_Net )
	int                                                TeamIndex;                                        		// 0x01EC (0x0004) [0x0000000000000020]              ( CPF_Net )
	struct FColor                                      TeamColor;                                        		// 0x01F0 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.Camera
// 0x0278 (0x0450 - 0x01D8)
class ACamera : public AActor
{
public:
	class APlayerController*                           PCOwner;                                          		// 0x01D8 (0x0004) [0x0000000000000000]              
	struct FName                                       CameraStyle;                                      		// 0x01DC (0x0008) [0x0000000000000000]              
	float                                              DefaultFOV;                                       		// 0x01E4 (0x0004) [0x0000000000000000]              
	unsigned long                                      bLockedFOV : 1;                                   		// 0x01E8 (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bConstrainAspectRatio : 1;                        		// 0x01E8 (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bHideBlackBars : 1;                               		// 0x01E8 (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bEnableFading : 1;                                		// 0x01E8 (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bFadeAudio : 1;                                   		// 0x01E8 (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bForceDisableTemporalAA : 1;                      		// 0x01E8 (0x0004) [0x0000000000002000] [0x00000020] ( CPF_Transient )
	unsigned long                                      bEnableColorScaling : 1;                          		// 0x01E8 (0x0004) [0x0000000000000000] [0x00000040] 
	unsigned long                                      bEnableColorScaleInterp : 1;                      		// 0x01E8 (0x0004) [0x0000000000000000] [0x00000080] 
	unsigned long                                      bUseClientSideCameraUpdates : 1;                  		// 0x01E8 (0x0004) [0x0000000000000000] [0x00000100] 
	unsigned long                                      bDebugClientSideCamera : 1;                       		// 0x01E8 (0x0004) [0x0000000000000000] [0x00000200] 
	unsigned long                                      bShouldSendClientSideCameraUpdate : 1;            		// 0x01E8 (0x0004) [0x0000000000000000] [0x00000400] 
	float                                              LockedFOV;                                        		// 0x01EC (0x0004) [0x0000000000000000]              
	float                                              ConstrainedAspectRatio;                           		// 0x01F0 (0x0004) [0x0000000000000000]              
	float                                              DefaultAspectRatio;                               		// 0x01F4 (0x0004) [0x0000000000000000]              
	float                                              OffAxisYawAngle;                                  		// 0x01F8 (0x0004) [0x0000000000000000]              
	float                                              OffAxisPitchAngle;                                		// 0x01FC (0x0004) [0x0000000000000000]              
	struct FColor                                      FadeColor;                                        		// 0x0200 (0x0004) [0x0000000000000000]              
	float                                              FadeAmount;                                       		// 0x0204 (0x0004) [0x0000000000000000]              
	float                                              CamOverridePostProcessAlpha;                      		// 0x0208 (0x0004) [0x0000000000000000]              
	struct FPostProcessSettings                        CamPostProcessSettings;                           		// 0x020C (0x00EC) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FRenderingPerformanceOverrides              RenderingOverrides;                               		// 0x02F8 (0x0004) [0x0000000000000000]              
	struct FVector                                     ColorScale;                                       		// 0x02FC (0x000C) [0x0000000000000000]              
	struct FVector                                     DesiredColorScale;                                		// 0x0308 (0x000C) [0x0000000000000000]              
	struct FVector                                     OriginalColorScale;                               		// 0x0314 (0x000C) [0x0000000000000000]              
	float                                              ColorScaleInterpDuration;                         		// 0x0320 (0x0004) [0x0000000000000000]              
	float                                              ColorScaleInterpStartTime;                        		// 0x0324 (0x0004) [0x0000000000000000]              
	struct FTCameraCache                               CameraCache;                                      		// 0x0328 (0x0020) [0x0000000000000000]              
	struct FTCameraCache                               LastFrameCameraCache;                             		// 0x0348 (0x0020) [0x0000000000000000]              
	struct FTViewTarget                                ViewTarget;                                       		// 0x0368 (0x002C) [0x0000000000000000]              
	struct FTViewTarget                                PendingViewTarget;                                		// 0x0394 (0x002C) [0x0000000000000000]              
	float                                              BlendTimeToGo;                                    		// 0x03C0 (0x0004) [0x0000000000000000]              
	struct FViewTargetTransitionParams                 BlendParams;                                      		// 0x03C4 (0x0010) [0x0000000000000000]              
	TArray< class UCameraModifier* >                   ModifierList;                                     		// 0x03D4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              FreeCamDistance;                                  		// 0x03E0 (0x0004) [0x0000000000000000]              
	struct FVector                                     FreeCamOffset;                                    		// 0x03E4 (0x000C) [0x0000000000000000]              
	struct FVector2D                                   FadeAlpha;                                        		// 0x03F0 (0x0008) [0x0000000000000000]              
	float                                              FadeTime;                                         		// 0x03F8 (0x0004) [0x0000000000000000]              
	float                                              FadeTimeRemaining;                                		// 0x03FC (0x0004) [0x0000000000000000]              
	TArray< class AEmitterCameraLensEffectBase* >      CameraLensEffects;                                		// 0x0400 (0x000C) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	class UCameraModifier_CameraShake*                 CameraShakeCamMod;                                		// 0x040C (0x0004) [0x0000000004002001]              ( CPF_Edit | CPF_Transient | CPF_EditInline )
	class UClass*                                      CameraShakeCamModClass;                           		// 0x0410 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UCameraAnimInst*                             AnimInstPool[ 0x8 ];                              		// 0x0414 (0x0020) [0x0000000000000000]              
	TArray< class UCameraAnimInst* >                   ActiveAnims;                                      		// 0x0434 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< class UCameraAnimInst* >                   FreeAnims;                                        		// 0x0440 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	class ADynamicCameraActor*                         AnimCameraActor;                                  		// 0x044C (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.CameraActor
// 0x0104 (0x02DC - 0x01D8)
class ACameraActor : public AActor
{
public:
	unsigned long                                      bConstrainAspectRatio : 1;                        		// 0x01D8 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bHideBlackBars : 1;                               		// 0x01D8 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bCamOverridePostProcess : 1;                      		// 0x01D8 (0x0004) [0x0000000020000000] [0x00000004] ( CPF_Deprecated )
	float                                              AspectRatio;                                      		// 0x01DC (0x0004) [0x0000000000000021]              ( CPF_Edit | CPF_Net )
	float                                              FOVAngle;                                         		// 0x01E0 (0x0004) [0x0000000000000021]              ( CPF_Edit | CPF_Net )
	float                                              CamOverridePostProcessAlpha;                      		// 0x01E4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FPostProcessSettings                        CamOverridePostProcess;                           		// 0x01E8 (0x00EC) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class UDrawFrustumComponent*                       DrawFrustum;                                      		// 0x02D4 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
	class UStaticMeshComponent*                        MeshComp;                                         		// 0x02D8 (0x0004) [0x0000000004080008]              ( CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.DynamicCameraActor
// 0x0000 (0x02DC - 0x02DC)
class ADynamicCameraActor : public ACameraActor
{
public:
public:
};

// Class Engine.CameraAnim
// 0x011C (0x0158 - 0x003C)
class UCameraAnim : public UObject
{
public:
	class UInterpGroupCamera*                          CameraInterpGroup;                                		// 0x003C (0x0004) [0x0000000000000000]              
	class UInterpGroup*                                PreviewInterpGroup;                               		// 0x0040 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              AnimLength;                                       		// 0x0044 (0x0004) [0x0000000000000002]              ( CPF_Const )
	struct FBox                                        BoundingBox;                                      		// 0x0048 (0x001C) [0x0000000000000002]              ( CPF_Const )
	struct FPostProcessSettings                        BasePPSettings;                                   		// 0x0064 (0x00EC) [0x0000000000400002]              ( CPF_Const | CPF_NeedCtorLink )
	float                                              BasePPSettingsAlpha;                              		// 0x0150 (0x0004) [0x0000000000000002]              ( CPF_Const )
	float                                              BaseFOV;                                          		// 0x0154 (0x0004) [0x0000000000000002]              ( CPF_Const )
public:
};

// Class Engine.CameraAnimInst
// 0x0180 (0x01BC - 0x003C)
class UCameraAnimInst : public UObject
{
public:
	class UCameraAnim*                                 CamAnim;                                          		// 0x003C (0x0004) [0x0000000000000000]              
	class UInterpGroupInst*                            InterpGroupInst;                                  		// 0x0040 (0x0004) [0x0000000004400008]              ( CPF_ExportObject | CPF_NeedCtorLink | CPF_EditInline )
	float                                              CurTime;                                          		// 0x0044 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned long                                      bLooping : 1;                                     		// 0x0048 (0x0004) [0x0000000000002000] [0x00000001] ( CPF_Transient )
	unsigned long                                      bFinished : 1;                                    		// 0x0048 (0x0004) [0x0000000000002000] [0x00000002] ( CPF_Transient )
	unsigned long                                      bAutoReleaseWhenFinished : 1;                     		// 0x0048 (0x0004) [0x0000000000002000] [0x00000004] ( CPF_Transient )
	unsigned long                                      bBlendingIn : 1;                                  		// 0x0048 (0x0004) [0x0000000000002000] [0x00000008] ( CPF_Transient )
	unsigned long                                      bBlendingOut : 1;                                 		// 0x0048 (0x0004) [0x0000000000002000] [0x00000010] ( CPF_Transient )
	float                                              BlendInTime;                                      		// 0x004C (0x0004) [0x0000000000000000]              
	float                                              BlendOutTime;                                     		// 0x0050 (0x0004) [0x0000000000000000]              
	float                                              CurBlendInTime;                                   		// 0x0054 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              CurBlendOutTime;                                  		// 0x0058 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              PlayRate;                                         		// 0x005C (0x0004) [0x0000000000000000]              
	float                                              BasePlayScale;                                    		// 0x0060 (0x0004) [0x0000000000000000]              
	float                                              TransientScaleModifier;                           		// 0x0064 (0x0004) [0x0000000000000000]              
	float                                              CurrentBlendWeight;                               		// 0x0068 (0x0004) [0x0000000000000000]              
	float                                              RemainingTime;                                    		// 0x006C (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UInterpTrackMove*                            MoveTrack;                                        		// 0x0070 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UInterpTrackInstMove*                        MoveInst;                                         		// 0x0074 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	class UAnimNodeSequence*                           SourceAnimNode;                                   		// 0x0078 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	unsigned char                                      PlaySpace;                                        		// 0x007C (0x0001) [0x0000000000000000]              
	struct FMatrix                                     UserPlaySpaceMatrix;                              		// 0x0080 (0x0040) [0x0000000000002000]              ( CPF_Transient )
	struct FPostProcessSettings                        LastPPSettings;                                   		// 0x00C0 (0x00EC) [0x0000000000402000]              ( CPF_Transient | CPF_NeedCtorLink )
	float                                              LastPPSettingsAlpha;                              		// 0x01AC (0x0004) [0x0000000000002000]              ( CPF_Transient )
	struct FVector                                     LastCameraLoc;                                    		// 0x01B0 (0x000C) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.CameraModifier
// 0x001C (0x0058 - 0x003C)
class UCameraModifier : public UObject
{
public:
	unsigned long                                      bDisabled : 1;                                    		// 0x003C (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bPendingDisable : 1;                              		// 0x003C (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bExclusive : 1;                                   		// 0x003C (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bDebug : 1;                                       		// 0x003C (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	class ACamera*                                     CameraOwner;                                      		// 0x0040 (0x0004) [0x0000000000000000]              
	unsigned char                                      Priority;                                         		// 0x0044 (0x0001) [0x0000000000000000]              
	float                                              AlphaInTime;                                      		// 0x0048 (0x0004) [0x0000000000000000]              
	float                                              AlphaOutTime;                                     		// 0x004C (0x0004) [0x0000000000000000]              
	float                                              Alpha;                                            		// 0x0050 (0x0004) [0x0000000000002000]              ( CPF_Transient )
	float                                              TargetAlpha;                                      		// 0x0054 (0x0004) [0x0000000000002000]              ( CPF_Transient )
public:
};

// Class Engine.CameraModifier_CameraShake
// 0x0010 (0x0068 - 0x0058)
class UCameraModifier_CameraShake : public UCameraModifier
{
public:
	TArray< struct FCameraShakeInstance >              ActiveShakes;                                     		// 0x0058 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	float                                              SplitScreenShakeScale;                            		// 0x0064 (0x0004) [0x0000000000000003]              ( CPF_Edit | CPF_Const )
public:
};

// Class Engine.CameraShake
// 0x007C (0x00B8 - 0x003C)
class UCameraShake : public UObject
{
public:
	unsigned long                                      bSingleInstance : 1;                              		// 0x003C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bRandomAnimSegment : 1;                           		// 0x003C (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	float                                              OscillationDuration;                              		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OscillationBlendInTime;                           		// 0x0044 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              OscillationBlendOutTime;                          		// 0x0048 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FROscillator                                RotOscillation;                                   		// 0x004C (0x0024) [0x0000000000000001]              ( CPF_Edit )
	struct FVOscillator                                LocOscillation;                                   		// 0x0070 (0x0024) [0x0000000000000001]              ( CPF_Edit )
	struct FFOscillator                                FOVOscillation;                                   		// 0x0094 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	class UCameraAnim*                                 Anim;                                             		// 0x00A0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AnimPlayRate;                                     		// 0x00A4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AnimScale;                                        		// 0x00A8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AnimBlendInTime;                                  		// 0x00AC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AnimBlendOutTime;                                 		// 0x00B0 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              RandomAnimSegmentDuration;                        		// 0x00B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.PlatformInterfaceBase
// 0x0018 (0x0054 - 0x003C)
class UPlatformInterfaceBase : public UObject
{
public:
	TArray< struct FDelegateArray >                    AllDelegates;                                     		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __PlatformInterfaceDelegate__Delegate;            		// 0x0048 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.AnalyticEventsBase
// 0x0004 (0x0058 - 0x0054)
class UAnalyticEventsBase : public UPlatformInterfaceBase
{
public:
	unsigned long                                      bSessionInProgress : 1;                           		// 0x0054 (0x0004) [0x0000000000000002] [0x00000001] ( CPF_Const )
public:
};

// Class Engine.CloudStorageBase
// 0x0010 (0x0064 - 0x0054)
class UCloudStorageBase : public UPlatformInterfaceBase
{
public:
	TArray< struct FString >                           LocalCloudFiles;                                  		// 0x0054 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	unsigned long                                      bSuppressDelegateCalls : 1;                       		// 0x0060 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class Engine.FacebookIntegration
// 0x003C (0x0090 - 0x0054)
class UFacebookIntegration : public UPlatformInterfaceBase
{
public:
	struct FString                                     AppID;                                            		// 0x0054 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	struct FString                                     UserName;                                         		// 0x0060 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     UserId;                                           		// 0x006C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     AccessToken;                                      		// 0x0078 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FFacebookFriend >                   FriendsList;                                      		// 0x0084 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.InGameAdManager
// 0x0004 (0x0058 - 0x0054)
class UInGameAdManager : public UPlatformInterfaceBase
{
public:
	unsigned long                                      bShouldPauseWhileAdOpen : 1;                      		// 0x0054 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class Engine.MicroTransactionBase
// 0x0024 (0x0078 - 0x0054)
class UMicroTransactionBase : public UPlatformInterfaceBase
{
public:
	TArray< struct FPurchaseInfo >                     AvailableProducts;                                		// 0x0054 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     LastError;                                        		// 0x0060 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     LastErrorSolution;                                		// 0x006C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.TwitterIntegrationBase
// 0x0000 (0x0054 - 0x0054)
class UTwitterIntegrationBase : public UPlatformInterfaceBase
{
public:
public:
};

// Class Engine.PlatformInterfaceWebResponse
// 0x0068 (0x00A4 - 0x003C)
class UPlatformInterfaceWebResponse : public UObject
{
public:
	struct FString                                     OriginalURL;                                      		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                ResponseCode;                                     		// 0x0048 (0x0004) [0x0000000000000000]              
	int                                                Tag;                                              		// 0x004C (0x0004) [0x0000000000000000]              
	struct FMap_Mirror                                 Headers;                                          		// 0x0050 (0x003C) [0x0000000000001000]              ( CPF_Native )
	struct FString                                     StringResponse;                                   		// 0x008C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< unsigned char >                            BinaryResponse;                                   		// 0x0098 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.BeastLightEnvironmentVolume
// 0x003C (0x0214 - 0x01D8)
class ABeastLightEnvironmentVolume : public AActor
{
public:
	class UBeastLightEnvironment*                      RenderSource;                                     		// 0x01D8 (0x0004) [0x0000000000000000]              
	struct FBox                                        CachedBounds;                                     		// 0x01DC (0x001C) [0x0000000000000000]              
	unsigned long                                      bEnabled : 1;                                     		// 0x01F8 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	struct FVector                                     PointDistance;                                    		// 0x01FC (0x000C) [0x0000000000000001]              ( CPF_Edit )
	unsigned char                                      EdgePolicy;                                       		// 0x0208 (0x0001) [0x0000000000000001]              ( CPF_Edit )
	int                                                Priority;                                         		// 0x020C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UBeastBoxSampleGenerator*                    BoxSampleGenerator;                               		// 0x0210 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.BeastBakeVolume
// 0x0000 (0x0214 - 0x0214)
class ABeastBakeVolume : public AVolume
{
public:
public:
};

// Class Engine.BeastAreaLight
// 0x0000 (0x01E0 - 0x01E0)
class ABeastAreaLight : public ALight
{
public:
public:
};

// Class Engine.BeastWindowLight
// 0x0000 (0x01E0 - 0x01E0)
class ABeastWindowLight : public ALight
{
public:
public:
};

// Class Engine.BeastAreaLightComponent
// 0x000C (0x0224 - 0x0218)
class UBeastAreaLightComponent : public UPointLightComponent
{
public:
	float                                              AreaLightWidth;                                   		// 0x0218 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              AreaLightHeight;                                  		// 0x021C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UDrawBoxComponent*                           PreviewAreaLightPlane;                            		// 0x0220 (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.BeastWindowLightComponent
// 0x0018 (0x0230 - 0x0218)
class UBeastWindowLightComponent : public UPointLightComponent
{
public:
	float                                              WindowLightWidth;                                 		// 0x0218 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              WindowLightHeight;                                		// 0x021C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     WindowLightDirection;                             		// 0x0220 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	class UDrawBoxComponent*                           PreviewWindowLightPlane;                          		// 0x022C (0x0004) [0x000000000408000A]              ( CPF_Const | CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.BeastBoxSampleGenerator
// 0x00A4 (0x00E0 - 0x003C)
class UBeastBoxSampleGenerator : public UObject
{
public:
	int                                                m_xPoints;                                        		// 0x003C (0x0004) [0x0000000000000000]              
	int                                                m_yPoints;                                        		// 0x0040 (0x0004) [0x0000000000000000]              
	int                                                m_zPoints;                                        		// 0x0044 (0x0004) [0x0000000000000000]              
	struct FVector                                     m_distance;                                       		// 0x0048 (0x000C) [0x0000000000000000]              
	unsigned char                                      m_ep;                                             		// 0x0054 (0x0001) [0x0000000000000000]              
	unsigned char                                      UnknownData00[ 0xB ];                             		// 0x0055 (0x000B) MISSED OFFSET
	struct FMatrix                                     m_WorldToLocal;                                   		// 0x0060 (0x0040) [0x0000000000000000]              
	struct FMatrix                                     m_localToWorld;                                   		// 0x00A0 (0x0040) [0x0000000000000000]              
public:
};

// Class Engine.BeastLightEnvironment
// 0x0000 (0x003C - 0x003C)
class UBeastLightEnvironment : public UObject
{
public:
public:
};

// Class Engine.BeastLightEnvironmentBox
// 0x006C (0x00A8 - 0x003C)
class UBeastLightEnvironmentBox : public UBeastLightEnvironment
{
public:
	unsigned char                                      UnknownData00[ 0x4 ];                             		// 0x003C (0x0004) MISSED OFFSET
	struct FMatrix                                     m_WorldToLocal;                                   		// 0x0040 (0x0040) [0x0000000000000000]              
	TArray< struct FSHVectorRGB >                      Points;                                           		// 0x0080 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                PointsX;                                          		// 0x008C (0x0004) [0x0000000000000000]              
	int                                                PointsY;                                          		// 0x0090 (0x0004) [0x0000000000000000]              
	int                                                PointsZ;                                          		// 0x0094 (0x0004) [0x0000000000000000]              
	struct FVector                                     Distance;                                         		// 0x0098 (0x000C) [0x0000000000000000]              
	class UBeastBoxSampleGenerator*                    BoxSampleGenerator;                               		// 0x00A4 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqEvent_HitWall
// 0x0000 (0x0114 - 0x0114)
class USeqEvent_HitWall : public USequenceEvent
{
public:
public:
};

// Class Engine.LocalMessage
// 0x0014 (0x0050 - 0x003C)
class ULocalMessage : public UObject
{
public:
	unsigned long                                      bIsSpecial : 1;                                   		// 0x003C (0x0004) [0x0000000000000000] [0x00000001] 
	unsigned long                                      bIsUnique : 1;                                    		// 0x003C (0x0004) [0x0000000000000000] [0x00000002] 
	unsigned long                                      bIsPartiallyUnique : 1;                           		// 0x003C (0x0004) [0x0000000000000000] [0x00000004] 
	unsigned long                                      bIsConsoleMessage : 1;                            		// 0x003C (0x0004) [0x0000000000000000] [0x00000008] 
	unsigned long                                      bBeep : 1;                                        		// 0x003C (0x0004) [0x0000000000000000] [0x00000010] 
	unsigned long                                      bCountInstances : 1;                              		// 0x003C (0x0004) [0x0000000000000000] [0x00000020] 
	float                                              Lifetime;                                         		// 0x0040 (0x0004) [0x0000000000000000]              
	struct FColor                                      DrawColor;                                        		// 0x0044 (0x0004) [0x0000000000000000]              
	float                                              PosY;                                             		// 0x0048 (0x0004) [0x0000000000000000]              
	int                                                FontSize;                                         		// 0x004C (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_Destroy
// 0x0010 (0x010C - 0x00FC)
class USeqAct_Destroy : public USequenceAction
{
public:
	unsigned long                                      bDestroyBasedActors : 1;                          		// 0x00FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	TArray< class UClass* >                            IgnoreBasedClasses;                               		// 0x0100 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqAct_Teleport
// 0x001C (0x0118 - 0x00FC)
class USeqAct_Teleport : public USequenceAction
{
public:
	unsigned long                                      bUpdateRotation : 1;                              		// 0x00FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bCheckOverlap : 1;                                		// 0x00FC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	float                                              TeleportDistance;                                 		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	TArray< class AVolume* >                           TeleportVolumes;                                  		// 0x0104 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FName                                       BoneName;                                         		// 0x0110 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqAct_SetVelocity
// 0x0014 (0x0110 - 0x00FC)
class USeqAct_SetVelocity : public USequenceAction
{
public:
	struct FVector                                     VelocityDir;                                      		// 0x00FC (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              VelocityMag;                                      		// 0x0108 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bVelocityRelativeToActorRotation : 1;             		// 0x010C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.SeqAct_ToggleHidden
// 0x0010 (0x010C - 0x00FC)
class USeqAct_ToggleHidden : public USeqAct_Toggle
{
public:
	unsigned long                                      bToggleBasedActors : 1;                           		// 0x00FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	TArray< class UClass* >                            IgnoreBasedClasses;                               		// 0x0100 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqAct_AttachToActor
// 0x0024 (0x0120 - 0x00FC)
class USeqAct_AttachToActor : public USequenceAction
{
public:
	unsigned long                                      bDetach : 1;                                      		// 0x00FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bHardAttach : 1;                                  		// 0x00FC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bUseRelativeOffset : 1;                           		// 0x00FC (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bUseRelativeRotation : 1;                         		// 0x00FC (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	struct FName                                       BoneName;                                         		// 0x0100 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FVector                                     RelativeOffset;                                   		// 0x0108 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	struct FRotator                                    RelativeRotation;                                 		// 0x0114 (0x000C) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.OnlineSocialInterface
// 0x0024 (0x0060 - 0x003C)
class UOnlineSocialInterface : public UInterface
{
public:
	struct FScriptDelegate                             __OnQuerySocialPostPrivilegesCompleted__Delegate; 		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnPostImageCompleted__Delegate;                 		// 0x0048 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnPostLinkCompleted__Delegate;                  		// 0x0054 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.OnlineTitleFileCacheInterface
// 0x0018 (0x0054 - 0x003C)
class UOnlineTitleFileCacheInterface : public UInterface
{
public:
	struct FScriptDelegate                             __OnLoadTitleFileComplete__Delegate;              		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnSaveTitleFileComplete__Delegate;              		// 0x0048 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.OnlineTitleFileInterface
// 0x000C (0x0048 - 0x003C)
class UOnlineTitleFileInterface : public UInterface
{
public:
	struct FScriptDelegate                             __OnReadTitleFileComplete__Delegate;              		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.OnlinePartyChatInterface
// 0x0024 (0x0060 - 0x003C)
class UOnlinePartyChatInterface : public UInterface
{
public:
	struct FScriptDelegate                             __OnSendPartyGameInvitesComplete__Delegate;       		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnPartyMemberListChanged__Delegate;             		// 0x0048 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnPartyMembersInfoChanged__Delegate;            		// 0x0054 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.OnlineNewsInterface
// 0x000C (0x0048 - 0x003C)
class UOnlineNewsInterface : public UInterface
{
public:
	struct FScriptDelegate                             __OnReadNewsCompleted__Delegate;                  		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.OnlineStatsInterface
// 0x0024 (0x0060 - 0x003C)
class UOnlineStatsInterface : public UInterface
{
public:
	struct FScriptDelegate                             __OnReadOnlineStatsComplete__Delegate;            		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnFlushOnlineStatsComplete__Delegate;           		// 0x0048 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnRegisterHostStatGuidComplete__Delegate;       		// 0x0054 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.OnlineVoiceInterface
// 0x0018 (0x0054 - 0x003C)
class UOnlineVoiceInterface : public UInterface
{
public:
	struct FScriptDelegate                             __OnPlayerTalkingStateChange__Delegate;           		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnRecognitionComplete__Delegate;                		// 0x0048 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.OnlineGameUpdateInterface
// 0x0030 (0x006C - 0x003C)
class UOnlineGameUpdateInterface : public UInterface
{
public:
	struct FScriptDelegate                             __OnQueryAvailableUpdatesComplete__Delegate;      		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnQueryAvailableUpdatesDownloadComplete__Delegate;		// 0x0048 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnQueryAvailableUpdatesDownloadProgress__Delegate;		// 0x0054 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnQueryAvailableUpdatesDownloadCancel__Delegate;		// 0x0060 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.OnlineContentInterface
// 0x0060 (0x009C - 0x003C)
class UOnlineContentInterface : public UInterface
{
public:
	struct FScriptDelegate                             __OnContentChange__Delegate;                      		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnReadContentComplete__Delegate;                		// 0x0048 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnReadCrossTitleContentComplete__Delegate;      		// 0x0054 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnReadCrossTitleSaveGameDataComplete__Delegate; 		// 0x0060 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnQueryAvailableDownloadsComplete__Delegate;    		// 0x006C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnReadSaveGameDataComplete__Delegate;           		// 0x0078 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnWriteSaveGameDataComplete__Delegate;          		// 0x0084 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnQueryAvailableUpdatesComplete__Delegate;      		// 0x0090 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.OnlineGameInterface
// 0x00CC (0x0108 - 0x003C)
class UOnlineGameInterface : public UInterface
{
public:
	struct FScriptDelegate                             __OnCreateOnlineGameComplete__Delegate;           		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnUpdateOnlineGameComplete__Delegate;           		// 0x0048 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnDestroyOnlineGameComplete__Delegate;          		// 0x0054 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnFindOnlineGamesComplete__Delegate;            		// 0x0060 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnUpdateServerItemComplete__Delegate;           		// 0x006C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnCancelFindOnlineGamesComplete__Delegate;      		// 0x0078 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnQosStatusChanged__Delegate;                   		// 0x0084 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnJoinOnlineGameComplete__Delegate;             		// 0x0090 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnRegisterPlayerComplete__Delegate;             		// 0x009C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnUnregisterPlayerComplete__Delegate;           		// 0x00A8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnStartOnlineGameComplete__Delegate;            		// 0x00B4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnEndOnlineGameComplete__Delegate;              		// 0x00C0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnArbitrationRegistrationComplete__Delegate;    		// 0x00CC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnGameInviteAccepted__Delegate;                 		// 0x00D8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnRecalculateSkillRatingComplete__Delegate;     		// 0x00E4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnMigrateOnlineGameComplete__Delegate;          		// 0x00F0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnJoinMigratedOnlineGameComplete__Delegate;     		// 0x00FC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.OnlineSystemInterface
// 0x003C (0x0078 - 0x003C)
class UOnlineSystemInterface : public UInterface
{
public:
	struct FScriptDelegate                             __OnLinkStatusChange__Delegate;                   		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnExternalUIChange__Delegate;                   		// 0x0048 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnControllerChange__Delegate;                   		// 0x0054 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnConnectionStatusChange__Delegate;             		// 0x0060 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnStorageDeviceChange__Delegate;                		// 0x006C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.OnlinePlayerInterfaceEx
// 0x0024 (0x0060 - 0x003C)
class UOnlinePlayerInterfaceEx : public UInterface
{
public:
	struct FScriptDelegate                             __OnDeviceSelectionComplete__Delegate;            		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnProfileDataChanged__Delegate;                 		// 0x0048 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnReadCrossTitleProfileSettingsComplete__Delegate;		// 0x0054 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.OnlinePlayerInterface
// 0x01E0 (0x021C - 0x003C)
class UOnlinePlayerInterface : public UInterface
{
public:
	struct FScriptDelegate                             __OnLoginChange__Delegate;                        		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnLoginCancelled__Delegate;                     		// 0x0048 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnMutingChange__Delegate;                       		// 0x0054 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnFriendsChange__Delegate;                      		// 0x0060 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnLoginFailed__Delegate;                        		// 0x006C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnLogoutCompleted__Delegate;                    		// 0x0078 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnLoginStatusChange__Delegate;                  		// 0x0084 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnReadProfileSettingsComplete__Delegate;        		// 0x0090 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnWriteProfileSettingsComplete__Delegate;       		// 0x009C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnReadPlayerStorageComplete__Delegate;          		// 0x00A8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnReadPlayerStorageForNetIdComplete__Delegate;  		// 0x00B4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnWritePlayerStorageComplete__Delegate;         		// 0x00C0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnReadFriendsComplete__Delegate;                		// 0x00CC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnKeyboardInputComplete__Delegate;              		// 0x00D8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnAddFriendByNameComplete__Delegate;            		// 0x00E4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnFriendInviteReceived__Delegate;               		// 0x00F0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnReceivedGameInvite__Delegate;                 		// 0x00FC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnJoinFriendGameComplete__Delegate;             		// 0x0108 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnFriendMessageReceived__Delegate;              		// 0x0114 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnFriendMessageSent__Delegate;                  		// 0x0120 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnUnlockAchievementComplete__Delegate;          		// 0x012C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnReadAchievementsComplete__Delegate;           		// 0x0138 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnSearchFriendsComplete__Delegate;              		// 0x0144 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnCreateBuddyAuthorizationComplete__Delegate;   		// 0x0150 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnReadBuddyAuthorizationListComplete__Delegate; 		// 0x015C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnRemoveBuddyAuthorizationComplete__Delegate;   		// 0x0168 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnCreateBuddyRequestComplete__Delegate;         		// 0x0174 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnReadBuddyRequestListComplete__Delegate;       		// 0x0180 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnRemoveBuddyRequestComplete__Delegate;         		// 0x018C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnCreateBuddyImageIndexComplete__Delegate;      		// 0x0198 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnGetBuddyListImageIndexComplete__Delegate;     		// 0x01A4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnGetBuddyImageIndexComplete__Delegate;         		// 0x01B0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnChatConnected__Delegate;                      		// 0x01BC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnChatDisconnected__Delegate;                   		// 0x01C8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnChatEnterChannelComplete__Delegate;           		// 0x01D4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnChatMessageReceived__Delegate;                		// 0x01E0 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnChatUserJoined__Delegate;                     		// 0x01EC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnChatUserParted__Delegate;                     		// 0x01F8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnReadByteDataComplete__Delegate;               		// 0x0204 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnWriteByteDataComplete__Delegate;              		// 0x0210 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.OnlineAccountInterface
// 0x0018 (0x0054 - 0x003C)
class UOnlineAccountInterface : public UInterface
{
public:
	struct FScriptDelegate                             __OnCreateOnlineAccountCompleted__Delegate;       		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnValidateAndSaveKey__Delegate;                 		// 0x0048 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.AccessControl
// 0x00D4 (0x02AC - 0x01D8)
class AAccessControl : public AInfo
{
public:
	TArray< struct FString >                           IPPolicies;                                       		// 0x01D8 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	TArray< struct FUniqueNetId >                      BannedIDs;                                        		// 0x01E4 (0x000C) [0x0000000000444000]              ( CPF_Config | CPF_GlobalConfig | CPF_NeedCtorLink )
	struct FString                                     IPBanned;                                         		// 0x01F0 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     WrongPassword;                                    		// 0x01FC (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NeedPassword;                                     		// 0x0208 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     SessionBanned;                                    		// 0x0214 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     KickedMsg;                                        		// 0x0220 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     DefaultKickReason;                                		// 0x022C (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     IdleKickReason;                                   		// 0x0238 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	class UClass*                                      AdminClass;                                       		// 0x0244 (0x0004) [0x0000000000000000]              
	struct FString                                     AdminPassword;                                    		// 0x0248 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     GamePassword;                                     		// 0x0254 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FString                                     ACDisplayText[ 0x3 ];                             		// 0x0260 (0x0024) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     ACDescText[ 0x3 ];                                		// 0x0284 (0x0024) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	unsigned long                                      bDontAddDefaultAdmin : 1;                         		// 0x02A8 (0x0004) [0x0000000000000000] [0x00000001] 
public:
};

// Class Engine.Admin
// 0x0000 (0x05E0 - 0x05E0)
class AAdmin : public APlayerController
{
public:
public:
};

// Class Engine.ApexDestructibleActorSpawnable
// 0x0000 (0x0218 - 0x0218)
class AApexDestructibleActorSpawnable : public AApexDestructibleActor
{
public:
public:
};

// Class Engine.EmitterSpawnable
// 0x0004 (0x01E8 - 0x01E4)
class AEmitterSpawnable : public AEmitter
{
public:
	class UParticleSystem*                             ParticleTemplate;                                 		// 0x01E4 (0x0004) [0x0000000000000020]              ( CPF_Net )
public:
};

// Class Engine.KAssetSpawnable
// 0x0000 (0x01E8 - 0x01E8)
class AKAssetSpawnable : public AKAsset
{
public:
public:
};

// Class Engine.ActorFactorySkeletalMeshCinematic
// 0x0000 (0x006C - 0x006C)
class UActorFactorySkeletalMeshCinematic : public UActorFactorySkeletalMesh
{
public:
public:
};

// Class Engine.ActorFactorySkeletalMeshMAT
// 0x0000 (0x006C - 0x006C)
class UActorFactorySkeletalMeshMAT : public UActorFactorySkeletalMesh
{
public:
public:
};

// Class Engine.SeqEvent_Death
// 0x0000 (0x0114 - 0x0114)
class USeqEvent_Death : public USequenceEvent
{
public:
public:
};

// Class Engine.SeqAct_ToggleGodMode
// 0x0000 (0x00FC - 0x00FC)
class USeqAct_ToggleGodMode : public USequenceAction
{
public:
public:
};

// Class Engine.SeqAct_ControlMovieTexture
// 0x0004 (0x0100 - 0x00FC)
class USeqAct_ControlMovieTexture : public USequenceAction
{
public:
	class UTextureMovie*                               MovieTexture;                                     		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.CoverReplicator
// 0x000C (0x01E4 - 0x01D8)
class ACoverReplicator : public AReplicationInfo
{
public:
	TArray< struct FCoverReplicationInfo >             CoverReplicationData;                             		// 0x01D8 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.GameMessage
// 0x0114 (0x0164 - 0x0050)
class UGameMessage : public ULocalMessage
{
public:
	struct FString                                     SwitchLevelMessage;                               		// 0x0050 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     LeftMessage;                                      		// 0x005C (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     FailedTeamMessage;                                		// 0x0068 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     FailedPlaceMessage;                               		// 0x0074 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     FailedSpawnMessage;                               		// 0x0080 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     EnteredMessage;                                   		// 0x008C (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     MaxedOutMessage;                                  		// 0x0098 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     ArbitrationMessage;                               		// 0x00A4 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     OvertimeMessage;                                  		// 0x00B0 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     GlobalNameChange;                                 		// 0x00BC (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NewTeamMessage;                                   		// 0x00C8 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NewTeamMessageTrailer;                            		// 0x00D4 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NoNameChange;                                     		// 0x00E0 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     VoteStarted;                                      		// 0x00EC (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     VotePassed;                                       		// 0x00F8 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     MustHaveStats;                                    		// 0x0104 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     CantBeSpectator;                                  		// 0x0110 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     CantBePlayer;                                     		// 0x011C (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     BecameSpectator;                                  		// 0x0128 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NewPlayerMessage;                                 		// 0x0134 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     KickWarning;                                      		// 0x0140 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     NewSpecMessage;                                   		// 0x014C (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     SpecEnteredMessage;                               		// 0x0158 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
public:
};

// Class Engine.DmgType_Suicided
// 0x0000 (0x0064 - 0x0064)
class UDmgType_Suicided : public UKillZDamageType
{
public:
public:
};

// Class Engine.SeqAct_ToggleInput
// 0x0004 (0x0100 - 0x00FC)
class USeqAct_ToggleInput : public USeqAct_Toggle
{
public:
	unsigned long                                      bToggleMovement : 1;                              		// 0x00FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bToggleTurning : 1;                               		// 0x00FC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
public:
};

// Class Engine.SeqAct_ToggleHUD
// 0x0000 (0x00FC - 0x00FC)
class USeqAct_ToggleHUD : public USequenceAction
{
public:
public:
};

// Class Engine.SeqAct_ForceFeedback
// 0x0008 (0x0104 - 0x00FC)
class USeqAct_ForceFeedback : public USequenceAction
{
public:
	class UForceFeedbackWaveform*                      FFWaveform;                                       		// 0x00FC (0x0004) [0x0000000004000001]              ( CPF_Edit | CPF_EditInline )
	class UClass*                                      PredefinedWaveForm;                               		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqAct_ToggleCinematicMode
// 0x0004 (0x0100 - 0x00FC)
class USeqAct_ToggleCinematicMode : public USequenceAction
{
public:
	unsigned long                                      bDisableMovement : 1;                             		// 0x00FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bDisableTurning : 1;                              		// 0x00FC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bHidePlayer : 1;                                  		// 0x00FC (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bDisableInput : 1;                                		// 0x00FC (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
	unsigned long                                      bHideHUD : 1;                                     		// 0x00FC (0x0004) [0x0000000000000001] [0x00000010] ( CPF_Edit )
	unsigned long                                      bDeadBodies : 1;                                  		// 0x00FC (0x0004) [0x0000000000000001] [0x00000020] ( CPF_Edit )
	unsigned long                                      bDroppedPickups : 1;                              		// 0x00FC (0x0004) [0x0000000000000001] [0x00000040] ( CPF_Edit )
public:
};

// Class Engine.SeqAct_ConsoleCommand
// 0x0018 (0x0114 - 0x00FC)
class USeqAct_ConsoleCommand : public USequenceAction
{
public:
	struct FString                                     Command;                                          		// 0x00FC (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FString >                           Commands;                                         		// 0x0108 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqAct_FlyThroughHasEnded
// 0x0000 (0x00FC - 0x00FC)
class USeqAct_FlyThroughHasEnded : public USequenceAction
{
public:
public:
};

// Class Engine.SeqAct_SetSoundMode
// 0x0008 (0x0104 - 0x00FC)
class USeqAct_SetSoundMode : public USequenceAction
{
public:
	class USoundMode*                                  SoundMode;                                        		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bTopPriority : 1;                                 		// 0x0100 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.SplineComponentSimplified
// 0x0000 (0x0218 - 0x0218)
class USplineComponentSimplified : public USplineComponent
{
public:
public:
};

// Class Engine.AnimNotify_PlayFaceFXAnim
// 0x0028 (0x0068 - 0x0040)
class UAnimNotify_PlayFaceFXAnim : public UAnimNotify_Scripted
{
public:
	class UFaceFXAnimSet*                              FaceFXAnimSetRef;                                 		// 0x0040 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FString                                     GroupName;                                        		// 0x0044 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	struct FString                                     AnimName;                                         		// 0x0050 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	class USoundCue*                                   SoundCueToPlay;                                   		// 0x005C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bOverridePlayingAnim : 1;                         		// 0x0060 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              PlayFrequency;                                    		// 0x0064 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.BroadcastHandler
// 0x0008 (0x01E0 - 0x01D8)
class ABroadcastHandler : public AInfo
{
public:
	int                                                SentText;                                         		// 0x01D8 (0x0004) [0x0000000000000000]              
	unsigned long                                      bMuteSpectators : 1;                              		// 0x01DC (0x0004) [0x0000000000004000] [0x00000001] ( CPF_Config )
public:
};

// Class Engine.ColorScaleVolume
// 0x0010 (0x0224 - 0x0214)
class AColorScaleVolume : public AVolume
{
public:
	struct FVector                                     ColorScale;                                       		// 0x0214 (0x000C) [0x0000000000000001]              ( CPF_Edit )
	float                                              InterpTime;                                       		// 0x0220 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.DebugCameraHUD
// 0x0000 (0x0460 - 0x0460)
class ADebugCameraHUD : public AHUD
{
public:
public:
};

// Class Engine.DebugCameraInput
// 0x0000 (0x0258 - 0x0258)
class UDebugCameraInput : public UPlayerInput
{
public:
public:
};

// Class Engine.VolumeTimer
// 0x0004 (0x01DC - 0x01D8)
class AVolumeTimer : public AInfo
{
public:
	class APhysicsVolume*                              V;                                                		// 0x01D8 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.SeqAct_SetDamageInstigator
// 0x0004 (0x0100 - 0x00FC)
class USeqAct_SetDamageInstigator : public USequenceAction
{
public:
	class AActor*                                      DamageInstigator;                                 		// 0x00FC (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.DmgType_Crushed
// 0x0000 (0x0064 - 0x0064)
class UDmgType_Crushed : public UDamageType
{
public:
public:
};

// Class Engine.DmgType_Fell
// 0x0000 (0x0064 - 0x0064)
class UDmgType_Fell : public UDamageType
{
public:
public:
};

// Class Engine.DmgType_Telefragged
// 0x0000 (0x0064 - 0x0064)
class UDmgType_Telefragged : public UDamageType
{
public:
public:
};

// Class Engine.DynamicPhysicsVolume
// 0x0004 (0x0258 - 0x0254)
class ADynamicPhysicsVolume : public APhysicsVolume
{
public:
	unsigned long                                      bEnabled : 1;                                     		// 0x0254 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.DynamicSMActor_Spawnable
// 0x0000 (0x0214 - 0x0214)
class ADynamicSMActor_Spawnable : public ADynamicSMActor
{
public:
public:
};

// Class Engine.DynamicTriggerVolume
// 0x0004 (0x0218 - 0x0214)
class ADynamicTriggerVolume : public ATriggerVolume
{
public:
	unsigned long                                      bEnabled : 1;                                     		// 0x0214 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.SeqAct_SetParticleSysParam
// 0x0014 (0x0110 - 0x00FC)
class USeqAct_SetParticleSysParam : public USequenceAction
{
public:
	TArray< struct FParticleSysParam >                 InstanceParameters;                               		// 0x00FC (0x000C) [0x0000000004480009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_NeedCtorLink | CPF_EditInline )
	unsigned long                                      bOverrideScalar : 1;                              		// 0x0108 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	float                                              ScalarValue;                                      		// 0x010C (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.ExponentialHeightFog
// 0x0008 (0x01E0 - 0x01D8)
class AExponentialHeightFog : public AInfo
{
public:
	class UExponentialHeightFogComponent*              Component;                                        		// 0x01D8 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	unsigned long                                      bEnabled : 1;                                     		// 0x01DC (0x0004) [0x0000000000000020] [0x00000001] ( CPF_Net )
public:
};

// Class Engine.FailedConnect
// 0x0030 (0x0080 - 0x0050)
class UFailedConnect : public ULocalMessage
{
public:
	struct FString                                     FailMessage[ 0x4 ];                               		// 0x0050 (0x0030) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
public:
};

// Class Engine.FracturedSMActorSpawnable
// 0x0000 (0x0240 - 0x0240)
class AFracturedSMActorSpawnable : public AFracturedStaticMeshActor
{
public:
public:
};

// Class Engine.SeqEvent_PlayerSpawned
// 0x0004 (0x0118 - 0x0114)
class USeqEvent_PlayerSpawned : public USequenceEvent
{
public:
	class UObject*                                     SpawnPoint;                                       		// 0x0114 (0x0004) [0x0000000000000000]              
public:
};

// Class Engine.HeightFog
// 0x0008 (0x01E0 - 0x01D8)
class AHeightFog : public AInfo
{
public:
	class UHeightFogComponent*                         Component;                                        		// 0x01D8 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
	unsigned long                                      bEnabled : 1;                                     		// 0x01DC (0x0004) [0x0000000000000020] [0x00000001] ( CPF_Net )
public:
};

// Class Engine.InterpActor_ForCinematic
// 0x0000 (0x0240 - 0x0240)
class AInterpActor_ForCinematic : public AInterpActor
{
public:
public:
};

// Class Engine.MaterialInstanceTimeVaryingActor
// 0x0004 (0x01DC - 0x01D8)
class AMaterialInstanceTimeVaryingActor : public AActor
{
public:
	class UMaterialInstanceTimeVarying*                MatInst;                                          		// 0x01D8 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqAct_AssignController
// 0x0004 (0x0100 - 0x00FC)
class USeqAct_AssignController : public USequenceAction
{
public:
	class UClass*                                      ControllerClass;                                  		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqAct_GiveInventory
// 0x0010 (0x010C - 0x00FC)
class USeqAct_GiveInventory : public USequenceAction
{
public:
	TArray< class UClass* >                            InventoryList;                                    		// 0x00FC (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
	unsigned long                                      bClearExisting : 1;                               		// 0x0108 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bForceReplace : 1;                                		// 0x0108 (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
public:
};

// Class Engine.NavMeshBoundsVolume
// 0x0000 (0x0214 - 0x0214)
class ANavMeshBoundsVolume : public AVolume
{
public:
public:
};

// Class Engine.OnlineCommunityContentInterface
// 0x003C (0x0078 - 0x003C)
class UOnlineCommunityContentInterface : public UInterface
{
public:
	struct FScriptDelegate                             __OnReadContentListComplete__Delegate;            		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnReadFriendsContentListComplete__Delegate;     		// 0x0048 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnUploadContentComplete__Delegate;              		// 0x0054 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnDownloadContentComplete__Delegate;            		// 0x0060 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FScriptDelegate                             __OnGetContentPayloadComplete__Delegate;          		// 0x006C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.OnlineEventsInterface
// 0x0000 (0x003C - 0x003C)
class UOnlineEventsInterface : public UInterface
{
public:
public:
};

// Class Engine.OnlinePlaylistGameTypeProvider
// 0x0024 (0x0088 - 0x0064)
class UOnlinePlaylistGameTypeProvider : public UUIResourceDataProvider
{
public:
	struct FName                                       PlaylistGameTypeName;                             		// 0x0064 (0x0008) [0x0000000000004000]              ( CPF_Config )
	struct FString                                     DisplayName;                                      		// 0x006C (0x000C) [0x000000000040C002]              ( CPF_Const | CPF_Config | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     Description;                                      		// 0x0078 (0x000C) [0x000000000040C002]              ( CPF_Const | CPF_Config | CPF_Localized | CPF_NeedCtorLink )
	int                                                GameTypeId;                                       		// 0x0084 (0x0004) [0x0000000000004000]              ( CPF_Config )
public:
};

// Class Engine.OnlineRecentPlayersList
// 0x0048 (0x0084 - 0x003C)
class UOnlineRecentPlayersList : public UObject
{
public:
	TArray< struct FUniqueNetId >                      RecentPlayers;                                    		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	TArray< struct FRecentParty >                      RecentParties;                                    		// 0x0048 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
	struct FRecentParty                                LastParty;                                        		// 0x0054 (0x0014) [0x0000000000400000]              ( CPF_NeedCtorLink )
	int                                                MaxRecentPlayers;                                 		// 0x0068 (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                MaxRecentParties;                                 		// 0x006C (0x0004) [0x0000000000004000]              ( CPF_Config )
	int                                                RecentPlayersAddIndex;                            		// 0x0070 (0x0004) [0x0000000000000000]              
	int                                                RecentPartiesAddIndex;                            		// 0x0074 (0x0004) [0x0000000000000000]              
	TArray< struct FCurrentPlayerMet >                 CurrentPlayers;                                   		// 0x0078 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.OnlineSuppliedUIInterface
// 0x000C (0x0048 - 0x003C)
class UOnlineSuppliedUIInterface : public UInterface
{
public:
	struct FScriptDelegate                             __OnShowOnlineStatsUIComplete__Delegate;          		// 0x003C (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.PathNode_Dynamic
// 0x0000 (0x02B0 - 0x02B0)
class APathNode_Dynamic : public APathNode
{
public:
public:
};

// Class Engine.SeqEvent_AIReachedRouteActor
// 0x0000 (0x0114 - 0x0114)
class USeqEvent_AIReachedRouteActor : public USequenceEvent
{
public:
public:
};

// Class Engine.SeqEvent_PickupStatusChange
// 0x0000 (0x0114 - 0x0114)
class USeqEvent_PickupStatusChange : public USequenceEvent
{
public:
public:
};

// Class Engine.RadialBlurActor
// 0x0004 (0x01DC - 0x01D8)
class ARadialBlurActor : public AActor
{
public:
	class URadialBlurComponent*                        RadialBlur;                                       		// 0x01D8 (0x0004) [0x0000000004080009]              ( CPF_Edit | CPF_ExportObject | CPF_Component | CPF_EditInline )
public:
};

// Class Engine.SeqAct_ToggleConstraintDrive
// 0x0004 (0x0100 - 0x00FC)
class USeqAct_ToggleConstraintDrive : public USequenceAction
{
public:
	unsigned long                                      bEnableAngularPositionDrive : 1;                  		// 0x00FC (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	unsigned long                                      bEnableAngularVelocityDrive : 1;                  		// 0x00FC (0x0004) [0x0000000000000001] [0x00000002] ( CPF_Edit )
	unsigned long                                      bEnableLinearPositionDrive : 1;                   		// 0x00FC (0x0004) [0x0000000000000001] [0x00000004] ( CPF_Edit )
	unsigned long                                      bEnableLinearvelocityDrive : 1;                   		// 0x00FC (0x0004) [0x0000000000000001] [0x00000008] ( CPF_Edit )
public:
};

// Class Engine.RB_BSJointActor
// 0x0000 (0x01F4 - 0x01F4)
class ARB_BSJointActor : public ARB_ConstraintActor
{
public:
public:
};

// Class Engine.RB_ConstraintActorSpawnable
// 0x0000 (0x01F4 - 0x01F4)
class ARB_ConstraintActorSpawnable : public ARB_ConstraintActor
{
public:
public:
};

// Class Engine.RB_HingeActor
// 0x0000 (0x01F4 - 0x01F4)
class ARB_HingeActor : public ARB_ConstraintActor
{
public:
public:
};

// Class Engine.RB_PrismaticActor
// 0x0000 (0x01F4 - 0x01F4)
class ARB_PrismaticActor : public ARB_ConstraintActor
{
public:
public:
};

// Class Engine.RB_PulleyJointActor
// 0x0000 (0x01F4 - 0x01F4)
class ARB_PulleyJointActor : public ARB_ConstraintActor
{
public:
public:
};

// Class Engine.ReverbVolumeToggleable
// 0x0000 (0x0260 - 0x0260)
class AReverbVolumeToggleable : public AReverbVolume
{
public:
public:
};

// Class Engine.SeqAct_AddRemoveFaceFXAnimSet
// 0x000C (0x0108 - 0x00FC)
class USeqAct_AddRemoveFaceFXAnimSet : public USequenceAction
{
public:
	TArray< class UFaceFXAnimSet* >                    FaceFXAnimSets;                                   		// 0x00FC (0x000C) [0x0000000020400000]              ( CPF_NeedCtorLink | CPF_Deprecated )
public:
};

// Class Engine.SeqAct_AIAbortMoveToActor
// 0x0000 (0x00FC - 0x00FC)
class USeqAct_AIAbortMoveToActor : public USequenceAction
{
public:
public:
};

// Class Engine.SeqAct_MITV_Activate
// 0x0004 (0x0100 - 0x00FC)
class USeqAct_MITV_Activate : public USequenceAction
{
public:
	float                                              DurationOfMITV;                                   		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqAct_SetMatInstTexParam
// 0x0010 (0x010C - 0x00FC)
class USeqAct_SetMatInstTexParam : public USequenceAction
{
public:
	class UMaterialInstanceConstant*                   MatInst;                                          		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UTexture*                                    NewTexture;                                       		// 0x0100 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       ParamName;                                        		// 0x0104 (0x0008) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqAct_SetMatInstVectorParam
// 0x001C (0x0118 - 0x00FC)
class USeqAct_SetMatInstVectorParam : public USequenceAction
{
public:
	class UMaterialInstanceConstant*                   MatInst;                                          		// 0x00FC (0x0004) [0x0000000000000001]              ( CPF_Edit )
	struct FName                                       ParamName;                                        		// 0x0100 (0x0008) [0x0000000000000001]              ( CPF_Edit )
	struct FLinearColor                                VectorValue;                                      		// 0x0108 (0x0010) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqAct_SetSkelControlTarget
// 0x0014 (0x0110 - 0x00FC)
class USeqAct_SetSkelControlTarget : public USequenceAction
{
public:
	struct FName                                       SkelControlName;                                  		// 0x00FC (0x0008) [0x0000000000000001]              ( CPF_Edit )
	TArray< class UObject* >                           TargetActors;                                     		// 0x0104 (0x000C) [0x0000000000400001]              ( CPF_Edit | CPF_NeedCtorLink )
public:
};

// Class Engine.SeqAct_SetVector
// 0x000C (0x0108 - 0x00FC)
class USeqAct_SetVector : public USeqAct_SetSequenceVariable
{
public:
	struct FVector                                     DefaultValue;                                     		// 0x00FC (0x000C) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.SeqAct_ToggleAffectedByHitEffects
// 0x0000 (0x00FC - 0x00FC)
class USeqAct_ToggleAffectedByHitEffects : public USequenceAction
{
public:
public:
};

// Class Engine.SeqAct_UpdatePhysBonesFromAnim
// 0x0000 (0x00FC - 0x00FC)
class USeqAct_UpdatePhysBonesFromAnim : public USequenceAction
{
public:
public:
};

// Class Engine.SeqEvent_LOS
// 0x000C (0x0120 - 0x0114)
class USeqEvent_LOS : public USequenceEvent
{
public:
	float                                              ScreenCenterDistance;                             		// 0x0114 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	float                                              TriggerDistance;                                  		// 0x0118 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	unsigned long                                      bCheckForObstructions : 1;                        		// 0x011C (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
public:
};

// Class Engine.SeqVar_Byte
// 0x0000 (0x0098 - 0x0098)
class USeqVar_Byte : public USequenceVariable
{
public:
public:
};

// Class Engine.SeqVar_Name
// 0x0000 (0x0098 - 0x0098)
class USeqVar_Name : public USequenceVariable
{
public:
public:
};

// Class Engine.SeqVar_Union
// 0x0000 (0x0098 - 0x0098)
class USeqVar_Union : public USequenceVariable
{
public:
public:
};

// Class Engine.SkeletalMeshActorMATSpawnable
// 0x0000 (0x0224 - 0x0224)
class ASkeletalMeshActorMATSpawnable : public ASkeletalMeshActorMAT
{
public:
public:
};

// Class Engine.SkeletalMeshActorMATWalkable
// 0x0000 (0x0224 - 0x0224)
class ASkeletalMeshActorMATWalkable : public ASkeletalMeshActorMAT
{
public:
public:
};

// Class Engine.Trigger_Dynamic
// 0x0000 (0x01E4 - 0x01E4)
class ATrigger_Dynamic : public ATrigger
{
public:
public:
};

// Class Engine.Trigger_LOS
// 0x000C (0x01F0 - 0x01E4)
class ATrigger_LOS : public ATrigger
{
public:
	TArray< class APlayerController* >                 PCsWithLOS;                                       		// 0x01E4 (0x000C) [0x0000000000400000]              ( CPF_NeedCtorLink )
public:
};

// Class Engine.TriggeredPath
// 0x0008 (0x02B8 - 0x02B0)
class ATriggeredPath : public ANavigationPoint
{
public:
	unsigned long                                      bOpen : 1;                                        		// 0x02B0 (0x0004) [0x0000000000000001] [0x00000001] ( CPF_Edit )
	class AActor*                                      MyTrigger;                                        		// 0x02B4 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.TriggerStreamingLevel
// 0x000C (0x01F0 - 0x01E4)
class ATriggerStreamingLevel : public ATrigger
{
public:
	TArray< struct FLevelStreamingData >               Levels;                                           		// 0x01E4 (0x000C) [0x0000000004400001]              ( CPF_Edit | CPF_NeedCtorLink | CPF_EditInline )
public:
};

// Class Engine.UICharacterSummary
// 0x0028 (0x008C - 0x0064)
class UUICharacterSummary : public UUIResourceDataProvider
{
public:
	struct FString                                     ClassPathName;                                    		// 0x0064 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	struct FString                                     CharacterName;                                    		// 0x0070 (0x000C) [0x000000000040C002]              ( CPF_Const | CPF_Config | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     CharacterBio;                                     		// 0x007C (0x000C) [0x000000000040C002]              ( CPF_Const | CPF_Config | CPF_Localized | CPF_NeedCtorLink )
	unsigned long                                      bIsDisabled : 1;                                  		// 0x0088 (0x0004) [0x0000000000004000] [0x00000001] ( CPF_Config )
public:
};

// Class Engine.UIGameInfoSummary
// 0x004C (0x00B0 - 0x0064)
class UUIGameInfoSummary : public UUIResourceDataProvider
{
public:
	struct FString                                     ClassName;                                        		// 0x0064 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	struct FString                                     GameAcronym;                                      		// 0x0070 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	struct FString                                     MapPrefix;                                        		// 0x007C (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	unsigned long                                      bIsTeamGame : 1;                                  		// 0x0088 (0x0004) [0x0000000000004000] [0x00000001] ( CPF_Config )
	unsigned long                                      bIsDisabled : 1;                                  		// 0x0088 (0x0004) [0x0000000000004000] [0x00000002] ( CPF_Config )
	struct FString                                     GameSettingsClassName;                            		// 0x008C (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	struct FString                                     GameName;                                         		// 0x0098 (0x000C) [0x000000000040C002]              ( CPF_Const | CPF_Config | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     Description;                                      		// 0x00A4 (0x000C) [0x000000000040C002]              ( CPF_Const | CPF_Config | CPF_Localized | CPF_NeedCtorLink )
public:
};

// Class Engine.UIMapSummary
// 0x0030 (0x0094 - 0x0064)
class UUIMapSummary : public UUIResourceDataProvider
{
public:
	struct FString                                     MapName;                                          		// 0x0064 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	struct FString                                     ScreenshotPathName;                               		// 0x0070 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	struct FString                                     DisplayName;                                      		// 0x007C (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     Description;                                      		// 0x0088 (0x000C) [0x0000000000408002]              ( CPF_Const | CPF_Localized | CPF_NeedCtorLink )
public:
};

// Class Engine.UIWeaponSummary
// 0x0028 (0x008C - 0x0064)
class UUIWeaponSummary : public UUIResourceDataProvider
{
public:
	struct FString                                     ClassPathName;                                    		// 0x0064 (0x000C) [0x0000000000404000]              ( CPF_Config | CPF_NeedCtorLink )
	struct FString                                     FriendlyName;                                     		// 0x0070 (0x000C) [0x000000000040C002]              ( CPF_Const | CPF_Config | CPF_Localized | CPF_NeedCtorLink )
	struct FString                                     WeaponDescription;                                		// 0x007C (0x000C) [0x000000000040C002]              ( CPF_Const | CPF_Config | CPF_Localized | CPF_NeedCtorLink )
	unsigned long                                      bIsDisabled : 1;                                  		// 0x0088 (0x0004) [0x0000000000004000] [0x00000001] ( CPF_Config )
public:
};

// Class Engine.WaterVolume
// 0x0010 (0x0264 - 0x0254)
class AWaterVolume : public APhysicsVolume
{
public:
	class USoundCue*                                   EntrySound;                                       		// 0x0254 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UClass*                                      EntryActor;                                       		// 0x0258 (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class USoundCue*                                   ExitSound;                                        		// 0x025C (0x0004) [0x0000000000000001]              ( CPF_Edit )
	class UClass*                                      ExitActor;                                        		// 0x0260 (0x0004) [0x0000000000000001]              ( CPF_Edit )
public:
};

// Class Engine.WindDirectionalSource
// 0x0004 (0x01DC - 0x01D8)
class AWindDirectionalSource : public AInfo
{
public:
	class UWindDirectionalSourceComponent*             Component;                                        		// 0x01D8 (0x0004) [0x00000000040A000B]              ( CPF_Edit | CPF_Const | CPF_ExportObject | CPF_EditConst | CPF_Component | CPF_EditInline )
public:
};


#ifdef _MSC_VER
	#pragma pack ( pop )
#endif